{"version":3,"sources":["hooks/useDnD.tsx","hooks/useElementRect.tsx","components/cardlist/styled.ts","util/index.ts","Contexts/DndTaskContext.tsx","components/taskCard/styled.ts","components/taskCard/index.tsx","components/cardlist/index.tsx","components/taskCard/VisualTaskCard.tsx","pages/panel/styles.ts","pages/panel/index.tsx","hooks/useDndTask.tsx","styles/index.ts","components/header/styles.ts","components/header/index.tsx","App.tsx","index.tsx"],"names":["useDnD","elementRef","React","useState","x","y","coord","setCoord","dragging","setDragging","mouseCoord","useRef","mouseOffset","moveDirection","handleMouseUp","window","removeEventListener","handleMouseMove","ev","current","clientX","clientY","settinPosition","posX","posY","rect","getBoundingClientRect","relativeX","relativeY","Math","abs","handleMouseDown","event","preventDefault","addEventListener","useElementRect","index","DOMRect","setRect","getRect","useLayoutEffect","taskRects","ElementContainer","styled","div","height","ElementContent","css","ElementShadow","ElementHeader","NewCardBtn","TaskContainer","DndTaskContext","createContext","listRects","Array","rectInRangeX","width","Card","Shadow","TaskCard","task","listIndex","containerRef","useContext","beginTaskDrag","taskDragging","lindex","taskIndex","moveTaskVertically","saveTaskRect","ref","onMouseDown","onMouseMove","check","checkRangeY","toIndex","title","CardList","list","draggingList","containerRect","contentRect","contentRef","style","top","left","tasks","map","key","id","position","transform","boxShadow","pointerEvents","Container","ListContainter","mock","Panel","props","arr","_","shortid","generate","allLists","setAllLists","setTaskDragging","dragIndexes","setPosition","useCallback","mouseMove","mouseUp","horizontalCheck","length","moveTaskHorizontally","newList","push","splice","toTaskIndex","tmp","xDir","toListIndex","useDndTask","draggedIndex","xDirection","indexOff","newArr","dndContextValue","useMemo","Provider","value","VisualTaskCard","GlobalStyles","createGlobalStyle","theme","HeaderBtnWrapper","attrs","right","HeaderBox","color","transparentize","HeaderAvatar","HeaderTitle","Header","as","size","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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EAAc5E,EACnBiF,KAAML,EAAc7E,IAI5B,kBAAC6C,EAAD,CAAeuB,YAAazC,GAC1B,2BAAIgD,EAAKF,QAEX,kBAAC1B,EAAD,KACG4B,EAAKQ,MAAMC,KAAI,SAAC3B,EAAMO,GAAP,OACd,kBAAC,EAAD,CACEqB,IAAK5B,EAAK6B,GACV7B,KAAMA,EACNC,UAAWA,EACX1B,MAAOgC,QAIb,kBAAClB,EAAD,KACE,kBAAC,IAAD,MACA,0DAGJ,kBAACF,EAAD,CACExC,SAAUA,EACVJ,EAAG6E,EAAc7E,EACjBC,EAAG4E,EAAc5E,EACjBwC,OAAQqC,EAAYrC,WC5Dbe,EAlBE,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMyB,EAAuB,EAAvBA,KAAMD,EAAiB,EAAjBA,IAC9B,OACE,kBAAC3B,EAAD,CACE0B,MAAO,CACLO,SAAU,QACVL,OACAD,MACAO,UAAW,iBACXC,UAAW,kCACXC,cAAe,OACfrC,MAAO,UAGRI,EAAKgB,Q,qdCrBL,IAAMkB,EAAYpD,IAAOC,IAAV,KAOToD,EAAiBrD,IAAOC,IAAV,KCMrBqD,GDEkBtD,IAAOC,IAAV,KCFR,CACX,CACEiC,MAAO,UACPU,MAAO,CACL,eACA,wBACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oEACA,oE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","file":"static/js/main.54d3f3ff.chunk.js","sourcesContent":["import React from \"react\";\nimport Coord from \"../models/Coord\";\n\nexport const useDnD = (\n  elementRef: React.MutableRefObject<HTMLDivElement | null>\n) => {\n  const [coord, setCoord] = React.useState<Coord>({\n    x: 0,\n    y: 0,\n  });\n\n  const [dragging, setDragging] = React.useState(false);\n\n  const mouseCoord = React.useRef<Coord>({\n    x: 0,\n    y: 0,\n  });\n\n  const mouseOffset = React.useRef({\n    x: 0,\n    y: 0,\n  });\n\n  const moveDirection = React.useRef({\n    x: 0,\n    y: 0,\n  });\n\n  const handleMouseDown = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    const rect = (elementRef.current as HTMLDivElement).getBoundingClientRect();\n    mouseOffset.current.x = event.clientX - rect.x;\n    mouseOffset.current.y = event.clientY - rect.y;\n    settinPosition(event.clientX, event.clientY);\n    setDragging(true);\n    window.addEventListener(\"mousemove\", handleMouseMove);\n    window.addEventListener(\"mouseup\", handleMouseUp);\n  };\n\n  const handleMouseUp = () => {\n    window.removeEventListener(\"mousemove\", handleMouseMove);\n    window.removeEventListener(\"mouseup\", handleMouseUp);\n    setCoord({ x: 0, y: 0 });\n    setDragging(false);\n  };\n\n  const handleMouseMove = (ev: MouseEvent) => {\n    mouseCoord.current.x = ev.clientX;\n    mouseCoord.current.y = ev.clientY;\n    settinPosition(ev.clientX, ev.clientY);\n  };\n\n  const settinPosition = (x: number, y: number) => {\n    const posX = x - mouseOffset.current.x;\n    const posY = y - mouseOffset.current.y;\n    const rect = (elementRef.current as HTMLDivElement).getBoundingClientRect();\n    const relativeX = x - rect.x - mouseOffset.current.x;\n    const relativeY = y - rect.y - mouseOffset.current.y;\n    moveDirection.current.x = relativeX / Math.abs(relativeX) || 0;\n    moveDirection.current.y = relativeY / Math.abs(relativeY) || 0;\n    setCoord({\n      x: posX,\n      y: posY,\n    });\n  };\n\n  return {\n    coord,\n    dragging,\n    handleMouseDown,\n    mouseCoord: mouseCoord.current,\n    moveDirection: moveDirection.current,\n  };\n};\n\nexport default useDnD;\n","import React from \"react\";\n\nexport const useElementRect = (\n  index?: number\n): [DOMRect, React.MutableRefObject<HTMLDivElement | null>] => {\n  const [rect, setRect] = React.useState<DOMRect>(new DOMRect());\n  const elementRef = React.useRef<HTMLDivElement | null>(null);\n\n  const getRect = () => {\n    if (elementRef.current) setRect(elementRef.current.getBoundingClientRect());\n  };\n\n  React.useLayoutEffect(() => {\n    getRect();\n  }, []);\n\n  React.useLayoutEffect(() => {\n    getRect();\n  }, [index]);\n\n  return [rect, elementRef];\n};\n\nexport default useElementRect;\n","import styled, { css } from \"styled-components\";\n\ninterface ElementContainerProps {\n  height: number;\n  index: number;\n}\n\nexport const ElementContainer = styled.div<ElementContainerProps>`\n  width: 272px;\n  border-radius: 4px;\n  height: ${({ height }) => height + \"px\"};\n\n  & + div {\n    margin-left: 8px;\n  }\n`;\n\ninterface ElementContentProps {\n  dragging: boolean;\n}\n\nexport const ElementContent = styled.div<ElementContentProps>`\n  width: 272px;\n  flex: none;\n  background: #ebecf0;\n  font-size: 14px;\n  border-radius: 4px;\n  transition: box-shadow 0.2s, transform 0.2s;\n  display: flex;\n  flex-direction: column;\n  max-height: 500px;\n  padding: 0 4px;\n\n  ${({ dragging }) =>\n    dragging &&\n    css`\n      z-index: 2;\n      transform: rotate(5deg);\n      position: fixed;\n      box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.2);\n    `}\n`;\n\ninterface ElementShadowProps {\n  x: number;\n  y: number;\n  height: number;\n  dragging: boolean;\n}\n\nexport const ElementShadow = styled.div<ElementShadowProps>`\n  display: ${({ dragging }) => (dragging ? \"block\" : \"none\")};\n  top: ${({ y }) => y + \"px\"};\n  left: ${({ x }) => x + \"px\"};\n  background: rgba(0, 0, 0, 0.32);\n  width: 272px;\n  height: ${({ height }) => height + \"px\"};\n`;\n\nexport const ElementHeader = styled.div`\n  padding: 12px 8px;\n  color: #172b4d;\n  font-weight: 700;\n`;\n\nexport const NewCardBtn = styled.div`\n  display: flex;\n  padding: 12px 8px;\n`;\n\nexport const TaskContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 4px 8px 4px;\n  flex: 1 1 auto;\n  overflow-y: auto;\n`;\n","import Coord from \"../models/Coord\";\n\nexport let taskRects: DOMRect[][];\nexport let listRects: DOMRect[] = new Array<DOMRect>();\n\nexport const initTaskRect = (arr: DOMRect[][]) => {\n  taskRects = arr;\n};\n\nexport const saveTaskRect = (\n  listIndex: number,\n  taskIndex: number,\n  rect: DOMRect\n) => {\n  taskRects[listIndex][taskIndex] = rect;\n};\n\nexport const saveListRect = (linstIndex: number, rect: DOMRect) => {\n  listRects[linstIndex] = rect;\n};\n\nexport const rectInRangeX = (rect: DOMRect, coord: Coord): boolean => {\n  return coord.x >= rect.x && coord.x <= rect.x + rect.width;\n};\n\nexport const rectInRangeY = (\n  rect: DOMRect,\n  coord: Coord,\n  yDirection: number\n): boolean => {\n  return yDirection > 0\n    ? coord.y >= rect.y + rect.height * 0.6\n    : coord.y <= rect.y + rect.height * 0.4;\n};\n\nexport const checkRangeY = (rect: DOMRect, coord: Coord): number => {\n  if (coord.y >= rect.y + rect.height * 0.5) return 0;\n  else if (coord.y <= rect.y + rect.height * 0.5) return -1;\n  else return 1;\n};\n","import React from \"react\";\n\nexport interface DndTaskContextValue {\n  taskDragging: boolean;\n  listIndex: number;\n  taskIndex: number;\n  beginTaskDrag: (\n    taskIndex: number,\n    listIndex: number,\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    rect: DOMRect\n  ) => void;\n  moveTaskVertically: (toTaskIndex: number) => void;\n}\n\nconst DndTaskContext = React.createContext<DndTaskContextValue | null>(null);\n\nexport default DndTaskContext;\n","import styled, { css } from \"styled-components\";\n\ninterface CardProps {\n  dragging?: boolean;\n}\n\nexport const Card = styled.div<CardProps>`\n  position: relative;\n  max-width: 256px;\n  flex: 1;\n  background: white;\n  padding: 8px;\n  border-radius: 4px;\n  border-bottom: 1px solid ${({ dragging }) => (dragging ? \"#ddd\" : \"#bbb\")};\n  word-wrap: break-word;\n  font-size: 14px;\n  cursor: pointer;\n  box-shadow: 0 0 2px rgba(0, 0, 0, 0.1);\n\n  & + div {\n    margin-top: 8px;\n  }\n\n  &:hover {\n    background: #eee;\n  }\n`;\n\ninterface ShadowProps {\n  dragging: boolean;\n}\n\nexport const Shadow = styled.div<ShadowProps>`\n  display: ${({ dragging }) => (dragging ? \"block\" : \"none\")};\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  border-radius: inherit;\n  background: #ddd;\n`;\n","import React from \"react\";\nimport DndTaskContext, {\n  DndTaskContextValue,\n} from \"../../Contexts/DndTaskContext\";\nimport Task from \"../../models/Task\";\nimport { saveTaskRect, checkRangeY } from \"../../util\";\nimport { Card, Shadow } from \"./styled\";\n\ninterface Props {\n  task: Task;\n  listIndex: number;\n  index: number;\n}\n\nconst TaskCard = ({ task, listIndex, index }: Props) => {\n  const containerRef = React.useRef<HTMLDivElement | null>(null);\n\n  const {\n    beginTaskDrag,\n    taskDragging,\n    listIndex: lindex,\n    taskIndex,\n    moveTaskVertically,\n  } = React.useContext(DndTaskContext) as DndTaskContextValue;\n\n  React.useLayoutEffect(() => {\n    saveTaskRect(\n      listIndex,\n      index,\n      (containerRef.current as HTMLDivElement).getBoundingClientRect()\n    );\n  }, [listIndex, index, task]);\n\n  const dragging = taskDragging && lindex === listIndex && taskIndex === index;\n\n  return (\n    <Card\n      dragging={dragging}\n      ref={containerRef}\n      onMouseDown={(event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        event.preventDefault();\n        beginTaskDrag(\n          index,\n          listIndex,\n          event,\n          (containerRef.current as HTMLDivElement).getBoundingClientRect()\n        );\n      }}\n      onMouseMove={(event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        if (!taskDragging || dragging) return;\n\n        const rect = (containerRef.current as HTMLDivElement).getBoundingClientRect();\n        const coord = {\n          x: event.clientX,\n          y: event.clientY,\n        };\n        const check = checkRangeY(rect, coord);\n\n        if (check > 0) return;\n\n        const toIndex = index + check + 1;\n\n        if (toIndex !== taskIndex) moveTaskVertically(toIndex);\n      }}\n    >\n      {task.title}\n      <Shadow dragging={dragging} />\n    </Card>\n  );\n};\n\nexport default TaskCard;\n","import React from \"react\";\nimport useDnD from \"../../hooks/useDnD\";\nimport useElementRect from \"../../hooks/useElementRect\";\nimport Coord from \"../../models/Coord\";\nimport TaskList from \"../../models/List\";\nimport {\n  ElementContent,\n  ElementContainer,\n  ElementHeader,\n  TaskContainer,\n  NewCardBtn,\n  ElementShadow,\n} from \"./styled\";\nimport { FiPlus } from \"react-icons/fi\";\nimport TaskCard from \"../taskCard\";\nimport { saveListRect } from \"../../util\";\n\ninterface Props {\n  list: TaskList;\n  listIndex: number;\n  draggingList: (xDirection: number, globalCoord: Coord) => boolean;\n}\n\nconst CardList = ({ list, listIndex, draggingList }: Props) => {\n  const [containerRect, containerRef] = useElementRect(listIndex);\n  const [contentRect, contentRef] = useElementRect(listIndex);\n  const {\n    coord,\n    dragging,\n    handleMouseDown,\n    mouseCoord,\n    moveDirection,\n  } = useDnD(containerRef);\n\n  React.useLayoutEffect(() => {\n    saveListRect(listIndex, containerRect);\n  }, [containerRect, listIndex]);\n\n  React.useLayoutEffect(() => {\n    if (dragging) {\n      if (draggingList(moveDirection.x, mouseCoord)) {\n      }\n    }\n  }, [coord]);\n\n  return (\n    <ElementContainer\n      index={listIndex}\n      height={contentRect.height}\n      ref={containerRef}\n    >\n      <ElementContent\n        ref={contentRef}\n        dragging={dragging}\n        style={\n          dragging\n            ? {\n                top: coord.y,\n                left: coord.x,\n              }\n            : {\n                top: containerRect.y,\n                left: containerRect.x,\n              }\n        }\n      >\n        <ElementHeader onMouseDown={handleMouseDown}>\n          <p>{list.title}</p>\n        </ElementHeader>\n        <TaskContainer>\n          {list.tasks.map((task, taskIndex) => (\n            <TaskCard\n              key={task.id}\n              task={task}\n              listIndex={listIndex}\n              index={taskIndex}\n            />\n          ))}\n        </TaskContainer>\n        <NewCardBtn>\n          <FiPlus />\n          <p>Adicionar outro cartão</p>\n        </NewCardBtn>\n      </ElementContent>\n      <ElementShadow\n        dragging={dragging}\n        x={containerRect.x}\n        y={containerRect.y}\n        height={contentRect.height}\n      />\n    </ElementContainer>\n  );\n};\nexport default CardList;\n","import React from \"react\";\nimport Task from \"../../models/Task\";\nimport { Card } from \"./styled\";\n\ninterface Props {\n  task: Task;\n  left: number;\n  top: number;\n}\n\nconst TaskCard = ({ task, left, top }: Props) => {\n  return (\n    <Card\n      style={{\n        position: \"fixed\",\n        left,\n        top,\n        transform: \"rotate(2.5deg)\",\n        boxShadow: \"5px 5px 20px rgba(0, 0, 0, 0.3)\",\n        pointerEvents: \"none\",\n        width: \"272px\",\n      }}\n    >\n      {task.title}\n    </Card>\n  );\n};\n\nexport default TaskCard;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: relative;\n  flex: 1;\n  overflow-x: auto;\n  overflow-y: hidden;\n`;\n\nexport const ListContainter = styled.div`\n  position: absolute;\n  display: flex;\n  padding: 8px;\n  height: 100%;\n  align-items: flex-start;\n`;\n\nexport const FakeCard = styled.div`\n  position: fixed;\n  background: red;\n  width: 272px;\n  height: 50px;\n`;\n","import React from \"react\";\nimport shortid from \"shortid\";\nimport CardList from \"../../components/cardlist\";\nimport VisualTaskCard from \"../../components/taskCard/VisualTaskCard\";\nimport DndTaskContext, {\n  DndTaskContextValue,\n} from \"../../Contexts/DndTaskContext\";\nimport { useDndTask } from \"../../hooks/useDndTask\";\nimport Coord from \"../../models/Coord\";\nimport TaskList from \"../../models/List\";\nimport { initTaskRect, listRects, rectInRangeX, taskRects } from \"../../util\";\nimport { Container, ListContainter } from \"./styles\";\n\ninterface Props {}\n\nconst mock = [\n  {\n    title: \"Backlog\",\n    tasks: [\n      \"backlog task\",\n      \"anothter backlog task\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"A very looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong task\",\n    ],\n  },\n  {\n    title: \"To dos\",\n    tasks: [\"a todo task\"],\n  },\n  {\n    title: \"Done\",\n    tasks: [\"a done task\"],\n  },\n];\n\nconst Panel = (props: Props) => {\n  if (!taskRects)\n    initTaskRect(mock.map((list) => list.tasks.map((_) => new DOMRect())));\n\n  const [allLists, setAllLists] = React.useState<TaskList[]>(() => {\n    return mock.map((list) => ({\n      ...list,\n      id: shortid.generate(),\n      tasks: list.tasks.map((task) => ({\n        id: shortid.generate(),\n        title: task,\n      })),\n    }));\n  });\n\n  const {\n    beginTaskDrag,\n    coord,\n    taskDragging,\n    dragIndexes,\n    moveTaskVertically,\n  } = useDndTask(allLists, setAllLists);\n\n  const draggingList = React.useCallback(\n    (draggedIndex: number) => (\n      xDirection: number,\n      mouseCoord: Coord\n    ): boolean => {\n      const indexOff = draggedIndex + xDirection;\n\n      if (\n        indexOff < 0 ||\n        indexOff >= allLists.length ||\n        !rectInRangeX(listRects[indexOff], mouseCoord)\n      )\n        return false;\n\n      const newArr = [...allLists];\n      const tmp = newArr[indexOff];\n      newArr[indexOff] = newArr[draggedIndex];\n      newArr[draggedIndex] = tmp;\n\n      setAllLists(newArr);\n      return true;\n    },\n    [allLists]\n  );\n\n  const dndContextValue: DndTaskContextValue = React.useMemo(\n    () => ({\n      beginTaskDrag,\n      taskDragging,\n      taskIndex: dragIndexes.taskIndex,\n      listIndex: dragIndexes.listIndex,\n      moveTaskVertically,\n    }),\n    [\n      dragIndexes.taskIndex,\n      dragIndexes.listIndex,\n      taskDragging,\n      beginTaskDrag,\n      moveTaskVertically,\n    ]\n  );\n\n  return (\n    <DndTaskContext.Provider value={dndContextValue}>\n      <Container>\n        <ListContainter>\n          {allLists.map((list, index) => (\n            <CardList\n              draggingList={draggingList(index)}\n              key={list.id}\n              listIndex={index}\n              list={list}\n            />\n          ))}\n        </ListContainter>\n        {taskDragging && (\n          <VisualTaskCard\n            task={allLists[dragIndexes.listIndex].tasks[dragIndexes.taskIndex]}\n            left={coord.x}\n            top={coord.y}\n          />\n        )}\n      </Container>\n    </DndTaskContext.Provider>\n  );\n};\n\nexport default Panel;\n","import React from \"react\";\nimport Coord from \"../models/Coord\";\nimport { taskRects, rectInRangeY, rectInRangeX, listRects } from \"../util\";\nimport TaskList from \"../models/List\";\n\nexport const useDndTask = (\n  allLists: TaskList[],\n  setAllLists: React.Dispatch<React.SetStateAction<TaskList[]>>\n) => {\n  const [taskDragging, setTaskDragging] = React.useState(false);\n  const [coord, setCoord] = React.useState<Coord>({\n    x: 0,\n    y: 0,\n  });\n\n  const mouseOffset = React.useRef<Coord>({\n    x: 0,\n    y: 0,\n  });\n\n  const mouseCoord = React.useRef<Coord>({\n    x: 0,\n    y: 0,\n  });\n\n  const dragIndexes = React.useRef({\n    taskIndex: 0,\n    listIndex: 0,\n  });\n\n  const beginTaskDrag = (\n    taskIndex: number,\n    listIndex: number,\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    rect: DOMRect\n  ) => {\n    mouseOffset.current = {\n      x: event.clientX - rect.x,\n      y: event.clientY - rect.y,\n    };\n    dragIndexes.current = {\n      taskIndex,\n      listIndex,\n    };\n\n    setPosition(event.clientX, event.clientY);\n    window.addEventListener(\"mousemove\", mouseMove);\n    window.addEventListener(\"mouseup\", mouseUp);\n  };\n\n  const setPosition = React.useCallback((x: number, y: number) => {\n    mouseCoord.current = { x, y };\n    setCoord({ x: x - mouseOffset.current.x, y: y - mouseOffset.current.y });\n  }, []);\n\n  const mouseMove = React.useCallback(\n    (ev: MouseEvent) => {\n      setTaskDragging(true);\n      setPosition(ev.clientX, ev.clientY);\n    },\n    [setPosition]\n  );\n\n  const mouseUp = React.useCallback(() => {\n    setTaskDragging(false);\n    window.removeEventListener(\"mousemove\", mouseMove);\n    window.removeEventListener(\"mouseup\", mouseUp);\n  }, [mouseMove]);\n\n  const horizontalCheck = React.useCallback((toIndex: number): boolean => {\n    if (\n      toIndex < 0 ||\n      toIndex > listRects.length - 1 ||\n      !rectInRangeX(listRects[toIndex], mouseCoord.current)\n    )\n      return false;\n\n    return true;\n  }, []);\n\n  const moveTaskHorizontally = React.useCallback(\n    (toIndex: number) => {\n      const newList = [...allLists];\n\n      newList[toIndex].tasks.push(\n        newList[dragIndexes.current.listIndex].tasks[\n          dragIndexes.current.taskIndex\n        ]\n      );\n\n      newList[dragIndexes.current.listIndex].tasks.splice(\n        dragIndexes.current.taskIndex,\n        1\n      );\n\n      dragIndexes.current = {\n        listIndex: toIndex,\n        taskIndex: newList[toIndex].tasks.length - 1,\n      };\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const moveTaskVertically = React.useCallback(\n    (toTaskIndex: number) => {\n      const newList = [...allLists];\n\n      const tmp =\n        newList[dragIndexes.current.listIndex].tasks[\n          dragIndexes.current.taskIndex\n        ];\n\n      newList[dragIndexes.current.listIndex].tasks.splice(\n        dragIndexes.current.taskIndex,\n        1\n      );\n\n      newList[dragIndexes.current.listIndex].tasks.splice(toTaskIndex, 0, tmp);\n\n      dragIndexes.current.taskIndex = toTaskIndex;\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  React.useLayoutEffect(() => {\n    if (taskDragging) {\n      const relativeX =\n        mouseCoord.current.x -\n        mouseOffset.current.x -\n        listRects[dragIndexes.current.listIndex].x;\n\n      const xDir = relativeX / Math.abs(relativeX) || 0;\n\n      const toListIndex = dragIndexes.current.listIndex + xDir;\n\n      if (xDir && horizontalCheck(toListIndex)) {\n        moveTaskHorizontally(toListIndex);\n      }\n    }\n  }, [taskDragging, coord, horizontalCheck, moveTaskHorizontally]);\n\n  return {\n    taskDragging,\n    coord,\n    beginTaskDrag,\n    dragIndexes: dragIndexes.current,\n    moveTaskVertically,\n  };\n};\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\n\n\n\n  * {\n    padding: 0;\n    margin: 0;\n    outline: 0;\n    box-sizing: border-box;\n    font-family: sans-serif;\n  }\n\n  body{\n    color: #172b4d;\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n`;\n\nexport const theme = {};\n","import styled from \"styled-components\";\nimport { transparentize } from \"polished\";\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 40px;\n  padding: 4px;\n\n  display: flex;\n  background: rgba(0, 0, 0, 0.32);\n`;\n\ninterface HeaderBtnWrapperProps {\n  right?: boolean;\n}\n\nexport const HeaderBtnWrapper = styled.div.attrs(\n  ({ right }: HeaderBtnWrapperProps) => ({\n    right: right || false,\n  })\n)`\n  width: 50%;\n  display: grid;\n  column-gap: 4px;\n  grid-auto-flow: column;\n  align-items: center;\n  justify-content: ${({ right }) => (right ? \"flex-end\" : \"flex-start\")};\n`;\n\ninterface HeaderBoxProps {\n  color?: string;\n}\n\nexport const HeaderBox = styled.div.attrs(\n  ({ color }): HeaderBoxProps => ({\n    color: color || \"rgba(255, 255, 255, .32)\",\n  })\n)`\n  border: none;\n  background: ${({ color }) => color};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  column-gap: 8px;\n  height: 32px;\n  min-width: 32px;\n  padding: 8px;\n  color: white;\n  font-weight: bolder;\n  font-size: 14px;\n  border-radius: 4px;\n  transition: background 0.2s;\n\n  &:hover {\n    background: ${({ color }) => transparentize(0.1, color as string)};\n  }\n`;\n\nexport const HeaderAvatar = styled.div`\n  border-radius: 50%;\n  width: 32px;\n  height: 32px;\n  background: #aaa;\n`;\n\nexport const HeaderInput = styled(HeaderBox)`\n  width: 100%;\n`;\n\nexport const HeaderTitle = styled.div`\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  position: absolute;\n  font-family: \"Pacifico\", cursive;\n  font-size: 20px;\n  display: flex;\n  align-items: center;\n  color: white;\n`;\n","import React from \"react\";\n\nimport { BsFillGrid3X3GapFill } from \"react-icons/bs\";\nimport { AiOutlineHome } from \"react-icons/ai\";\nimport { FaTrello } from \"react-icons/fa\";\nimport { FiAlertCircle, FiPlus } from \"react-icons/fi\";\nimport { DiTrello } from \"react-icons/di\";\nimport { MdNotificationsNone } from \"react-icons/md\";\nimport {\n  Container,\n  HeaderBox,\n  HeaderTitle,\n  HeaderBtnWrapper,\n  HeaderAvatar,\n} from \"./styles\";\n\ninterface Props {}\n\nconst Header = (props: Props) => {\n  return (\n    <Container>\n      <HeaderBtnWrapper>\n        <HeaderBox as=\"button\">\n          <BsFillGrid3X3GapFill size={16} color=\"white\" />\n        </HeaderBox>\n        <HeaderBox as=\"button\">\n          <AiOutlineHome size={18} color=\"white\" />\n        </HeaderBox>\n        <HeaderBox as=\"button\">\n          <FaTrello size={16} />\n          <p>Quadros</p>\n        </HeaderBox>\n        <HeaderBox as=\"input\" />\n      </HeaderBtnWrapper>\n      <HeaderTitle>\n        <DiTrello size={24} />\n        Trello\n      </HeaderTitle>\n      <HeaderBtnWrapper right>\n        <HeaderBox as=\"button\">\n          <FiPlus size={20} color=\"white\" />\n        </HeaderBox>\n        <HeaderBox as=\"button\">\n          <FiAlertCircle size={20} color=\"white\" />\n        </HeaderBox>\n        <HeaderBox as=\"button\" color=\"#eb5a46\">\n          <MdNotificationsNone size={20} color=\"white\" />\n        </HeaderBox>\n        <HeaderAvatar />\n      </HeaderBtnWrapper>\n    </Container>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Panel from \"./pages/panel\";\nimport { GlobalStyles, theme } from \"./styles\";\nimport { ThemeProvider } from \"styled-components\";\nimport Header from \"./components/header\";\nimport styled from \"styled-components\";\n\nfunction App() {\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <GlobalStyles />\n        <Container>\n          <Header />\n          <Panel />\n        </Container>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  min-height: 100vh;\n\n  display: flex;\n  flex-direction: column;\n\n  background: #0079bf;\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}