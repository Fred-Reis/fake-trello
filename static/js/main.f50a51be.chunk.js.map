{"version":3,"sources":["util/index.ts","components/newTask/styled.ts","hooks/useKeyMouseToSaveClose.tsx","hooks/useFocusInput.tsx","Contexts/TaskListContext.tsx","components/newTask/index.tsx","Contexts/DndTaskContext.tsx","components/taskCard/styled.ts","components/taskCard/taskMenu/styled.ts","components/taskCard/taskMenu/index.tsx","components/taskCard/index.tsx","components/cardlist/styled.ts","components/cardlist/cardlistAction/styled.ts","components/cardlist/cardlistAction/index.tsx","components/cardlist/cardlistEditTitle/index.tsx","components/cardlist/index.tsx","hooks/useMouseScrollVertical.tsx","components/cardlist/visualList.tsx","components/newList/styled.ts","components/newList/index.tsx","components/taskCard/VisualTaskCard.tsx","hooks/useDnDList.tsx","hooks/useDndTask.tsx","pages/panel/styles.ts","pages/panel/index.tsx","hooks/useTaskList.tsx","hooks/useMouseScrollHorizontal.tsx","styles/index.ts","components/header/styles.ts","components/header/index.tsx","App.tsx","index.tsx"],"names":["listRects","Array","element","getScroll","document","getElementById","scrollLeft","Container","styled","div","theme","taskColor","fontColor","transparentize","green","darken","useKeyMouseToSaveClose","save","close","containerRef","React","useRef","useLayoutEffect","handleKeyDown","ev","key","mouseUpHandler","rect","current","getBoundingClientRect","clientX","x","width","clientY","y","height","window","addEventListener","removeEventListener","useFocusInput","inputRef","focus","TaskListContext","createContext","withTheme","closeNewTask","listIndex","scrolDown","useState","input","setInput","addNewTask","useContext","saveInput","useCallback","ref","value","onChange","e","target","placeholder","onClick","size","color","DndTaskContext","Card","dragging","transparencyLight","css","taskDragging","Shadow","transparency","top","left","EditZone","lighten","OptionsZone","TaskMenu","title","taskIndex","deleteTask","editTaskTitle","useEffect","contentRef","onMouseDown","stopPropagation","TaskCard","task","index","menuOpen","setMenuOpen","beginTaskDrag","lindex","moveTaskVertically","mouseMoveHandle","event","check","coord","checkRangeY","toIndex","handleLeftMouseDown","handleRightMouseDown","handleMouseDown","preventDefault","button","onContextMenu","onMouseMove","CardContent","listColor","CardHeader","selfTaskDragging","NewTaskBtn","TaskContainer","scrollBar","scrollThumb","Division","CardlistAction","menuPosition","openNewTask","deleteList","style","Input","CardlistEditTitle","editListTitle","CardList","list","beginDragList","draggingSelf","draggingList","moveListHorizontally","editing","setEditing","condition","scrollRef","intervalRef","mouseCoordRef","saveMouseCoord","checkMoveScroll","topEdge","bottomEdge","inBottomEdge","inTopEdge","canScrollUp","scrollTop","canScrollDown","scrollHeight","nextScroll","intensity","Math","min","scrollTo","setInterval","clearInterval","useMouseScroll","addingTask","setAddingTask","menuBtnRef","useMemo","linstIndex","scroll","saveListRect","onMouseEnter","val","tasks","map","id","position","transform","boxShadow","pointerEvents","cursor","creating","scrollToRight","addList","creatingNewList","setCreatingNewList","open","background","useDnDList","allLists","setAllLists","setCoord","setDragging","mouseCoord","mouseOffset","listIndexRef","setPosition","mouseMove","body","mouseUp","newList","temp","draggedListIndex","draggedListCoord","useDndTask","setTaskDragging","dragIndexes","horizontalCheck","length","rectInRangeX","moveTaskHorizontally","push","splice","toTaskIndex","tmp","relativeX","getRectX","xDir","abs","toListIndex","ListContainter","mock","Panel","shortid","generate","taskListContextValue","newTask","useTaskList","useDndList","leftEdge","rightEdge","inLeftEdge","inRightEdge","canScrollLeft","canScrollRight","scrollWidth","useMouseScrollHorizontal","dndContextValue","Provider","minWidth","margin","VisualTaskCard","defaultTheme","GlobalStyles","createGlobalStyle","HeaderBox","attrs","right","HeaderTitle","Header","props","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f50a51be.chunk.js","sourcesContent":["import Coord from \"../models/Coord\";\n\nexport let listRects: DOMRect[] = new Array<DOMRect>();\n\nlet element: null | HTMLDivElement = null;\n\nconst getScroll = () => {\n  if (!element) {\n    element = document.getElementById(\"scroll-test\") as HTMLDivElement;\n  }\n\n  return element.scrollLeft;\n};\n\nexport const getRectX = (index: number): number => {\n  const rect = listRects[index];\n  const scroll = getScroll();\n  return rect.x - scroll;\n};\n\nexport const saveListRect = (linstIndex: number, rect: DOMRect) => {\n  const scroll = getScroll();\n\n  rect.x += scroll;\n  listRects[linstIndex] = rect;\n};\n\nexport const rectInRangeX = (rect: DOMRect, coord: Coord): boolean => {\n  const scroll = getScroll();\n  coord.x += scroll;\n\n  return coord.x >= rect.x && coord.x <= rect.x + rect.width;\n};\n\nexport const rectInRangeY = (\n  rect: DOMRect,\n  coord: Coord,\n  yDirection: number\n): boolean => {\n  return yDirection > 0\n    ? coord.y >= rect.y + rect.height * 0.6\n    : coord.y <= rect.y + rect.height * 0.4;\n};\n\nexport const checkRangeY = (rect: DOMRect, coord: Coord): number => {\n  if (coord.y >= rect.y + rect.height * 0.5) return 0;\n  else if (coord.y <= rect.y + rect.height * 0.5) return -1;\n  else return 1;\n};\n","import styled from \"styled-components\";\nimport { transparentize, darken } from \"polished\";\n\nexport const Container = styled.div`\n  /* border: 2px solid red; */\n  margin: 0 4px 8px 4px;\n  display: flex;\n  flex-direction: column;\n\n  div {\n    margin-top: 8px;\n    display: flex;\n    justify-content: start;\n    align-content: center;\n  }\n\n  input {\n    width: 100%;\n    background: ${({ theme }) => theme.taskColor};\n    border-radius: 4px;\n    border: none;\n    border-bottom: 1px solid #bbb;\n    box-shadow: 0 0 2px rgba(0, 0, 0, 0.1);\n    padding: 8px;\n    resize: vertical;\n    font-size: 14px;\n    color: ${({ theme }) => theme.fontColor};\n    padding-bottom: 39px;\n\n    ::placeholder {\n      color: ${({ theme }) => transparentize(0.5, theme.fontColor)};\n    }\n  }\n\n  button {\n    border: none;\n\n    & + button {\n      margin-left: 4px;\n    }\n\n    :nth-of-type(1) {\n      background: ${({ theme }) => theme.green};\n      border-radius: 4px;\n      font-size: 14px;\n      color: white;\n      padding: 8px;\n\n      :hover {\n        background: ${({ theme }) => transparentize(0.2, theme.green)};\n      }\n\n      :active {\n        background: ${({ theme }) => darken(0.2, theme.green)};\n      }\n    }\n\n    :nth-of-type(2) {\n      background: none;\n\n      opacity: 0.5;\n\n      :hover {\n        opacity: 1;\n      }\n    }\n  }\n`;\n","import React from \"react\";\n\nexport default function useKeyMouseToSaveClose(\n  save: () => void,\n  close: () => void\n) {\n  const containerRef = React.useRef<null | HTMLDivElement>(null);\n\n  React.useLayoutEffect(() => {\n    function handleKeyDown(ev: KeyboardEvent) {\n      switch (ev.key) {\n        case \"Enter\":\n          save();\n          break;\n        case \"Escape\":\n          close();\n          break;\n        default:\n          break;\n      }\n    }\n\n    function mouseUpHandler(ev: MouseEvent) {\n      const rect = (containerRef.current as HTMLDivElement).getBoundingClientRect();\n\n      if (\n        ev.clientX < rect.x ||\n        ev.clientX > rect.x + rect.width ||\n        ev.clientY < rect.y ||\n        ev.clientY > rect.y + rect.height\n      ) {\n        save();\n        close();\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    window.addEventListener(\"mousedown\", mouseUpHandler, true);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      window.removeEventListener(\"mousedown\", mouseUpHandler, true);\n    };\n  }, [save, close]);\n\n  return containerRef;\n}\n","import React from \"react\";\n\nexport default function useFocusInput<\n  T extends HTMLInputElement | HTMLTextAreaElement\n>() {\n  const inputRef = React.useRef<null | T>(null);\n\n  React.useLayoutEffect(() => {\n    (inputRef.current as HTMLInputElement).focus();\n  }, []);\n\n  return inputRef;\n}\n","import React from \"react\";\n\nexport interface TaskListContextValue {\n  deleteTask: (taskIndex: number, listIndex: number) => void;\n  addNewTask: (title: string, listIndex: number) => void;\n  deleteList: (listIndex: number) => void;\n  addList: (title: string) => void;\n  editListTitle: (title: string, listIndex: number) => void;\n  editTaskTitle: (title: string, taskIndex: number, listIndex: number) => void;\n}\n\nexport const TaskListContext = React.createContext<TaskListContextValue | null>(\n  null\n);\n","import React from \"react\";\nimport { Container } from \"./styled\";\nimport { FiX } from \"react-icons/fi\";\nimport { withTheme, DefaultTheme } from \"styled-components\";\nimport useKeyMouseToSaveClose from \"../../hooks/useKeyMouseToSaveClose\";\nimport useFocusInput from \"../../hooks/useFocusInput\";\nimport {\n  TaskListContext,\n  TaskListContextValue,\n} from \"../../Contexts/TaskListContext\";\n\ninterface Props {\n  theme: DefaultTheme;\n  listIndex: number;\n  closeNewTask: () => void;\n  scrolDown: () => void;\n}\n\nconst NewTask = ({ theme, closeNewTask, listIndex, scrolDown }: Props) => {\n  const [input, setInput] = React.useState(\"\");\n  const inputRef = useFocusInput<HTMLInputElement>();\n  const { addNewTask } = React.useContext(\n    TaskListContext\n  ) as TaskListContextValue;\n\n  const saveInput = React.useCallback(() => {\n    if (!input) return;\n    addNewTask(input, listIndex);\n    setInput(\"\");\n    scrolDown();\n  }, [setInput, addNewTask, input, listIndex, scrolDown]);\n\n  const containerRef = useKeyMouseToSaveClose(saveInput, closeNewTask);\n\n  return (\n    <Container ref={containerRef}>\n      <input\n        ref={inputRef}\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        placeholder=\"Insira um título para este cartão...\"\n      />\n      <div>\n        <button\n          onClick={() => {\n            saveInput();\n          }}\n        >\n          Adicionar Cartão\n        </button>\n        <button onClick={closeNewTask}>\n          <FiX size={24} color={theme.fontColor} />\n        </button>\n      </div>\n    </Container>\n  );\n};\n\nexport default withTheme(NewTask);\n","import React from \"react\";\n\nexport interface DndTaskContextValue {\n  taskDragging: boolean;\n  listIndex: number;\n  taskIndex: number;\n  beginTaskDrag: (\n    taskIndex: number,\n    listIndex: number,\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    rect: DOMRect\n  ) => void;\n  moveTaskVertically: (toTaskIndex: number) => void;\n}\n\nconst DndTaskContext = React.createContext<DndTaskContextValue | null>(null);\n\nexport default DndTaskContext;\n","import styled, { css } from \"styled-components\";\nimport { darken } from \"polished\";\n\ninterface DragginProps {\n  dragging?: boolean;\n  taskDragging?: boolean;\n}\n\nexport const Card = styled.div<DragginProps>`\n  position: relative;\n  max-width: 256px;\n  flex: 1;\n  background: ${({ theme }) => theme.taskColor};\n  padding: 8px;\n  border-radius: 4px;\n  border-bottom: 1px solid ${({ dragging }) => (dragging ? \"#ddd\" : \"#bbb\")};\n  word-wrap: break-word;\n  font-size: 14px;\n  box-shadow: 0 0 2px rgba(0, 0, 0, 0.1);\n  user-select: none;\n\n  cursor: inherit;\n\n  & > button {\n    position: absolute;\n    top: 4px;\n    right: 4px;\n    border: none;\n    background: none;\n    display: none;\n    opacity: 0.5;\n    border-radius: 4px;\n\n    place-content: center;\n    width: 20px;\n    height: 20px;\n\n    :hover {\n      opacity: 1;\n      background: ${({ theme }) => theme.transparencyLight};\n    }\n  }\n\n  ${({ dragging }) =>\n    !dragging &&\n    css`\n      :hover > button {\n        display: grid;\n      }\n    `}\n\n  p {\n    margin-right: 16px;\n  }\n\n  & + div {\n    margin-top: 8px;\n  }\n\n  ${({ taskDragging }) =>\n    !taskDragging &&\n    css`\n      cursor: pointer;\n\n      &:hover {\n        background: ${({ theme }) => darken(0.1, theme.taskColor)};\n      }\n    `}\n\n  p {\n    opacity: ${({ dragging }) => (dragging ? 0 : 1)};\n  }\n`;\n\nexport const Shadow = styled.div<DragginProps>`\n  display: ${({ dragging }) => (dragging ? \"block\" : \"none\")};\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  border-radius: inherit;\n  background: ${({ theme }) => theme.transparency};\n`;\n","import styled from \"styled-components\";\nimport { darken, lighten } from \"polished\";\n\ninterface MenuProps {\n  top: number;\n  left: number;\n}\n\nexport const Container = styled.div<MenuProps>`\n  position: fixed;\n  z-index: 10;\n  top: 0px;\n  left: 0px;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, .5);\n  /* background:  ${({ theme }) => theme.transparency}; */\n  cursor: auto;\n\n  & > div {\n    position: absolute;\n    top: ${({ top }) => top + \"px\"};\n    left: ${({ left }) => left + \"px\"};\n    display: flex;\n    padding-right: 8px;\n    /* background: ${({ theme }) => theme.transparencyLight};\n    box-shadow: 0 0 10px 10px ${({ theme }) => theme.transparencyLight}; */\n  }\n`;\n\ninterface EditZoneProps {\n  width: number;\n  height: number;\n}\n\nexport const EditZone = styled.div<EditZoneProps>`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: flex-start;\n\n  & > textarea {\n    resize: none;\n    width: ${({ width }) => width + \"px\"};\n    min-height: 100px;\n    height: ${({ height }) => height + \"px\"};\n    font-size: 14px;\n    border: none;\n    border-radius: 4px;\n    padding: 8px;\n  }\n\n  & > button {\n    margin-top: 16px;\n    padding: 8px 16px;\n    background: ${({ theme }) => theme.green};\n    color: white;\n    font-size: 14px;\n    border: none;\n    border-radius: 4px;\n    transition: 0.1s;\n\n    :hover {\n      background: ${({ theme }) => lighten(0.1, theme.green)};\n    }\n\n    :active {\n      background: ${({ theme }) => darken(0.1, theme.green)};\n    }\n  }\n`;\n\nexport const OptionsZone = styled.div`\n  margin-left: 8px;\n\n  & > button {\n    background: ${({ theme }) => theme.transparency};\n    color: white;\n    border: none;\n    border-radius: 4px;\n    padding: 8px 12px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    & > p {\n      margin-left: 8px;\n      font-size: 14px;\n      font-weight: 700;\n    }\n\n    transition: 0.1s;\n\n    :hover {\n      transform: translateX(8px);\n      background: ${({ theme }) => darken(0.1, theme.transparency)};\n    }\n  }\n`;\n","import React from \"react\";\nimport { Container, EditZone, OptionsZone } from \"./styled\";\nimport useKeyMouseToSaveClose from \"../../../hooks/useKeyMouseToSaveClose\";\nimport useFocusInput from \"../../../hooks/useFocusInput\";\nimport { FiArchive } from \"react-icons/fi\";\nimport {\n  TaskListContextValue,\n  TaskListContext,\n} from \"../../../Contexts/TaskListContext\";\n\ninterface Props {\n  close: () => void;\n  rect: DOMRect;\n  title: string;\n  taskIndex: number;\n  listIndex: number;\n}\n\nconst TaskMenu = ({ close, rect, title, listIndex, taskIndex }: Props) => {\n  const inputRef = useFocusInput<HTMLTextAreaElement>();\n  const [input, setInput] = React.useState(\"\");\n  const { deleteTask, editTaskTitle } = React.useContext(\n    TaskListContext\n  ) as TaskListContextValue;\n\n  React.useEffect(() => {\n    setInput(title);\n  }, [title]);\n\n  const save = React.useCallback(() => {\n    if (input === \"\") return;\n    editTaskTitle(input, taskIndex, listIndex);\n    close();\n  }, [input, close, editTaskTitle, taskIndex, listIndex]);\n\n  const contentRef = useKeyMouseToSaveClose(save, close);\n\n  return (\n    <Container\n      onMouseDown={(e) => e.stopPropagation()}\n      top={rect.y}\n      left={rect.x}\n    >\n      <div ref={contentRef}>\n        <EditZone height={rect.height} width={rect.width}>\n          <textarea\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            ref={inputRef}\n          />\n          <button onClick={save}>Salvar</button>\n        </EditZone>\n        <OptionsZone>\n          <button\n            onClick={() => {\n              deleteTask(taskIndex, listIndex);\n            }}\n          >\n            <FiArchive />\n            <p>Arquivar</p>\n          </button>\n        </OptionsZone>\n      </div>\n    </Container>\n  );\n};\n\nexport default TaskMenu;\n","import React from \"react\";\nimport DndTaskContext, {\n  DndTaskContextValue,\n} from \"../../Contexts/DndTaskContext\";\nimport Task from \"../../models/Task\";\nimport { checkRangeY } from \"../../util\";\nimport { Card, Shadow } from \"./styled\";\nimport TaskMenu from \"./taskMenu\";\nimport { FiEdit2 } from \"react-icons/fi\";\n\ninterface Props {\n  task: Task;\n  listIndex: number;\n  index: number;\n}\n\nconst TaskCard = ({ task, listIndex, index }: Props) => {\n  const containerRef = React.useRef<HTMLDivElement | null>(null);\n  const [menuOpen, setMenuOpen] = React.useState(false);\n\n  const {\n    beginTaskDrag,\n    taskDragging,\n    listIndex: lindex,\n    taskIndex,\n    moveTaskVertically,\n  } = React.useContext(DndTaskContext) as DndTaskContextValue;\n\n  const dragging = taskDragging && lindex === listIndex && taskIndex === index;\n\n  const mouseMoveHandle = React.useCallback(\n    (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      if (!taskDragging) return;\n      if (dragging) return;\n      const rect = (containerRef.current as HTMLDivElement).getBoundingClientRect();\n      const coord = {\n        x: event.clientX,\n        y: event.clientY,\n      };\n      const check = checkRangeY(rect, coord);\n      if (check > 0) return;\n      const toIndex = index + check + 1;\n      if (toIndex !== taskIndex) moveTaskVertically(toIndex);\n    },\n    [dragging, index, moveTaskVertically, taskIndex, taskDragging]\n  );\n\n  const handleLeftMouseDown = React.useCallback(\n    (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      beginTaskDrag(\n        index,\n        listIndex,\n        event,\n        (containerRef.current as HTMLDivElement).getBoundingClientRect()\n      );\n    },\n    [beginTaskDrag, index, listIndex]\n  );\n\n  const handleRightMouseDown = React.useCallback(\n    (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      setMenuOpen(true);\n    },\n    []\n  );\n\n  const handleMouseDown = React.useCallback(\n    (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      event.preventDefault();\n      if (event.button === 0) {\n        handleLeftMouseDown(event);\n      } else {\n        handleRightMouseDown(event);\n      }\n    },\n    [handleLeftMouseDown, handleRightMouseDown]\n  );\n\n  return (\n    <>\n      <Card\n        taskDragging={taskDragging}\n        dragging={dragging}\n        ref={containerRef}\n        onContextMenu={(e) => {\n          e.preventDefault();\n        }}\n        onMouseDown={handleMouseDown}\n        onMouseMove={mouseMoveHandle}\n      >\n        <p>{task.title}</p>\n        <button onClick={() => setMenuOpen(true)}>\n          <FiEdit2 size={14} />\n        </button>\n        <Shadow dragging={dragging} />\n        {menuOpen && (\n          <TaskMenu\n            taskIndex={index}\n            listIndex={listIndex}\n            rect={(containerRef.current as HTMLDivElement).getBoundingClientRect()}\n            close={() => setMenuOpen(false)}\n            title={task.title}\n          />\n        )}\n      </Card>\n    </>\n  );\n};\n\nexport default TaskCard;\n","import styled, { css } from \"styled-components\";\n\ninterface draggingProps {\n  dragging?: boolean;\n  selfTaskDragging?: boolean;\n}\n\nexport const Container = styled.div`\n  min-width: 272px;\n\n  height: 100%;\n\n  & + div {\n    margin-left: 8px;\n  }\n`;\n\nexport const CardContent = styled.div<draggingProps>`\n  position: relative;\n  max-width: 272px;\n  width: 100%;\n  padding: 0 4px;\n\n  max-height: 100%;\n\n  /* display: flex;\n  flex-direction: column; */\n\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  row-gap: 4px;\n  /* grid-auto-flow: row; */\n\n  background: ${({ dragging, theme }) => (dragging ? \"none\" : theme.listColor)};\n\n  font-size: 14px;\n  border-radius: 4px;\n`;\n\ninterface ShadowProps {\n  dragging: boolean;\n}\n\nexport const Shadow = styled.div<ShadowProps>`\n  display: ${({ dragging }) => (dragging ? \"block\" : \"none\")};\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  border-radius: inherit;\n  background: ${({ theme }) => theme.transparency};\n`;\n\nexport const CardHeader = styled.div<draggingProps>`\n  opacity: ${({ dragging }) => (dragging ? 0 : 1)};\n  font-weight: 700;\n  cursor: ${({ selfTaskDragging }) =>\n    selfTaskDragging ? \"inherit\" : \"pointer\"};\n  padding-top: 4px;\n  position: relative;\n  display: grid;\n  grid-template-columns: 1fr auto;\n\n  & > div {\n    height: 32px;\n    width: 32px;\n    /* border: 2px solid red; */\n    display: grid;\n    place-content: center;\n    border-radius: 4px;\n    opacity: 0.5;\n\n    :hover {\n      opacity: 1;\n      background: ${({ theme }) => theme.transparencyLight};\n    }\n  }\n\n  p {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    padding-left: 12px;\n    font-weight: 700;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n  }\n`;\n\nexport const NewTaskBtn = styled.div<draggingProps>`\n  opacity: ${({ dragging }) => (dragging ? 0 : 1)};\n  display: grid;\n  grid-auto-flow: column;\n  align-content: center;\n  place-content: start;\n\n  column-gap: 8px;\n  padding: 8px 8px;\n  cursor: ${({ selfTaskDragging }) =>\n    selfTaskDragging ? \"inherit\" : \"pointer\"};\n  margin: 0 4px;\n  margin-bottom: 8px;\n\n  ${({ selfTaskDragging }) =>\n    !selfTaskDragging &&\n    css`\n      :hover {\n        background: rgba(9, 30, 66, 0.08);\n      }\n    `}\n`;\n\nexport const TaskContainer = styled.div<draggingProps>`\n  opacity: ${({ dragging }) => (dragging ? 0 : 1)};\n  display: flex;\n  flex-direction: column;\n  padding: 0 4px 0 4px;\n  flex: 1 1 auto;\n  overflow-y: auto;\n\n  /* width */\n  ::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    border-radius: 10px;\n    background: ${({ theme }) => theme.scrollBar};\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: ${({ theme }) => theme.scrollThumb};\n    border-radius: 10px;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  width: 300px;\n  background: ${({ theme }) => theme.taskColor};\n  padding: 8px 0;\n  border-radius: 4px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n\n  header {\n    position: relative;\n    display: grid;\n    place-content: center;\n    padding: 8px 16px;\n\n    p {\n      font-size: 14px;\n      text-align: center;\n      opacity: 0.5;\n    }\n\n    button {\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      left: 12px;\n      display: grid;\n      place-content: center;\n      border: none;\n      background: none;\n      opacity: 0.5;\n\n      :hover {\n        opacity: 1;\n      }\n    }\n  }\n\n  ul {\n    list-style: none;\n    padding: 8px 0;\n\n    li {\n      button {\n        width: 100%;\n        border: none;\n        background: none;\n        font-size: 14px;\n        padding: 8px 12px;\n        text-align: start;\n\n        :hover {\n          background: ${({ theme }) => theme.listColor};\n        }\n      }\n    }\n  }\n`;\n\nexport const Division = styled.div`\n  height: 1px;\n  background: #ddd;\n  margin: 0 12px;\n`;\n","import React from \"react\";\nimport { Container, Division } from \"./styled\";\nimport { FiX } from \"react-icons/fi\";\nimport Coord from \"../../../models/Coord\";\nimport useKeyMouseToSaveClose from \"../../../hooks/useKeyMouseToSaveClose\";\nimport {\n  TaskListContextValue,\n  TaskListContext,\n} from \"../../../Contexts/TaskListContext\";\n\ninterface Props {\n  menuPosition: Coord;\n  close: () => void;\n  openNewTask: () => void;\n  listIndex: number;\n}\n\nconst CardlistAction = ({\n  menuPosition,\n  close,\n  openNewTask,\n  listIndex,\n}: Props) => {\n  const containerRef = useKeyMouseToSaveClose(() => {}, close);\n  const { deleteList } = React.useContext(\n    TaskListContext\n  ) as TaskListContextValue;\n  return (\n    <Container\n      ref={containerRef}\n      style={{\n        top: menuPosition.y,\n        left: menuPosition.x,\n      }}\n    >\n      <header>\n        <p>Ações da Lista</p>\n        <button onClick={close}>\n          <FiX size={16} />\n        </button>\n      </header>\n      <Division />\n      <ul>\n        <li>\n          <button\n            onClick={() => {\n              openNewTask();\n              close();\n            }}\n          >\n            Adicionar Cartão...\n          </button>\n        </li>\n      </ul>\n      <Division />\n      <ul>\n        <li>\n          <button\n            onClick={() => {\n              deleteList(listIndex);\n              close();\n            }}\n          >\n            Arquivar esta Lista\n          </button>\n        </li>\n      </ul>\n    </Container>\n  );\n};\n\nexport default CardlistAction;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport useKeyMouseToSaveClose from \"../../../hooks/useKeyMouseToSaveClose\";\nimport useFocusInput from \"../../../hooks/useFocusInput\";\nimport {\n  TaskListContext,\n  TaskListContextValue,\n} from \"../../../Contexts/TaskListContext\";\n\ninterface Props {\n  title: string;\n  close: () => void;\n  listIndex: number;\n}\n\nconst CardlistEditTitle = ({ title, close, listIndex }: Props) => {\n  const [input, setInput] = React.useState(\"\");\n\n  const { editListTitle } = React.useContext(\n    TaskListContext\n  ) as TaskListContextValue;\n\n  const save = React.useCallback(() => {\n    if (!input) return;\n    editListTitle(input, listIndex);\n    close();\n  }, [input, close, editListTitle, listIndex]);\n\n  const contentRef = useKeyMouseToSaveClose(save, close);\n  const inputRef = useFocusInput<HTMLInputElement>();\n\n  React.useEffect(() => {\n    setInput(title);\n  }, [title]);\n\n  return (\n    <Container ref={contentRef}>\n      <Input\n        ref={inputRef}\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n      />\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  top: 4px;\n  left: 0;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Input = styled.input`\n  width: calc(100% - 32px);\n  height: calc(100% - 4px);\n  border: none;\n  background: none;\n  padding: 8px 12px;\n  font-size: 14px;\n  font-weight: 700;\n  background: ${({ theme }) => theme.taskColor};\n  border: 2px solid ${({ theme }) => theme.green};\n  border-radius: 4px;\n  color: ${({ theme }) => theme.fontColor};\n`;\n\nexport default CardlistEditTitle;\n","import React from \"react\";\nimport { BsThreeDots } from \"react-icons/bs\";\nimport { FiPlus } from \"react-icons/fi\";\nimport useMouseScroll from \"../../hooks/useMouseScrollVertical\";\nimport TaskList from \"../../models/List\";\nimport Coord from \"../../models/Coord\";\nimport { saveListRect } from \"../../util\";\nimport NewTask from \"../newTask\";\nimport TaskCard from \"../taskCard\";\nimport {\n  CardContent,\n  CardHeader,\n  Container,\n  NewTaskBtn,\n  Shadow,\n  TaskContainer,\n} from \"./styled\";\nimport CardlistAction from \"./cardlistAction\";\nimport CardListEdit from \"./cardlistEditTitle\";\n\ninterface Props {\n  list: TaskList;\n  listIndex: number;\n  selfTaskDragging: boolean;\n  draggingList: boolean;\n  draggingSelf: boolean;\n  beginDragList: (\n    listIndex: number,\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    rect: DOMRect\n  ) => void;\n  moveListHorizontally: (toIndex: number) => void;\n}\n\nconst CardList = ({\n  list,\n  listIndex,\n  selfTaskDragging,\n  beginDragList,\n  draggingSelf,\n  draggingList,\n  moveListHorizontally,\n}: Props) => {\n  const [editing, setEditing] = React.useState(false);\n  const contentRef = React.useRef<HTMLDivElement | null>(null);\n  const { scrollRef, scrolDown } = useMouseScroll(selfTaskDragging);\n  const [addingTask, setAddingTask] = React.useState(false);\n  const [menuOpen, setMenuOpen] = React.useState(false);\n  const menuBtnRef = React.useRef<HTMLDivElement | null>(null);\n\n  const menuPosition: Coord = React.useMemo(() => {\n    if (!menuOpen) return { x: 0, y: 0 };\n    const rect = (menuBtnRef.current as HTMLDivElement).getBoundingClientRect();\n    return {\n      x: rect.x,\n      y: rect.y,\n    };\n  }, [menuOpen]);\n\n  React.useLayoutEffect(() => {\n    saveListRect(\n      listIndex,\n      (contentRef.current as HTMLDivElement).getBoundingClientRect()\n    );\n  }, [listIndex]);\n\n  const handleMouseDown = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    if (event.button !== 0) return;\n\n    beginDragList(\n      listIndex,\n      event,\n      (contentRef.current as HTMLDivElement).getBoundingClientRect()\n    );\n  };\n\n  const handleMouseEnter = () => {\n    if (!draggingList || draggingSelf) return;\n    moveListHorizontally(listIndex);\n  };\n\n  return (\n    <Container onMouseEnter={handleMouseEnter}>\n      <CardContent dragging={draggingSelf} ref={contentRef}>\n        <CardHeader\n          selfTaskDragging={selfTaskDragging}\n          dragging={draggingSelf}\n          onMouseDown={handleMouseDown}\n        >\n          <p onClick={() => setEditing(true)}>\n            {list.title}\n            {editing && (\n              <CardListEdit\n                close={() => setEditing(false)}\n                listIndex={listIndex}\n                title={list.title}\n              />\n            )}\n          </p>\n          <div ref={menuBtnRef} onClick={() => setMenuOpen((val) => !val)}>\n            <BsThreeDots size={16} />\n          </div>\n        </CardHeader>\n        <TaskContainer dragging={draggingSelf} ref={scrollRef}>\n          {list.tasks.map((task, taskIndex) => (\n            <TaskCard\n              key={task.id}\n              task={task}\n              listIndex={listIndex}\n              index={taskIndex}\n            />\n          ))}\n        </TaskContainer>\n        {addingTask ? (\n          <NewTask\n            listIndex={listIndex}\n            closeNewTask={() => setAddingTask(false)}\n            scrolDown={scrolDown}\n          />\n        ) : (\n          <NewTaskBtn\n            selfTaskDragging={selfTaskDragging}\n            dragging={draggingSelf}\n            onClick={() => setAddingTask(true)}\n          >\n            <FiPlus size={16} />\n            <p>Adicionar outro cartão</p>\n          </NewTaskBtn>\n        )}\n        <Shadow dragging={draggingSelf} />\n      </CardContent>\n      {menuOpen && (\n        <CardlistAction\n          listIndex={listIndex}\n          openNewTask={() => setAddingTask(true)}\n          close={() => setMenuOpen(false)}\n          menuPosition={menuPosition}\n        />\n      )}\n    </Container>\n  );\n};\nexport default CardList;\n","import React from \"react\";\nimport Coord from \"../models/Coord\";\nimport { clearInterval, setInterval } from \"timers\";\n\nexport default function useMouseScrollVertical(condition: boolean) {\n  const scrollRef = React.useRef<HTMLDivElement | null>(null);\n  const intervalRef = React.useRef<NodeJS.Timeout | null>(null);\n  const mouseCoordRef = React.useRef<Coord>({ x: 0, y: 0 });\n\n  const edgeSize = 100;\n  const maxStep = 20;\n\n  const saveMouseCoord = React.useCallback((event: MouseEvent) => {\n    mouseCoordRef.current = {\n      x: event.clientX,\n      y: event.clientY,\n    };\n  }, []);\n\n  const checkMoveScroll = React.useCallback(() => {\n    const element = scrollRef.current as HTMLDivElement;\n    const rect = element.getBoundingClientRect();\n    const topEdge = edgeSize + rect.y;\n    const bottomEdge = rect.y + rect.height - edgeSize;\n\n    const inBottomEdge = mouseCoordRef.current.y >= bottomEdge;\n    const inTopEdge = mouseCoordRef.current.y <= topEdge;\n\n    const canScrollUp = element.scrollTop > 0;\n    const canScrollDown =\n      element.scrollTop < element.scrollHeight - rect.height;\n\n    if ((!inBottomEdge || !canScrollDown) && (!inTopEdge || !canScrollUp)) {\n      return false;\n    }\n\n    let nextScroll = element.scrollTop;\n\n    if (canScrollDown && inBottomEdge) {\n      const intensity = (mouseCoordRef.current.y - bottomEdge) / edgeSize;\n      nextScroll = nextScroll + Math.min(maxStep * intensity, maxStep);\n    } else if (canScrollUp && inTopEdge) {\n      const intensity = (topEdge - mouseCoordRef.current.y) / edgeSize;\n      nextScroll = nextScroll - Math.min(maxStep * intensity, maxStep);\n    }\n\n    if (nextScroll !== element.scrollTop) {\n      element.scrollTo({\n        top: nextScroll,\n      });\n    }\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (condition) {\n      intervalRef.current = setInterval(checkMoveScroll, 30);\n      window.addEventListener(\"mousemove\", saveMouseCoord);\n    } else {\n      window.removeEventListener(\"mousemove\", saveMouseCoord);\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    }\n\n    return () => {\n      window.removeEventListener(\"mousemove\", saveMouseCoord);\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, [saveMouseCoord, checkMoveScroll, condition]);\n\n  const scrolDown = React.useCallback(() => {\n    const element = scrollRef.current as HTMLDivElement;\n    element.scrollTo({\n      top: element.scrollHeight,\n    });\n  }, []);\n\n  return { scrollRef, scrolDown };\n}\n","import React from \"react\";\nimport { BsThreeDots } from \"react-icons/bs\";\nimport { FiPlus } from \"react-icons/fi\";\nimport TaskList from \"../../models/List\";\nimport TaskCard from \"../taskCard\";\nimport { CardContent, CardHeader, NewTaskBtn, TaskContainer } from \"./styled\";\n\ninterface Props {\n  list: TaskList;\n  listIndex: number;\n  left: number;\n  top: number;\n  height: number;\n}\n\nconst CardList = ({ list, listIndex, top, left, height }: Props) => {\n  return (\n    <CardContent\n      style={{\n        position: \"fixed\",\n        left,\n        top,\n        height,\n        transform: \"rotate(2.5deg)\",\n        boxShadow: \"5px 5px 20px rgba(0, 0, 0, 0.3)\",\n        pointerEvents: \"none\",\n      }}\n    >\n      <CardHeader\n        style={{\n          cursor: \"grabbing\",\n        }}\n      >\n        <p>{list.title}</p>\n        <div>\n          <BsThreeDots size={16} />\n        </div>\n      </CardHeader>\n      <TaskContainer>\n        {list.tasks.map((task, taskIndex) => (\n          <TaskCard\n            key={task.id}\n            task={task}\n            listIndex={listIndex}\n            index={taskIndex}\n          />\n        ))}\n      </TaskContainer>\n      <NewTaskBtn>\n        <FiPlus />\n        <p>Adicionar outro cartão</p>\n      </NewTaskBtn>\n    </CardContent>\n  );\n};\nexport default CardList;\n","import styled from \"styled-components\";\nimport { transparentize, darken } from \"polished\";\n\ninterface ContainerProps {\n  creating: boolean;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  min-width: 272px;\n  background: ${({ theme, creating }) =>\n    creating ? theme.listColor : theme.transparency};\n  display: flex;\n  flex-direction: column;\n  padding: 4px;\n  border-radius: 4px;\n  cursor: pointer;\n\n  p {\n    display: ${({ creating }) => (creating ? \"none\" : \"block\")};\n    padding: 4px;\n    color: white;\n  }\n\n  & > div {\n    display: ${({ creating }) => (creating ? \"block\" : \"none\")};\n\n    & > div {\n      margin-top: 8px;\n      display: flex;\n      justify-content: start;\n      align-content: center;\n    }\n  }\n\n  input {\n    width: 100%;\n    background: ${({ theme }) => theme.taskColor};\n    border-radius: 4px;\n    border: none;\n    padding: 8px;\n    resize: vertical;\n    font-size: 14px;\n    color: ${({ theme }) => theme.fontColor};\n\n    ::placeholder {\n      color: ${({ theme }) => transparentize(0.5, theme.fontColor)};\n    }\n  }\n\n  button {\n    border: none;\n\n    & + button {\n      margin-left: 4px;\n    }\n\n    :nth-of-type(1) {\n      background: ${({ theme }) => theme.green};\n      border-radius: 4px;\n      font-size: 14px;\n      color: white;\n      padding: 8px;\n\n      :hover {\n        background: ${({ theme }) => transparentize(0.2, theme.green)};\n      }\n\n      :active {\n        background: ${({ theme }) => darken(0.2, theme.green)};\n      }\n    }\n\n    :nth-of-type(2) {\n      background: none;\n\n      opacity: 0.5;\n\n      :hover {\n        opacity: 1;\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { FiX } from \"react-icons/fi\";\nimport { DefaultTheme, withTheme } from \"styled-components\";\nimport useKeyMouseToSaveClose from \"../../hooks/useKeyMouseToSaveClose\";\nimport { Container } from \"./styled\";\nimport {\n  TaskListContextValue,\n  TaskListContext,\n} from \"../../Contexts/TaskListContext\";\n\ninterface Props {\n  theme: DefaultTheme;\n  scrollToRight: () => void;\n}\n\nconst NewList = ({ theme, scrollToRight }: Props) => {\n  const { addList } = React.useContext(TaskListContext) as TaskListContextValue;\n\n  const [creatingNewList, setCreatingNewList] = React.useState(false);\n  const inputRef = React.useRef<HTMLInputElement | null>(null);\n  const [input, setInput] = React.useState(\"\");\n  const saveInput = React.useCallback(() => {\n    if (!creatingNewList || !input) return;\n    addList(input);\n    setInput(\"\");\n    scrollToRight();\n  }, [setInput, input, addList, creatingNewList, scrollToRight]);\n\n  const close = React.useCallback(() => setCreatingNewList(false), []);\n  const open = React.useCallback(() => {\n    setCreatingNewList(true);\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (creatingNewList) {\n      (inputRef.current as HTMLInputElement).focus();\n    }\n  }, [creatingNewList]);\n\n  const containerRef = useKeyMouseToSaveClose(saveInput, close);\n\n  return (\n    <Container creating={creatingNewList} ref={containerRef}>\n      <div>\n        <input\n          ref={inputRef}\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Insira o título da lista...\"\n        />\n        <div>\n          <button\n            onClick={() => {\n              saveInput();\n            }}\n          >\n            Adicionar Lista\n          </button>\n          <button onClick={close}>\n            <FiX size={24} color={theme.fontColor} />\n          </button>\n        </div>\n      </div>\n      <p onClick={open}>Adicionar outra lista</p>\n    </Container>\n  );\n};\n\nexport default withTheme(NewList);\n","import React from \"react\";\nimport Task from \"../../models/Task\";\nimport { Card } from \"./styled\";\nimport { FiEdit2 } from \"react-icons/fi\";\n\ninterface Props {\n  task: Task;\n  left: number;\n  top: number;\n  width: number;\n}\n\nconst TaskCard = ({ task, left, top, width }: Props) => {\n  return (\n    <Card\n      style={{\n        width,\n        position: \"fixed\",\n        left,\n        top,\n        cursor: \"grabbing\",\n        transform: \"rotate(2.5deg)\",\n        boxShadow: \"5px 5px 20px rgba(0, 0, 0, 0.3)\",\n        background: \"white\",\n        pointerEvents: \"none\",\n      }}\n    >\n      <p>{task.title}</p>\n      <button>\n        <FiEdit2 size={14} />\n      </button>\n    </Card>\n  );\n};\n\nexport default TaskCard;\n","import React from \"react\";\nimport Coord from \"../models/Coord\";\nimport TaskList from \"../models/List\";\n\nexport const useDnDList = (\n  allLists: TaskList[],\n  setAllLists: React.Dispatch<React.SetStateAction<TaskList[]>>\n) => {\n  const height = React.useRef(0);\n  const [coord, setCoord] = React.useState<Coord>({\n    x: 0,\n    y: 0,\n  });\n\n  const [dragging, setDragging] = React.useState(false);\n\n  const mouseCoord = React.useRef<Coord>({\n    x: 0,\n    y: 0,\n  });\n\n  const mouseOffset = React.useRef({\n    x: 0,\n    y: 0,\n  });\n\n  const listIndexRef = React.useRef(0);\n\n  const onMouseDown = (\n    listIndex: number,\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    rect: DOMRect\n  ) => {\n    mouseOffset.current = {\n      x: event.clientX - rect.x,\n      y: event.clientY - rect.y,\n    };\n    listIndexRef.current = listIndex;\n    height.current = rect.height;\n    setPosition(event.clientX, event.clientY);\n    window.addEventListener(\"mousemove\", mouseMove);\n    window.addEventListener(\"mouseup\", mouseUp);\n  };\n\n  const setPosition = React.useCallback((x: number, y: number) => {\n    mouseCoord.current = { x, y };\n    setCoord({ x: x - mouseOffset.current.x, y: y - mouseOffset.current.y });\n  }, []);\n\n  const mouseMove = React.useCallback(\n    (ev: MouseEvent) => {\n      setDragging(true);\n      document.body.style.cursor = \"grabbing\";\n      setPosition(ev.clientX, ev.clientY);\n    },\n    [setPosition]\n  );\n\n  const mouseUp = React.useCallback(() => {\n    document.body.style.cursor = \"auto\";\n    setDragging(false);\n    window.removeEventListener(\"mousemove\", mouseMove);\n    window.removeEventListener(\"mouseup\", mouseUp);\n  }, [mouseMove]);\n\n  const moveListHorizontally = React.useCallback(\n    (toIndex: number) => {\n      const newList = [...allLists];\n\n      const temp = newList[listIndexRef.current];\n      newList[listIndexRef.current] = newList[toIndex];\n      newList[toIndex] = temp;\n\n      listIndexRef.current = toIndex;\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  return {\n    beginDragList: onMouseDown,\n    draggedListIndex: listIndexRef.current,\n    draggingList: dragging,\n    draggedListCoord: coord,\n    height: height.current,\n    moveListHorizontally,\n  };\n};\n\nexport default useDnDList;\n","import React from \"react\";\nimport Coord from \"../models/Coord\";\nimport TaskList from \"../models/List\";\nimport { listRects, rectInRangeX, getRectX } from \"../util\";\n\nexport const useDndTask = (\n  allLists: TaskList[],\n  setAllLists: React.Dispatch<React.SetStateAction<TaskList[]>>\n) => {\n  const width = React.useRef(0);\n  const [taskDragging, setTaskDragging] = React.useState(false);\n  const [coord, setCoord] = React.useState<Coord>({\n    x: 0,\n    y: 0,\n  });\n\n  const mouseOffset = React.useRef<Coord>({\n    x: 0,\n    y: 0,\n  });\n\n  const mouseCoord = React.useRef<Coord>({\n    x: 0,\n    y: 0,\n  });\n\n  const dragIndexes = React.useRef({\n    taskIndex: 0,\n    listIndex: 0,\n  });\n\n  const beginTaskDrag = (\n    taskIndex: number,\n    listIndex: number,\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    rect: DOMRect\n  ) => {\n    mouseOffset.current = {\n      x: event.clientX - rect.x,\n      y: event.clientY - rect.y,\n    };\n    dragIndexes.current = {\n      taskIndex,\n      listIndex,\n    };\n    width.current = rect.width;\n    setPosition(event.clientX, event.clientY);\n    window.addEventListener(\"mousemove\", mouseMove);\n    window.addEventListener(\"mouseup\", mouseUp);\n  };\n\n  const setPosition = React.useCallback((x: number, y: number) => {\n    mouseCoord.current = { x, y };\n    setCoord({ x: x - mouseOffset.current.x, y: y - mouseOffset.current.y });\n  }, []);\n\n  const mouseMove = React.useCallback(\n    (ev: MouseEvent) => {\n      setTaskDragging(true);\n      document.body.style.cursor = \"grabbing\";\n      setPosition(ev.clientX, ev.clientY);\n    },\n    [setPosition]\n  );\n\n  const mouseUp = React.useCallback(() => {\n    document.body.style.cursor = \"auto\";\n    setTaskDragging(false);\n    window.removeEventListener(\"mousemove\", mouseMove);\n    window.removeEventListener(\"mouseup\", mouseUp);\n  }, [mouseMove]);\n\n  const horizontalCheck = React.useCallback((toIndex: number): boolean => {\n    if (\n      toIndex < 0 ||\n      toIndex > listRects.length - 1 ||\n      !rectInRangeX(listRects[toIndex], mouseCoord.current)\n    )\n      return false;\n\n    return true;\n  }, []);\n\n  const moveTaskHorizontally = React.useCallback(\n    (toIndex: number) => {\n      const newList = [...allLists];\n\n      newList[toIndex].tasks.push(\n        newList[dragIndexes.current.listIndex].tasks[\n          dragIndexes.current.taskIndex\n        ]\n      );\n\n      newList[dragIndexes.current.listIndex].tasks.splice(\n        dragIndexes.current.taskIndex,\n        1\n      );\n\n      dragIndexes.current = {\n        listIndex: toIndex,\n        taskIndex: newList[toIndex].tasks.length - 1,\n      };\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const moveTaskVertically = React.useCallback(\n    (toTaskIndex: number) => {\n      if (\n        toTaskIndex < 0 ||\n        toTaskIndex >= allLists[dragIndexes.current.listIndex].tasks.length\n      )\n        return;\n\n      const newList = [...allLists];\n\n      const tmp =\n        newList[dragIndexes.current.listIndex].tasks[\n          dragIndexes.current.taskIndex\n        ];\n\n      newList[dragIndexes.current.listIndex].tasks.splice(\n        dragIndexes.current.taskIndex,\n        1\n      );\n\n      newList[dragIndexes.current.listIndex].tasks.splice(toTaskIndex, 0, tmp);\n\n      dragIndexes.current.taskIndex = toTaskIndex;\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  React.useLayoutEffect(() => {\n    if (taskDragging) {\n      const relativeX =\n        mouseCoord.current.x -\n        mouseOffset.current.x -\n        getRectX(dragIndexes.current.listIndex);\n\n      const xDir = relativeX / Math.abs(relativeX) || 0;\n\n      const toListIndex = dragIndexes.current.listIndex + xDir;\n\n      if (xDir && horizontalCheck(toListIndex)) {\n        moveTaskHorizontally(toListIndex);\n      }\n    }\n  }, [taskDragging, coord, horizontalCheck, moveTaskHorizontally]);\n\n  return {\n    taskDragging,\n    coord,\n    beginTaskDrag,\n    dragIndexes: dragIndexes.current,\n    moveTaskVertically,\n    width: width.current,\n  };\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  max-height: calc(100vh - 40px);\n  display: flex;\n  padding-bottom: 8px;\n  flex: 1;\n`;\n\nexport const ListContainter = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n  flex: 1;\n  overflow-x: auto;\n  padding: 8px;\n\n  /* width */\n  ::-webkit-scrollbar {\n    height: 12px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    border-radius: 10px;\n    background: rgba(0, 0, 0, 0.15);\n    margin: 8px;\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: rgba(9, 30, 66, 0.3);\n    border-radius: 10px;\n  }\n`;\n","import React from \"react\";\nimport shortid from \"shortid\";\nimport CardList from \"../../components/cardlist\";\nimport VisualList from \"../../components/cardlist/visualList\";\nimport NewList from \"../../components/newList\";\nimport VisualTaskCard from \"../../components/taskCard/VisualTaskCard\";\nimport DndTaskContext, {\n  DndTaskContextValue,\n} from \"../../Contexts/DndTaskContext\";\nimport useDndList from \"../../hooks/useDnDList\";\nimport { useDndTask } from \"../../hooks/useDndTask\";\nimport useTaskList from \"../../hooks/useTaskList\";\nimport useMouseScrollHorizontal from \"../../hooks/useMouseScrollHorizontal\";\nimport TaskList from \"../../models/List\";\nimport { Container, ListContainter } from \"./styles\";\nimport { TaskListContext } from \"../../Contexts/TaskListContext\";\n\nconst mock = [\n  {\n    title: \"Backlog\",\n    tasks: [\n      \"backlog task\",\n      \"anothter backlog task\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"A very looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong task\",\n    ],\n  },\n  {\n    title: \"To dos\",\n    tasks: [\"a todo task\"],\n  },\n  {\n    title: \"Done\",\n    tasks: [\"a done task\"],\n  },\n];\n\nconst Panel = () => {\n  const [allLists, setAllLists] = React.useState<TaskList[]>(() => {\n    return mock.map((list) => ({\n      ...list,\n      id: shortid.generate(),\n      tasks: list.tasks.map((task) => ({\n        id: shortid.generate(),\n        title: task,\n      })),\n    }));\n  });\n\n  const taskListContextValue = useTaskList(allLists, setAllLists);\n\n  const {\n    beginDragList,\n    draggedListIndex,\n    draggingList,\n    draggedListCoord,\n    height,\n    moveListHorizontally,\n  } = useDndList(allLists, setAllLists);\n\n  const {\n    beginTaskDrag,\n    coord,\n    taskDragging,\n    dragIndexes,\n    moveTaskVertically,\n    width,\n  } = useDndTask(allLists, setAllLists);\n\n  const { scrollRef, scrollToRight } = useMouseScrollHorizontal(draggingList);\n\n  const dndContextValue: DndTaskContextValue = React.useMemo(\n    () => ({\n      beginTaskDrag,\n      taskDragging,\n      taskIndex: dragIndexes.taskIndex,\n      listIndex: dragIndexes.listIndex,\n      moveTaskVertically,\n    }),\n    [\n      dragIndexes.taskIndex,\n      dragIndexes.listIndex,\n      taskDragging,\n      beginTaskDrag,\n      moveTaskVertically,\n    ]\n  );\n\n  // if (!allLists[dragIndexes.listIndex].tasks[dragIndexes.taskIndex]) {\n  //   console.log(allLists);\n  //   console.log(dragIndexes);\n  // }\n\n  return (\n    <TaskListContext.Provider value={taskListContextValue}>\n      <DndTaskContext.Provider value={dndContextValue}>\n        <Container>\n          <ListContainter id=\"scroll-test\" ref={scrollRef}>\n            {allLists.map((list, index) => (\n              <CardList\n                selfTaskDragging={\n                  taskDragging && dragIndexes.listIndex === index\n                }\n                key={list.id}\n                listIndex={index}\n                list={list}\n                beginDragList={beginDragList}\n                draggingSelf={draggingList && draggedListIndex === index}\n                draggingList={draggingList}\n                moveListHorizontally={moveListHorizontally}\n              />\n            ))}\n            <NewList scrollToRight={scrollToRight} />\n            <div\n              style={{\n                minWidth: \"8px\",\n                height: \"100%\",\n                margin: 0,\n              }}\n            />\n          </ListContainter>\n\n          {taskDragging && (\n            <VisualTaskCard\n              task={\n                allLists[dragIndexes.listIndex].tasks[dragIndexes.taskIndex]\n              }\n              left={coord.x}\n              top={coord.y}\n              width={width}\n            />\n          )}\n\n          {draggingList && (\n            <VisualList\n              list={allLists[draggedListIndex]}\n              listIndex={draggedListIndex}\n              left={draggedListCoord.x}\n              top={draggedListCoord.y}\n              height={height}\n            />\n          )}\n        </Container>\n      </DndTaskContext.Provider>\n    </TaskListContext.Provider>\n  );\n};\n\nexport default Panel;\n","import React from \"react\";\nimport shortid from \"shortid\";\nimport TaskList from \"../models/List\";\nimport Task from \"../models/Task\";\nimport { TaskListContextValue } from \"../Contexts/TaskListContext\";\n\nexport default function useTaskList(\n  allLists: TaskList[],\n  setAllLists: React.Dispatch<React.SetStateAction<TaskList[]>>\n) {\n  const deleteTask = React.useCallback(\n    (taskIndex: number, listIndex: number) => {\n      const newList = [...allLists];\n\n      newList[listIndex].tasks.splice(taskIndex, 1);\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const addNewTask = React.useCallback(\n    (title: string, listIndex: number) => {\n      const newList = [...allLists];\n      const newTask: Task = {\n        title,\n        id: shortid.generate(),\n      };\n      newList[listIndex].tasks.push(newTask);\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const deleteList = React.useCallback(\n    (listIndex: number) => {\n      const newList = [...allLists];\n\n      newList.splice(listIndex, 1);\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const addList = React.useCallback(\n    (title: string) => {\n      const newList = [...allLists];\n\n      newList.push({\n        id: shortid.generate(),\n        tasks: [],\n        title,\n      });\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const editListTitle = React.useCallback(\n    (title: string, listIndex: number) => {\n      const newList = [...allLists];\n      newList[listIndex].title = title;\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const editTaskTitle = React.useCallback(\n    (title: string, taskIndex: number, listIndex: number) => {\n      const newList = [...allLists];\n      newList[listIndex].tasks[taskIndex].title = title;\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const taskListContextValue: TaskListContextValue = React.useMemo(\n    () => ({\n      addList,\n      addNewTask,\n      deleteTask,\n      deleteList,\n      editListTitle,\n      editTaskTitle,\n    }),\n    [addList, addNewTask, deleteList, deleteTask, editListTitle, editTaskTitle]\n  );\n\n  return taskListContextValue;\n}\n","import React from \"react\";\nimport { clearInterval, setInterval } from \"timers\";\nimport Coord from \"../models/Coord\";\n\nexport default function useMouseScrollHorizontal(condition: boolean) {\n  const scrollRef = React.useRef<HTMLDivElement | null>(null);\n  const intervalRef = React.useRef<NodeJS.Timeout | null>(null);\n  const mouseCoordRef = React.useRef<Coord>({ x: 0, y: 0 });\n\n  const edgeSize = 150;\n  const maxStep = 20;\n\n  const saveMouseCoord = React.useCallback((event: MouseEvent) => {\n    mouseCoordRef.current = {\n      x: event.clientX,\n      y: event.clientY,\n    };\n  }, []);\n\n  const checkMoveScroll = React.useCallback(() => {\n    const element = scrollRef.current as HTMLDivElement;\n    const rect = element.getBoundingClientRect();\n    const leftEdge = edgeSize + rect.x;\n    const rightEdge = rect.x + rect.width - edgeSize;\n\n    const inLeftEdge = mouseCoordRef.current.x >= rightEdge;\n    const inRightEdge = mouseCoordRef.current.x <= leftEdge;\n\n    const canScrollLeft = element.scrollLeft > 0;\n    const canScrollRight =\n      element.scrollLeft < element.scrollWidth - rect.width;\n\n    if ((!inLeftEdge || !canScrollRight) && (!inRightEdge || !canScrollLeft)) {\n      return false;\n    }\n\n    let nextScroll = element.scrollLeft;\n\n    if (canScrollRight && inLeftEdge) {\n      const intensity = (mouseCoordRef.current.x - rightEdge) / edgeSize;\n      nextScroll = nextScroll + Math.min(maxStep * intensity, maxStep);\n    } else if (canScrollLeft && inRightEdge) {\n      const intensity = (leftEdge - mouseCoordRef.current.x) / edgeSize;\n      nextScroll = nextScroll - Math.min(maxStep * intensity, maxStep);\n    }\n\n    if (nextScroll !== element.scrollLeft) {\n      element.scrollTo({\n        left: nextScroll,\n      });\n    }\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (condition) {\n      intervalRef.current = setInterval(checkMoveScroll, 30);\n      window.addEventListener(\"mousemove\", saveMouseCoord);\n    } else {\n      window.removeEventListener(\"mousemove\", saveMouseCoord);\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    }\n\n    return () => {\n      window.removeEventListener(\"mousemove\", saveMouseCoord);\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, [saveMouseCoord, checkMoveScroll, condition]);\n\n  const scrollToRight = React.useCallback(() => {\n    const element = scrollRef.current as HTMLDivElement;\n    element.scrollTo({\n      left: element.scrollWidth,\n    });\n  }, []);\n\n\n  \n\n  return { scrollRef, scrollToRight };\n}\n","import { createGlobalStyle, DefaultTheme } from \"styled-components\";\n\ndeclare module \"styled-components\" {\n  export interface DefaultTheme {\n    fontColor: string;\n    transparency: string;\n    transparencyLight: string;\n    scrollBar: string;\n    scrollThumb: string;\n    listColor: string;\n    taskColor: string;\n    green: string;\n  }\n}\n\nexport const defaultTheme: DefaultTheme = {\n  fontColor: \"#172b4d\",\n  transparency: \"rgba(0, 0, 0, 0.32)\",\n  transparencyLight: \"rgba(0, 0, 0, 0.16)\",\n  scrollBar: \"#d9dce2\",\n  scrollThumb: \"#bdc3ce\",\n  listColor: \"#ebecf0\",\n  taskColor: \"white\",\n  green: \"#5aac44\",\n};\n\nexport const GlobalStyles = createGlobalStyle`\n  * {\n    padding: 0;\n    margin: 0;\n    outline: 0;\n    box-sizing: border-box;\n    font-family: sans-serif;\n  }\n\n  body{\n    color: ${({ theme }) => theme.fontColor};\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n`;\n","import styled from \"styled-components\";\nimport { transparentize } from \"polished\";\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 40px;\n  padding: 4px;\n\n  display: flex;\n  background: ${({ theme }) => theme.transparency};\n`;\n\ninterface HeaderBtnWrapperProps {\n  right?: boolean;\n}\n\nexport const HeaderBtnWrapper = styled.div.attrs(\n  ({ right }: HeaderBtnWrapperProps) => ({\n    right: right || false,\n  })\n)`\n  width: 50%;\n  display: grid;\n  column-gap: 4px;\n  grid-auto-flow: column;\n  align-items: center;\n  justify-content: ${({ right }) => (right ? \"flex-end\" : \"flex-start\")};\n`;\n\ninterface HeaderBoxProps {\n  color?: string;\n}\n\nexport const HeaderBox = styled.div.attrs(\n  ({ color }): HeaderBoxProps => ({\n    color: color || \"rgba(255, 255, 255, .32)\",\n  })\n)`\n  border: none;\n  background: ${({ color }) => color};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  column-gap: 8px;\n  height: 32px;\n  min-width: 32px;\n  padding: 8px;\n  color: white;\n  font-weight: bolder;\n  font-size: 14px;\n  border-radius: 4px;\n  transition: background 0.2s;\n\n  &:hover {\n    background: ${({ color }) => transparentize(0.1, color as string)};\n  }\n`;\n\nexport const HeaderAvatar = styled.div`\n  border-radius: 50%;\n  width: 32px;\n  height: 32px;\n  background: #aaa;\n`;\n\nexport const HeaderInput = styled(HeaderBox)`\n  width: 100%;\n`;\n\nexport const HeaderTitle = styled.div`\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  position: absolute;\n  font-family: \"Pacifico\", cursive;\n  font-size: 20px;\n  display: flex;\n  align-items: center;\n  color: white;\n`;\n","import React from \"react\";\nimport { DiTrello } from \"react-icons/di\";\nimport { Container, HeaderTitle } from \"./styles\";\n\n\ninterface Props {}\n\nconst Header = (props: Props) => {\n  return (\n    <Container>\n      {/* <HeaderBtnWrapper>\n        <HeaderBox as=\"button\">\n          <BsFillGrid3X3GapFill size={16} color=\"white\" />\n        </HeaderBox>\n        <HeaderBox as=\"button\">\n          <AiOutlineHome size={18} color=\"white\" />\n        </HeaderBox>\n        <HeaderBox as=\"button\">\n          <FaTrello size={16} />\n          <p>Quadros</p>\n        </HeaderBox>\n        <HeaderBox as=\"input\" />\n      </HeaderBtnWrapper> */}\n      <HeaderTitle>\n        <DiTrello size={24} />\n        Fake Trello\n      </HeaderTitle>\n      {/* <HeaderBtnWrapper right>\n        <HeaderBox as=\"button\">\n          <FiPlus size={20} color=\"white\" />\n        </HeaderBox>\n        <HeaderBox as=\"button\">\n          <FiAlertCircle size={20} color=\"white\" />\n        </HeaderBox>\n        <HeaderBox as=\"button\" color=\"#eb5a46\">\n          <MdNotificationsNone size={20} color=\"white\" />\n        </HeaderBox>\n        <HeaderAvatar />\n      </HeaderBtnWrapper> */}\n    </Container>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Panel from \"./pages/panel\";\nimport { GlobalStyles, defaultTheme } from \"./styles\";\nimport { ThemeProvider } from \"styled-components\";\nimport Header from \"./components/header\";\nimport styled from \"styled-components\";\n\nfunction App() {\n  return (\n    <>\n      <ThemeProvider theme={defaultTheme}>\n        <GlobalStyles />\n        <Container>\n          <Header />\n          <Panel />\n        </Container>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  min-height: 100vh;\n\n  display: flex;\n  flex-direction: column;\n\n  background: #0079bf;\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}