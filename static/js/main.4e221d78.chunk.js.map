{"version":3,"sources":["util/index.ts","components/newTask/styled.ts","hooks/useKeyMouseToSaveClose.tsx","hooks/useFocusInput.tsx","Contexts/TaskListContext.tsx","components/taskCard/DateBadge/index.tsx","components/newTask/index.tsx","Contexts/DndTaskContext.tsx","components/taskCard/styled.ts","components/taskCard/dateMenu/styled.ts","components/taskCard/dateMenu/index.tsx","components/taskCard/taskMenu/styled.ts","Contexts/LabelContext.tsx","components/taskCard/labelMenu/styled.ts","components/taskCard/labelMenu/index.tsx","components/taskCard/taskMenu/index.tsx","components/taskCard/index.tsx","components/cardlist/styled.ts","components/cardlist/cardlistAction/styled.ts","components/cardlist/cardlistAction/index.tsx","components/cardlist/cardlistEditTitle/index.tsx","components/cardlist/index.tsx","hooks/useMouseScrollVertical.tsx","components/cardlist/visualList.tsx","components/newList/styled.ts","components/newList/index.tsx","components/taskCard/VisualTaskCard.tsx","hooks/useDnDList.tsx","hooks/useDndTask.tsx","pages/panel/styles.ts","pages/panel/index.tsx","hooks/useTaskList.tsx","hooks/useMouseScrollHorizontal.tsx","styles/index.ts","components/header/styles.ts","components/header/index.tsx","App.tsx","index.tsx"],"names":["listRects","Array","element","getScroll","document","getElementById","scrollLeft","Container","styled","div","theme","taskColor","fontColor","transparentize","green","darken","useKeyMouseToSaveClose","save","close","containerRef","React","useRef","pauseRef","useLayoutEffect","handleKeyDown","ev","key","mouseUpHandler","current","rect","getBoundingClientRect","clientX","x","width","clientY","y","height","window","addEventListener","removeEventListener","useFocusInput","inputRef","focus","DueState","TaskListContext","createContext","withTheme","closeNewTask","listIndex","scrolDown","useState","input","setInput","addNewTask","useContext","saveInput","useCallback","ref","value","onChange","e","target","placeholder","onClick","size","color","DndTaskContext","date","complete","taskIndex","due","useMemo","moment","editCompleteState","dueState","done","today","isSame","dueSoon","isAfter","overDue","normal","button","format","DateBadge","css","yellow","red","Card","dragging","transparencyLight","taskDragging","hide","Shadow","transparency","LabelWrapper","LabelMark","top","left","Division","DataWrapper","listColor","CalendarNavWrapper","Calendar","CalendarElement","CalendarWeekDay","CalendarDate","selected","blue","BtnWrapper","Btn","lighten","setSelected","calendarView","serCalendarView","editTaskDate","val","start","weekday","daysInMonth","end","weekDays","years","arr","year","i","push","ThemeContext","emptyDate","n","onMouseDown","stopPropagation","clone","subtract","month","newMonth","Number","months","map","newYear","add","day","index","dates","EditZone","OptionsZone","initialState","noTagSelected","labels","title","id","LabelContext","state","actions","createLabel","deleteLabel","editLabel","labelId","toggleSelection","toggleNoTag","LabelProvider","children","setState","newState","newLabel","shortid","generate","filter","label","Provider","LabelMenuPage","Content","ColorBoxWrapper","ColorSelectBox","ConfirmBtnWrapper","ConfirmBtn","negative","OptionBtn","LabelSelectBoxWrapper","LabelSelectBox","taskLabels","main","page","setPage","selectedColor","setSelectedColor","deleteEveryLabel","changeLabelRef","orange","purple","sky","lime","pink","black","colorBoxes","header","changeLabel","content","htmlFor","Fragment","findIndex","l","TaskMenu","task","dateMenuOpen","setDateMenuOpen","labelMenuOpen","setLabelMenuOpen","deleteTask","editTaskTitle","useEffect","TaskCard","menuOpen","setMenuOpen","hideRef","forEach","find","length","beginTaskDrag","draggedListIndex","draggedTaskIndex","moveTaskVertically","mouseMoveHandle","event","check","coord","checkRangeY","toIndex","handleLeftMouseDown","handleRightMouseDown","handleMouseDown","preventDefault","onContextMenu","onMouseMove","CardContent","CardHeader","selfTaskDragging","NewTaskBtn","TaskContainer","scrollBar","scrollThumb","CardlistAction","menuPosition","openNewTask","deleteList","style","Input","editListTitle","CardList","list","beginDragList","draggingSelf","draggingList","moveListHorizontally","editing","setEditing","contentRef","condition","scrollRef","intervalRef","mouseCoordRef","saveMouseCoord","checkMoveScroll","topEdge","bottomEdge","inBottomEdge","inTopEdge","canScrollUp","scrollTop","canScrollDown","scrollHeight","nextScroll","intensity","Math","min","scrollTo","setInterval","clearInterval","useMouseScroll","addingTask","setAddingTask","menuBtnRef","linstIndex","scroll","saveListRect","onMouseEnter","tasks","position","transform","boxShadow","pointerEvents","cursor","creating","scrollToRight","addList","creatingNewList","setCreatingNewList","open","background","useDnDList","allLists","setAllLists","setCoord","setDragging","mouseCoord","mouseOffset","listIndexRef","setPosition","mouseMove","body","mouseUp","newList","temp","draggedListCoord","useDndTask","setTaskDragging","dragIndexes","horizontalCheck","rectInRangeX","moveTaskHorizontally","splice","toTaskIndex","tmp","relativeX","getRectX","xDir","abs","toListIndex","ListContainter","LabelFilter","LabelBtn","on","mock","Panel","taskListContextValue","newTask","labelid","hasLabel","useTaskList","useDndList","leftEdge","rightEdge","inLeftEdge","inRightEdge","canScrollLeft","canScrollRight","scrollWidth","useMouseScrollHorizontal","dndContextValue","minWidth","margin","VisualTaskCard","defaultTheme","GlobalStyles","createGlobalStyle","HeaderBox","attrs","right","HeaderTitle","Header","props","App","ReactDOM","render","StrictMode"],"mappings":"8PAEO,IAAIA,EAAuB,IAAIC,MAElCC,EAAiC,KAE/BC,EAAY,WAKhB,OAJKD,IACHA,EAAUE,SAASC,eAAe,gBAG7BH,EAAQI,Y,6lCCRV,IAAMC,EAAYC,IAAOC,IAAV,KAeJ,qBAAGC,MAAkBC,aAQ1B,qBAAGD,MAAkBE,aAInB,gBAAGF,EAAH,EAAGA,MAAH,OAAeG,YAAe,GAAKH,EAAME,cAYpC,qBAAGF,MAAkBI,SAOnB,gBAAGJ,EAAH,EAAGA,MAAH,OAAeG,YAAe,GAAKH,EAAMI,UAIzC,gBAAGJ,EAAH,EAAGA,MAAH,OAAeK,YAAO,GAAKL,EAAMI,UCnDxC,SAASE,EACtBC,EACAC,GAEA,IAAMC,EAAeC,IAAMC,OAA8B,MACnDC,EAAWF,IAAMC,QAAgB,GAuCvC,OArCAD,IAAMG,iBAAgB,WACpB,SAASC,EAAcC,GACrB,OAAQA,EAAGC,KACT,IAAK,QACHT,IACA,MACF,IAAK,SACHC,KAON,SAASS,EAAeF,GACtB,IAAIH,EAASM,QAAb,CACA,IAAMC,EAAQV,EAAaS,QAA2BE,yBAGpDL,EAAGM,QAAUF,EAAKG,GAClBP,EAAGM,QAAUF,EAAKG,EAAIH,EAAKI,OAC3BR,EAAGS,QAAUL,EAAKM,GAClBV,EAAGS,QAAUL,EAAKM,EAAIN,EAAKO,UAE3BnB,IACAC,MAMJ,OAFAmB,OAAOC,iBAAiB,UAAWd,GACnCa,OAAOC,iBAAiB,YAAaX,GAAgB,GAC9C,WACLU,OAAOE,oBAAoB,UAAWf,GACtCa,OAAOE,oBAAoB,YAAaZ,GAAgB,MAEzD,CAACV,EAAMC,IAEH,CAAEC,eAAcG,YC5CV,SAASkB,IAGtB,IAAMC,EAAWrB,IAAMC,OAAiB,MAMxC,OAJAD,IAAMG,iBAAgB,WACnBkB,EAASb,QAA6Bc,UACtC,IAEID,ECQF,ICVFE,EDUQC,EAAkBxB,IAAMyB,cACnC,MEsCaC,eAxCC,SAAC,GAA0D,IAAxDpC,EAAuD,EAAvDA,MAAOqC,EAAgD,EAAhDA,aAAcC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,UAAuB,EAC9C7B,IAAM8B,SAAS,IAD+B,mBACjEC,EADiE,KAC1DC,EAD0D,KAElEX,EAAWD,IACTa,EAAejC,IAAMkC,WAC3BV,GADMS,WAIFE,EAAYnC,IAAMoC,aAAY,WAC7BL,IACLE,EAAWF,EAAOH,GAClBI,EAAS,IACTH,OACC,CAACG,EAAUC,EAAYF,EAAOH,EAAWC,IAEpC9B,EAAiBH,EAAuBuC,EAAWR,GAAnD5B,aAER,OACE,kBAACZ,EAAD,CAAWkD,IAAKtC,GACd,2BACEsC,IAAKhB,EACLiB,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAOR,EAASQ,EAAEC,OAAOH,QACnCI,YAAY,mCAEd,6BACE,4BACEC,QAAS,WACPR,MAFJ,YAOA,4BAAQQ,QAAShB,GACf,kBAAC,IAAD,CAAKiB,KAAM,GAAIC,MAAOvD,EAAME,kBClCvBsD,EAFQ9C,IAAMyB,cAA0C,M,2xBFNlEF,O,qBAAAA,I,qBAAAA,I,mBAAAA,I,gBAAAA,M,KAcU,kBAAsD,IAAnDwB,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,UAAWrB,EAAuB,EAAvBA,UACrCsB,EAAMlD,IAAMmD,SAAQ,kBAAMC,IAAOL,EAAM,cAAa,CAACA,IACnDM,EAAsBrD,IAAMkC,WAClCV,GADM6B,kBAIFC,EAAWtD,IAAMmD,SAAkB,WACvC,GAAIH,EAAU,OAAOzB,EAASgC,KAC9B,IAAMC,EAAQJ,MACd,OAAII,EAAMC,OAAOP,EAAK,OAAe3B,EAASmC,QACrCF,EAAMG,QAAQT,EAAK,OAAe3B,EAASqC,QACxCrC,EAASsC,SACpB,CAACX,EAAKF,IAET,OACE,kBAAC,EAAD,CACEM,SAAUA,EACVX,QAAS,SAACH,GACS,IAAbA,EAAEsB,QACNT,GAAmBL,EAAUC,EAAWrB,KAGzCoB,EAAW,kBAAC,IAAD,MAAoB,kBAAC,IAAD,MAChC,kBAAC,IAAD,MACA,2BAAIE,EAAIa,OAAO,mBASfC,EAAY5E,IAAOC,IAAV,KASJ,qBAAGC,MAAkBE,aAG5B,YACA,OADkB,EAAf8D,UAED,KAAK/B,EAASmC,QACZ,OAAOO,YAAP,KACgB,qBAAG3E,MAAkB4E,UAGvC,KAAK3C,EAASqC,QACZ,OAAOK,YAAP,KACgB,qBAAG3E,MAAkB6E,OAGvC,KAAK5C,EAASgC,KACZ,OAAOU,YAAP,KACgB,qBAAG3E,MAAkBI,SAGvC,QACE,OAAOuE,YAAP,S,o9DG1ED,IAAMG,EAAOhF,IAAOC,IAAV,KAID,qBAAGC,MAAkBC,aAGR,qBAAG8E,SAA2B,OAAS,UA4BhD,qBAAG/E,MAAkBgF,qBAIrC,qBAAGD,UAEHJ,YADA,QAYA,qBAAGM,cAEHN,YADA,KAKkB,gBAAG3E,EAAH,EAAGA,MAAH,OAAeK,YAAO,GAAKL,EAAMC,iBAKxC,qBAAG8E,SAA2B,EAAI,KAM/B,qBAAGG,KAAmB,IAAM,SAG1C,qBAAGA,MAEHP,YADI,QASKQ,EAASrF,IAAOC,IAAV,KACN,qBAAGgF,SAA2B,QAAU,UAOrC,qBAAG/E,MAAkBoF,gBAGxBC,EAAevF,IAAOC,IAAV,KAQZ,qBAAGgF,SAA2B,EAAI,KAOlCO,EAAYxF,IAAOC,IAAV,KAGN,qBAAGwD,S,woGCnHZ,IAAM1D,GAAYC,IAAOC,IAAV,MAGb,qBAAGwF,IAAgB,QAClB,qBAAGC,KAAkB,QAMf,qBAAGxF,MAAkBC,aAuCxBwF,GAAW3F,IAAOC,IAAV,MAMR2F,GAAc5F,IAAOC,IAAV,MAcA,qBAAGC,MAAkB2F,aAMhCC,GAAqB9F,IAAOC,IAAV,MAqBlB8F,GAAW/F,IAAOC,IAAV,MAKQ,qBAAGC,MAAkBE,aACtB,qBAAGF,MAAkBE,aAQpC4F,GAAkBhG,IAAOC,IAAV,MACZ,qBAAGC,MAAkB2F,aACX,qBAAG3F,MAAkBE,aACpB,qBAAGF,MAAkBE,aAOnC6F,GAAkBjG,YAAOgG,GAAPhG,CAAH,KACZ,gBAAGE,EAAH,EAAGA,MAAH,OAAeK,YAAO,GAAKL,EAAM2F,cAIpCK,GAAelG,YAAOgG,GAAPhG,CAAH,KAGR,qBAAGoE,MAAqB,OAAS,SAE9C,gBAAG+B,EAAH,EAAGA,SAAU/B,EAAb,EAAaA,MAAb,OACA+B,EACItB,YADI,KAEY,qBAAG3E,MAAkBkG,QAGrCvB,YALI,KAMY,qBAAG3E,MAAkBC,aAGnB,gBAAGD,EAAH,EAAGA,MAAH,OAAeK,YAAO,GAAKL,EAAM2F,cAGxC,gBAAG3F,EAAH,EAAGA,MAAH,OAAgBkE,EAAQlE,EAAMkG,KAAO,aAI3CC,GAAarG,IAAOC,IAAV,KAWVqG,GAAMtG,IAAO0E,OAAV,KAIA,qBAAGjB,SAOD,gBAAGA,EAAH,EAAGA,MAAH,OAAe8C,YAAQ,GAAK9C,MAI5B,gBAAGA,EAAH,EAAGA,MAAH,OAAelD,YAAO,GAAKkD,MCtJ9B,eAA8D,IAA3DgC,EAA0D,EAA1DA,IAAKC,EAAqD,EAArDA,KAAMlD,EAA+C,EAA/CA,UAAWqB,EAAoC,EAApCA,UAAWnD,EAAyB,EAAzBA,MAAOiD,EAAkB,EAAlBA,KAAkB,EAC1C/C,IAAM8B,SACpCiB,EAAOK,IAAOL,EAAM,YAAcK,OAFsC,mBACnEmC,EADmE,KACzDK,EADyD,OAIlC5F,IAAM8B,UAC3CiB,EAAOK,IAAOL,EAAM,YAAcK,OAAUL,KAAK,IALsB,mBAInE8C,EAJmE,KAIrDC,EAJqD,KAOlEC,EAAiB/F,IAAMkC,WAC7BV,GADMuE,aAIFlG,EAAOG,IAAMoC,aACjB,SAAC4D,GACCD,EAAaC,EAAK/C,EAAWrB,GAC7B9B,MAEF,CAACA,EAAOiG,EAAc9C,EAAWrB,IAG3B7B,EAAiBH,GAAuB,cAAUE,GAAlDC,aACFkG,EAAQJ,EAAaK,UACrBC,EAAcN,EAAaM,cAC3BC,GACHH,EAAQE,GAAe,IAAM,EAAI,EAAI,GAAMF,EAAQE,GAAe,EAE/DE,EAAWrG,IAAMmD,SACrB,iBAAM,CAAC,MAAO,QAAM,QAAM,QAAM,QAAM,QAAM,YAC5C,IAGImD,EAAQtG,IAAMmD,SAAQ,WAI1B,IAHA,IAAMoD,EAAgB,GAChBC,EAAOpD,MAASoD,OAEbC,EAAI,EAAGA,EAAI,GAAIA,IAAKF,EAAIG,KAAKF,EAAO,GAAKC,GAElD,OAAOF,IACN,IArCuE,EAuCnDvG,IAAMkC,WAAWyE,KAAhCjH,EAvCkE,EAuClEA,MAAOyE,EAvC2D,EAuC3DA,IA0BTyC,EAAY,SAACC,GAEjB,IADA,IAAIN,EAAqB,GAChBE,EAAI,EAAGA,EAAII,EAAGJ,IAAKF,EAAIG,KAAK,kBAACtB,GAAD,CAAiB9E,IAAKmG,KAC3D,OAAOF,GAGT,OACE,kBAAC,GAAD,CACElE,IAAKtC,EACL8E,IAAKA,EACLC,KAAMA,EACNgC,YAAa,SAACtE,GAAD,OAAOA,EAAEuE,oBAEtB,gCACE,8CACA,4BAAQpE,QAAS7C,GACf,kBAAC,IAAD,CAAK8C,KAAM,OAGf,kBAACmC,GAAD,MACA,kBAACC,GAAD,KACE,mCACA,mCACA,6BAAMO,EAASxB,OAAO,iBACtB,6BAAMwB,EAASxB,OAAO,UAExB,kBAACmB,GAAD,KACE,4BACEvC,QAAS,kBAAMmD,GAAgB,SAACE,GAAD,OAASA,EAAIgB,QAAQC,SAAS,EAAG,UADlE,QAKA,4BACE3E,MAAOuD,EAAaqB,QACpB3E,SAAU,SAACC,GACT,IAAM2E,EAAWC,OAAO5E,EAAEC,OAAOH,OACjCwD,GAAgB,SAACE,GAAD,OAASA,EAAIgB,QAAQE,MAAMC,QAG5C/D,IAAOiE,SAASC,KAAI,SAACJ,EAAOT,GAAR,OACnB,4BAAQnG,IAAK4G,EAAO5E,MAAOmE,GACxBS,OAIP,4BACE5E,MAAOuD,EAAaW,OACpBjE,SAAU,SAACC,GACT,IAAM+E,EAAUH,OAAO5E,EAAEC,OAAOH,OAChCwD,GAAgB,SAACE,GAAD,OAASA,EAAIgB,QAAQR,KAAKe,QAG3CjB,EAAMgB,KAAI,SAACd,GAAD,OACT,4BAAQlG,IAAKkG,EAAMlE,MAAOkE,GACvBA,OAIP,4BACE7D,QAAS,kBAAMmD,GAAgB,SAACE,GAAD,OAASA,EAAIgB,QAAQQ,IAAI,EAAG,UAD7D,SAMF,kBAACrC,GAAD,KACGkB,EAASiB,KAAI,SAACG,EAAKC,GAAN,OACZ,kBAACrC,GAAD,CAAiB/E,IAAKoH,GAAQD,MAE/Bb,EAAUX,GA5FH,WAEZ,IADA,IAAIM,EAAqB,GADP,WAETE,GACPF,EAAIG,KACF,kBAACpB,GAAD,CACEhF,IAAKmG,EACLjD,MACEqC,EAAaW,SAAWpD,MAASoD,QACjCX,EAAaqB,UAAY9D,MAAS8D,SAClC9D,MAASL,SAAW0D,EAAI,EAE1BlB,SACEM,EAAaW,SAAWjB,EAASiB,QACjCX,EAAaqB,UAAY3B,EAAS2B,SAClC3B,EAASxC,SAAW0D,EAAI,EAE1B9D,QAAS,kBAAMiD,EAAYC,EAAamB,QAAQjE,KAAK0D,EAAI,MAExDA,EAAI,KAhBFA,EAAI,EAAGA,EAAIN,EAAaM,IAAjC,EAASA,GAmBT,OAAOF,EAwEFoB,GACAf,EAAUR,IAEb,kBAACX,GAAD,KACE,kBAACC,GAAD,CAAK7C,MAAOnD,EAAOiD,QAAS,kBAAM9C,EAAK0F,EAASxB,OAAO,eAAvD,QAGA,kBAAC2B,GAAD,CAAK7C,MAAOsB,EAAKxB,QAAS,kBAAM9C,EAAK,MAArC,a,46DCpKD,IAAMV,GAAYC,IAAOC,IAAV,MAQF,qBAAGC,MAAkBoF,gBAK9B,qBAAGG,IAAgB,QAClB,qBAAGC,KAAkB,QAGZ,qBAAGxF,MAAkBgF,qBACV,qBAAGhF,MAAkBgF,qBASxCsD,GAAWxI,IAAOC,IAAV,MAOR,qBAAGwB,MAAoB,QAClB,qBAAGG,OAAsB,QAuBzB,qBAAG1B,MAAkBI,SAQnB,gBAAGJ,EAAH,EAAGA,MAAH,OAAeqG,YAAQ,GAAKrG,EAAMI,UAIlC,gBAAGJ,EAAH,EAAGA,MAAH,OAAeK,YAAO,GAAKL,EAAMI,UAKxCmI,GAAczI,IAAOC,IAAV,MASN,qBAAGC,MAAkBoF,gBAoBnB,gBAAGpF,EAAH,EAAGA,MAAH,OAAeK,YAAO,GAAKL,EAAMoF,iBC1F/CoD,GAA2B,CAC/BC,eAAe,EACfC,OAAQ,CACN,CAAEnF,MAAO,MAAOoF,MAAO,QAASC,GAAI,IAAK3C,UAAU,GACnD,CAAE1C,MAAO,OAAQoF,MAAO,QAASC,GAAI,IAAK3C,UAAU,GACpD,CAAE1C,MAAO,QAASoF,MAAO,QAASC,GAAI,IAAK3C,UAAU,GACrD,CAAE1C,MAAO,SAAUoF,MAAO,QAASC,GAAI,IAAK3C,UAAU,KAI7C4C,GAAenI,IAAMyB,cAAgC,CAChE2G,MAAON,GACPO,QAAS,CACPC,YAAa,SAACL,EAAepF,KAC7B0F,YAAa,SAACL,KACdM,UAAW,SAACC,EAAiBR,EAAepF,KAC5C6F,gBAAiB,SAACD,KAClBE,YAAa,gBAQJC,GAAgB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAsB,EAC1B7I,IAAM8B,SAAqBgG,IADD,mBAC7CM,EAD6C,KACtCU,EADsC,KAG9CR,EAActI,IAAMoC,aACxB,SAAC6F,EAAepF,GACd,IAAMkG,EAAQ,eAAQX,GAEhBY,EAAkB,CACtBf,QACApF,QACAqF,GAAIe,IAAQC,WACZ3D,UAAU,GAGZwD,EAASf,OAAOtB,KAAKsC,GAErBF,EAASC,KAEX,CAACX,EAAOU,IAGJP,EAAcvI,IAAMoC,aACxB,SAAC8F,GACC,IAAMa,EAAQ,eAAQX,GAEtBW,EAASf,OAASe,EAASf,OAAOmB,QAAO,SAACC,GAAD,OAAWA,EAAMlB,KAAOA,KAEjEY,EAASC,KAEX,CAACX,EAAOU,IAGJN,EAAYxI,IAAMoC,aACtB,SAACqG,EAAiBR,EAAepF,GAC/B,IAAMkG,EAAQ,eAAQX,GAEtBW,EAASf,OAASe,EAASf,OAAOV,KAAI,SAAC8B,GAAD,OACpCA,EAAMlB,KAAOO,EACTW,EADJ,eAGSA,EAHT,CAIMnB,QACApF,aAIRiG,EAASC,KAEX,CAACX,EAAOU,IAGJJ,EAAkB1I,IAAMoC,aAC5B,SAACqG,GACC,IAAMM,EAAQ,eACTX,EADS,CAEZJ,OAAQI,EAAMJ,OAAOV,KAAI,SAAC8B,GAAD,OACvBA,EAAMlB,KAAOO,EAAUW,EAAvB,eAAoCA,EAApC,CAA2C7D,UAAW6D,EAAM7D,gBAGhEuD,EAASC,KAEX,CAACX,EAAOU,IAGJH,EAAc3I,IAAMoC,aAAY,WACpC,IAAM2G,EAAQ,eAAQX,EAAR,CAAeL,eAAgBK,EAAML,gBACnDe,EAASC,KACR,CAACX,EAAOU,IAELT,EAAUrI,IAAMmD,SACpB,iBAAO,CACLmF,cACAC,cACAC,YACAE,kBACAC,iBAEF,CAACL,EAAaC,EAAaC,EAAWE,EAAiBC,IAGzD,OACE,kBAACR,GAAakB,SAAd,CAAuB/G,MAAO,CAAE8F,QAAOC,YACpCQ,I,goGCzHA,ICuBFS,GDvBQnK,GAAYC,IAAOC,IAAV,MAGb,qBAAGwF,IAAgB,QAClB,qBAAGC,KAAkB,QAIf,qBAAGxF,MAAkBC,aAuCxBwF,GAAW3F,IAAOC,IAAV,MAMRkK,GAAUnK,IAAOC,IAAV,MAwBPmK,GAAkBpK,IAAOC,IAAV,MAQfoK,GAAiBrK,IAAOC,IAAV,MACX,qBAAGwD,SAYN6G,GAAoBtK,IAAOC,IAAV,MAOjBsK,GAAavK,IAAO0E,OAAV,MAIP,gBAAGxE,EAAH,EAAGA,MAAH,SAAUsK,SAA2BtK,EAAM6E,IAAM7E,EAAMI,SAMrD,gBAAGJ,EAAH,EAAGA,MAAOsK,EAAV,EAAUA,SAAV,OACZjE,YAAQ,GAAKiE,EAAWtK,EAAM6E,IAAM7E,EAAMI,UAI9B,gBAAGJ,EAAH,EAAGA,MAAOsK,EAAV,EAAUA,SAAV,OACZjK,YAAO,GAAKiK,EAAWtK,EAAM6E,IAAM7E,EAAMI,UAIlCmK,GAAYzK,IAAO0E,OAAV,MAIN,qBAAGxE,MAAkB2F,aAKnB,gBAAG3F,EAAH,EAAGA,MAAH,OAAeqG,YAAQ,GAAKrG,EAAM2F,cAIlC,gBAAG3F,EAAH,EAAGA,MAAH,OAAeK,YAAO,GAAKL,EAAM2F,cAItC6E,GAAwB1K,IAAOC,IAAV,MAoBd,qBAAGC,MAAkB2F,aAK5B8E,GAAiB3K,IAAOC,IAAV,MACX,qBAAGwD,SAiBU,gBAAGA,EAAH,EAAGA,MAAH,OAAelD,YAAO,GAAKkD,O,SClKnDyG,O,eAAAA,I,uBAAAA,I,8BAAAA,Q,KAMU,mBAOD,IANZzE,EAMW,EANXA,IACAC,EAKW,EALXA,KACAlD,EAIW,EAJXA,UACAqB,EAGW,EAHXA,UACAnD,EAEW,EAFXA,MACQkK,EACG,EADXhC,OAEQjI,EAAiBH,GAAuB,cAAUE,GAAlDC,aADG,EAEgBC,IAAMkC,WAAWiG,IAApCC,EAFG,EAEHA,MAAOC,EAFJ,EAEIA,QAFJ,EAGarI,IAAM8B,SAAwBwH,GAAcW,MAHzD,mBAGJC,EAHI,KAGEC,EAHF,OAI+BnK,IAAM8B,SAAS,IAJ9C,mBAIJsI,EAJI,KAIWC,EAJX,OAKerK,IAAM8B,SAAS,IAL9B,mBAKJC,EALI,KAKGC,EALH,OAM6BhC,IAAMkC,WAC5CV,GADMgH,EANG,EAMHA,UAAW8B,EANR,EAMQA,iBAGbC,EAAiBvK,IAAMC,OAAO,IATzB,EAwBPD,IAAMkC,WAAWyE,KAVnBjH,EAdS,EAcTA,MACAwE,EAfS,EAeTA,OACAsG,EAhBS,EAgBTA,OACArG,EAjBS,EAiBTA,IACAsG,EAlBS,EAkBTA,OACAjF,EAnBS,EAmBTA,KACAkF,EApBS,EAoBTA,IACAC,EArBS,EAqBTA,KACAC,EAtBS,EAsBTA,KACAC,EAvBS,EAuBTA,MAGIC,EAAa9K,IAAMmD,SAAQ,WAa/B,MAZiB,CACfzD,EACAwE,EACAsG,EACArG,EACAsG,EACAjF,EACAkF,EACAC,EACAC,EACAC,GAEcvD,KAAI,SAACzE,GAAD,OAClB,kBAAC4G,GAAD,CACEnJ,IAAKuC,EACLA,MAAOA,EACPF,QAAS,kBAAM0H,EAAiBxH,KAE/BuH,IAAkBvH,GAAS,kBAAC,IAAD,CAASA,MAAM,QAAQD,KAAM,WAG5D,CACDlD,EACAwE,EACAsG,EACArG,EACAsG,EACAjF,EACAkF,EACAC,EACAC,EACAC,EACAT,IAGIW,EAAS/K,IAAMmD,SAAQ,WAC3B,OAAQ+G,GACN,KAAKZ,GAAcN,SACjB,OACE,oCACE,2CACA,4BAAQrG,QAAS,kBAAMwH,EAAQb,GAAcW,QAC3C,kBAAC,IAAD,CAAarH,KAAM,OAI3B,KAAK0G,GAAc0B,YACjB,OACE,oCACE,2CACA,4BAAQrI,QAAS,kBAAMwH,EAAQb,GAAcW,QAC3C,kBAAC,IAAD,CAAarH,KAAM,OAI3B,QACE,OACE,oCACE,qCACA,4BAAQD,QAAS7C,GACf,kBAAC,IAAD,CAAK8C,KAAM,UAKpB,CAAC9C,EAAOoK,EAAMC,IAEXc,EAAUjL,IAAMmD,SAAQ,WAC5B,OAAQ+G,GACN,KAAKZ,GAAcN,SACjB,OACE,oCACE,2BAAOkC,QAAQ,QAAf,QACA,2BACE5I,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAOR,EAASQ,EAAEC,OAAOH,QACnC4F,GAAG,SAEL,6CACA,kBAACsB,GAAD,KAAkBsB,GAClB,kBAACnB,GAAD,CACEhH,QAAS,WACFZ,GAAUqI,IACf/B,EAAQC,YAAYvG,EAAOqI,GAC3BD,EAAQb,GAAcW,SAJ1B,YAWN,KAAKX,GAAc0B,YACjB,OACE,oCACE,2BAAOE,QAAQ,QAAf,QACA,2BACE5I,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAOR,EAASQ,EAAEC,OAAOH,QACnC4F,GAAG,SAEL,6CACA,kBAACsB,GAAD,KAAkBsB,GAClB,kBAACpB,GAAD,KACE,kBAACC,GAAD,CACEhH,QAAS,WACFZ,GAAUqI,IACf/B,EAAQG,UACN+B,EAAe/J,QACfuB,EACAqI,GAEFD,EAAQb,GAAcW,SAR1B,QAaA,kBAACN,GAAD,CACEC,UAAU,EACVjH,QAAS,WACP2H,EAAiBC,EAAe/J,SAChC6H,EAAQE,YAAYgC,EAAe/J,SACnC2J,EAAQb,GAAcW,QAL1B,YAaR,QACE,OACE,oCACE,qCACA,kBAACH,GAAD,KACG1B,EAAMJ,OAAOV,KAAI,SAAC8B,GAAD,OAChB,kBAAC,IAAM+B,SAAP,CAAgB7K,IAAK8I,EAAMlB,GAAK,WAC9B,kBAAC6B,GAAD,CACEzJ,IAAK8I,EAAMlB,GACXrF,MAAOuG,EAAMvG,MACbF,QAAS,kBAAM6F,EAAUY,EAAMlB,GAAIjF,EAAWrB,KAE9C,2BAAIwH,EAAMnB,OACT+B,EAAWoB,WAAU,SAACC,GAAD,OAAOA,IAAMjC,EAAMlB,OAAO,GAC9C,kBAAC,IAAD,CAASrF,MAAM,QAAQD,KAAM,MAGjC,4BACED,QAAS,WACP4H,EAAe/J,QAAU4I,EAAMlB,GAC/BlG,EAASoH,EAAMnB,OACfoC,EAAiBjB,EAAMvG,OACvBsH,EAAQb,GAAc0B,cAExB1K,IAAK8I,EAAMlB,GAAK,OAEhB,kBAAC,IAAD,CAAStF,KAAM,WAMvB,kBAACiH,GAAD,CACElH,QAAS,WACPX,EAAS,IACTqI,EAAiB,IACjBF,EAAQb,GAAcN,YAJ1B,0BAYP,CACDkB,EACAY,EACA/I,EACAsG,EACA+B,EACAhC,EAAMJ,OACNgC,EACAxB,EACA5G,EACAqB,EACAqH,IAGF,OACE,kBAAC,GAAD,CACEjI,IAAKtC,EACL8E,IAAKA,EACLC,KAAMA,EACNgC,YAAa,SAACtE,GAAD,OAAOA,EAAEuE,oBAEtB,gCAASgE,GACT,kBAAC,GAAD,MACA,kBAACxB,GAAD,KAAU0B,KClIDK,GAjHE,SAAC,GAOJ,IANZxL,EAMW,EANXA,MACAW,EAKW,EALXA,KACA8K,EAIW,EAJXA,KACA3J,EAGW,EAHXA,UACAqB,EAEW,EAFXA,UACA+G,EACW,EADXA,WAEM3I,EAAWD,IADN,EAEepB,IAAM8B,SAAS,IAF9B,mBAEJC,EAFI,KAEGC,EAFH,OAG6BhC,IAAM8B,UAAS,GAH5C,mBAGJ0J,EAHI,KAGUC,EAHV,OAI+BzL,IAAM8B,UAAS,GAJ9C,mBAIJ4J,EAJI,KAIWC,EAJX,OAK2B3L,IAAMkC,WAC1CV,GADMoK,EALG,EAKHA,WAAYC,EALT,EAKSA,cAIpB7L,IAAM8L,WAAU,WACd9J,EAASuJ,EAAKtD,SACb,CAACsD,EAAKtD,QAET,IAAMpI,EAAOG,IAAMoC,aAAY,WACf,KAAVL,IACJ8J,EAAc9J,EAAOkB,EAAWrB,GAChC9B,OACC,CAACiC,EAAOjC,EAAO+L,EAAe5I,EAAWrB,IAjBjC,EAmBwBhC,EAAuBC,EAAMC,GAAxDC,EAnBG,EAmBHA,aAAcG,EAnBX,EAmBWA,SAEtB,OACE,kBAAC,GAAD,CACE4G,YAAa,SAACtE,GAAD,OAAOA,EAAEuE,mBACtBlC,IAAKpE,EAAKM,EACV+D,KAAMrE,EAAKG,GAEX,yBAAKyB,IAAKtC,GACR,kBAAC6H,GAAD,CAAU5G,OAAQP,EAAKO,OAAQH,MAAOJ,EAAKI,OACzC,6BACE,kBAAC8D,EAAD,KAAeqF,GACf,8BACE1H,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAOR,EAASQ,EAAEC,OAAOH,QACnCD,IAAKhB,IAENkK,EAAKxI,MACJ,kBAACiB,EAAD,CACEf,UAAWA,EACXrB,UAAWA,EACXoB,SAAUuI,EAAKvI,SACfD,KAAMwI,EAAKxI,QAIjB,4BAAQJ,QAAS9C,GAAjB,SAEF,kBAACgI,GAAD,KACE,4BACElF,QAAS,WACPgJ,GAAiB,GACjBzL,EAASM,SAAU,IAGrB,kBAAC,IAAD,MACA,2CAEF,4BACEmC,QAAS,WACP8I,GAAgB,GAChBvL,EAASM,SAAU,IAGrB,kBAAC,IAAD,MACA,+CAEF,4BACEmC,QAAS,WACPiJ,EAAW3I,EAAWrB,KAGxB,kBAAC,IAAD,MACA,wCAGH8J,GACC,kBAAC,GAAD,CACE5L,MAAO,WACL6L,GAAiB,GACjBzL,EAASM,SAAU,GAErBqE,IAAKpE,EAAKM,EACV+D,KAAMrE,EAAKG,EAAIH,EAAKI,MAAQ,EAC5BoC,UAAWA,EACXrB,UAAWA,EACXoG,OAAQuD,EAAKvD,SAGhBwD,GACC,kBAAC,GAAD,CACEzI,KAAMwI,EAAKxI,KACXjD,MAAO,WACL2L,GAAgB,GAChBvL,EAASM,SAAU,GAErBqE,IAAKpE,EAAKM,EACV+D,KAAMrE,EAAKG,EAAIH,EAAKI,MAAQ,EAC5BoC,UAAWA,EACXrB,UAAWA,OCaRmK,GA3HE,SAAC,GAAuC,IAArCR,EAAoC,EAApCA,KAAM3J,EAA8B,EAA9BA,UAAW8F,EAAmB,EAAnBA,MAC7B3H,EAAeC,IAAMC,OAA8B,MADH,EAEtBD,IAAM8B,UAAS,GAFO,mBAE/CkK,EAF+C,KAErCC,EAFqC,KAG9C7D,EAAUpI,IAAMkC,WAAWiG,IAA3BC,MAEF8D,EAAUlM,IAAMC,QAAO,GAEvB+J,EAAahK,IAAMmD,SAAQ,WAC/B,IAAMoD,EAAqB,GAW3B,OAVA2F,EAAQ1L,SAAU,EAElB+K,EAAKvD,OAAOmE,SAAQ,SAAC1D,GACnB,IAAMW,EAAQhB,EAAMJ,OAAOoE,MAAK,SAAChD,GAAD,OAAWA,EAAMlB,KAAOO,KACpDW,EAAM7D,WAAU2G,EAAQ1L,SAAU,GACtC+F,EAAIG,KAAK,kBAAC9B,EAAD,CAAWtE,IAAKmI,EAAS5F,MAAOuG,EAAMvG,aAG5C0D,EAAI8F,QAAUjE,EAAML,gBAAemE,EAAQ1L,SAAU,GAEnD+F,IACN,CAAC6B,EAAMJ,OAAQuD,EAAKvD,OAAQI,EAAML,gBApBiB,EA4BlD/H,IAAMkC,WAAWY,GALnBwJ,EAvBoD,EAuBpDA,cACA/H,EAxBoD,EAwBpDA,aACWgI,EAzByC,EAyBpD3K,UACW4K,EA1ByC,EA0BpDvJ,UACAwJ,EA3BoD,EA2BpDA,mBAGIpI,EACJE,GACAgI,IAAqB3K,GACrB4K,IAAqB9E,EAEjBgF,EAAkB1M,IAAMoC,aAC5B,SAACuK,GACC,GAAKpI,IACDF,EAAJ,CACA,IAKMuI,EhBnBe,SAACnM,EAAeoM,GACzC,OAAIA,EAAM9L,GAAKN,EAAKM,EAAkB,GAAdN,EAAKO,OAAqB,EACzC6L,EAAM9L,GAAKN,EAAKM,EAAkB,GAAdN,EAAKO,QAAsB,EAC5C,EgBgBM8L,CALA/M,EAAaS,QAA2BE,wBACxC,CACZE,EAAG+L,EAAMhM,QACTI,EAAG4L,EAAM7L,UAGX,KAAI8L,EAAQ,GAAZ,CACA,IAAMG,EAAUrF,EAAQkF,EAAQ,EAC5BG,IAAYP,GAAkBC,EAAmBM,OAEvD,CAAC1I,EAAUqD,EAAO+E,EAAoBD,EAAkBjI,IAGpDyI,EAAsBhN,IAAMoC,aAChC,SAACuK,GACCL,EACE5E,EACA9F,EACA+K,EACC5M,EAAaS,QAA2BE,2BAG7C,CAAC4L,EAAe5E,EAAO9F,IAGnBqL,EAAuBjN,IAAMoC,aACjC,SAACuK,GACCV,GAAY,KAEd,IAGIiB,EAAkBlN,IAAMoC,aAC5B,SAACuK,GACCA,EAAMQ,iBACe,IAAjBR,EAAM7I,OACRkJ,EAAoBL,GAEpBM,EAAqBN,KAGzB,CAACK,EAAqBC,IAGxB,OACE,kBAAC7I,EAAD,CACEI,KAAM0H,EAAQ1L,QACd+D,aAAcA,EACdF,SAAUA,EACVhC,IAAKtC,EACLqN,cAAe,SAAC5K,GACdA,EAAE2K,kBAEJrG,YAAaoG,EACbG,YAAaX,GAEb,kBAAC/H,EAAD,CAAcN,SAAUA,GAAW2F,GACnC,2BAAIuB,EAAKtD,OACRsD,EAAKxI,OAASsB,GACb,kBAACL,EAAD,CACEpC,UAAWA,EACXqB,UAAWyE,EACX1E,SAAUuI,EAAKvI,SACfD,KAAMwI,EAAKxI,OAGf,4BAAQJ,QAAS,kBAAMsJ,GAAY,KACjC,kBAAC,IAAD,CAASrJ,KAAM,MAEjB,kBAAC6B,EAAD,CAAQJ,SAAUA,IACjB2H,GACC,kBAAC,GAAD,CACEhC,WAAYA,EACZ/G,UAAWyE,EACX9F,UAAWA,EACXnB,KAAOV,EAAaS,QAA2BE,wBAC/CZ,MAAO,kBAAMmM,GAAY,IACzBV,KAAMA,M,m3EChIT,IAAMpM,GAAYC,IAAOC,IAAV,MAUTiO,GAAclO,IAAOC,IAAV,MAgBR,gBAAGgF,EAAH,EAAGA,SAAU/E,EAAb,EAAaA,MAAb,OAA0B+E,EAAW,OAAS/E,EAAM2F,aAUvDR,GAASrF,IAAOC,IAAV,MACN,qBAAGgF,SAA2B,QAAU,UAOrC,qBAAG/E,MAAkBoF,gBAGxB6I,GAAanO,IAAOC,IAAV,MACV,qBAAGgF,SAA2B,EAAI,KAEnC,qBAAGmJ,iBACQ,UAAY,aAkBf,qBAAGlO,MAAkBgF,qBAoB5BmJ,GAAarO,IAAOC,IAAV,MACV,qBAAGgF,SAA2B,EAAI,KAQnC,qBAAGmJ,iBACQ,UAAY,aAI/B,qBAAGA,kBAEHvJ,YADA,SAQSyJ,GAAgBtO,IAAOC,IAAV,MACb,qBAAGgF,SAA2B,EAAI,KAe7B,qBAAG/E,MAAkBqO,aAKrB,qBAAGrO,MAAkBsO,e,wtCC1IhC,IAAMzO,GAAYC,IAAOC,IAAV,MAMN,qBAAGC,MAAkBC,aAkDb,qBAAGD,MAAkB2F,aAOhCF,GAAW3F,IAAOC,IAAV,MCMNwO,GAtDQ,SAAC,GAKV,IAJZC,EAIW,EAJXA,aACAhO,EAGW,EAHXA,MACAiO,EAEW,EAFXA,YACAnM,EACW,EADXA,UAEQ7B,EAAiBH,GAAuB,cAAUE,GAAlDC,aACAiO,EAAehO,IAAMkC,WAC3BV,GADMwM,WAGR,OACE,kBAAC,GAAD,CACE3L,IAAKtC,EACLkO,MAAO,CACLpJ,IAAKiJ,EAAa/M,EAClB+D,KAAMgJ,EAAalN,IAGrB,gCACE,2CACA,4BAAQ+B,QAAS7C,GACf,kBAAC,IAAD,CAAK8C,KAAM,OAGf,kBAAC,GAAD,MACA,4BACE,4BACE,4BACED,QAAS,WACPoL,IACAjO,MAHJ,iBAUJ,kBAAC,GAAD,MACA,4BACE,4BACE,4BACE6C,QAAS,WACPqL,EAAWpM,GACX9B,MAHJ,yB,+wBCxCV,IAuCMX,GAAYC,IAAOC,IAAV,MAQTqG,GAAMtG,IAAOC,IAAV,MAiBH6O,GAAQ9O,IAAO2C,MAAV,MASK,qBAAGzC,MAAkBC,aACf,qBAAGD,MAAkB6E,OAEhC,qBAAG7E,MAAkBE,aAGjBkC,gBA/EW,SAAC,GAA+C,IAA7CuG,EAA4C,EAA5CA,MAAOnI,EAAqC,EAArCA,MAAO8B,EAA8B,EAA9BA,UAAWtC,EAAmB,EAAnBA,MAAmB,EAC7CU,IAAM8B,SAAS,IAD8B,mBAChEC,EADgE,KACzDC,EADyD,KAG/DmM,EAAkBnO,IAAMkC,WAC9BV,GADM2M,cAUApO,EAAiBH,EANZI,IAAMoC,aAAY,WACxBL,IACLoM,EAAcpM,EAAOH,GACrB9B,OACC,CAACiC,EAAOjC,EAAOqO,EAAevM,IAEqB9B,GAA9CC,aACFsB,EAAWD,IAMjB,OAJApB,IAAM8L,WAAU,WACd9J,EAASiG,KACR,CAACA,IAGF,kBAAC,GAAD,CAAW5F,IAAKtC,GACd,kBAACmO,GAAD,CACE7L,IAAKhB,EACLiB,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAOR,EAASQ,EAAEC,OAAOH,UAErC,kBAAC,GAAD,CACEK,QAAS,SAACH,GACR1C,IACA0C,EAAEuE,oBAGJ,kBAAC,IAAD,CAAKnE,KAAM,GAAIC,MAAOvD,EAAM6E,WCmGrBiK,GAnHE,SAAC,GAQJ,IAPZC,EAOW,EAPXA,KACAzM,EAMW,EANXA,UACA4L,EAKW,EALXA,iBACAc,EAIW,EAJXA,cACAC,EAGW,EAHXA,aACAC,EAEW,EAFXA,aACAC,EACW,EADXA,qBACW,EACmBzO,IAAM8B,UAAS,GADlC,mBACJ4M,EADI,KACKC,EADL,KAELC,EAAa5O,IAAMC,OAA8B,MAF5C,ECtCE,SAAgC4O,GAC7C,IAAMC,EAAY9O,IAAMC,OAA8B,MAChD8O,EAAc/O,IAAMC,OAA8B,MAClD+O,EAAgBhP,IAAMC,OAAc,CAAEW,EAAG,EAAGG,EAAG,IAK/CkO,EAAiBjP,IAAMoC,aAAY,SAACuK,GACxCqC,EAAcxO,QAAU,CACtBI,EAAG+L,EAAMhM,QACTI,EAAG4L,EAAM7L,WAEV,IAEGoO,EAAkBlP,IAAMoC,aAAY,WACxC,IAAMtD,EAAUgQ,EAAUtO,QACpBC,EAAO3B,EAAQ4B,wBACfyO,EAbS,IAaY1O,EAAKM,EAC1BqO,EAAa3O,EAAKM,EAAIN,EAAKO,OAdlB,IAgBTqO,EAAeL,EAAcxO,QAAQO,GAAKqO,EAC1CE,EAAYN,EAAcxO,QAAQO,GAAKoO,EAEvCI,EAAczQ,EAAQ0Q,UAAY,EAClCC,EACJ3Q,EAAQ0Q,UAAY1Q,EAAQ4Q,aAAejP,EAAKO,OAElD,KAAMqO,IAAiBI,MAAoBH,IAAcC,GACvD,OAAO,EAGT,IAAII,EAAa7Q,EAAQ0Q,UAEzB,GAAIC,GAAiBJ,EAAc,CACjC,IAAMO,GAAaZ,EAAcxO,QAAQO,EAAIqO,GA9BhC,IA+BbO,GAA0BE,KAAKC,IA9BnB,GA8BiCF,EA9BjC,SA+BP,GAAIL,GAAeD,EAAW,CACnC,IAAMM,GAAaT,EAAUH,EAAcxO,QAAQO,GAjCtC,IAkCb4O,GAA0BE,KAAKC,IAjCnB,GAiCiCF,EAjCjC,IAoCVD,IAAe7Q,EAAQ0Q,WACzB1Q,EAAQiR,SAAS,CACflL,IAAK8K,MAGR,IAEH3P,IAAMG,iBAAgB,WASpB,OARI0O,GACFE,EAAYvO,QAAUwP,sBAAYd,EAAiB,IACnDjO,OAAOC,iBAAiB,YAAa+N,KAErChO,OAAOE,oBAAoB,YAAa8N,GACpCF,EAAYvO,SAASyP,wBAAclB,EAAYvO,UAG9C,WACLS,OAAOE,oBAAoB,YAAa8N,GACpCF,EAAYvO,SAASyP,wBAAclB,EAAYvO,YAEpD,CAACyO,EAAgBC,EAAiBL,IAErC,IAAMhN,EAAY7B,IAAMoC,aAAY,WAClC,IAAMtD,EAAUgQ,EAAUtO,QAC1B1B,EAAQiR,SAAS,CACflL,IAAK/F,EAAQ4Q,iBAEd,IAEH,MAAO,CAAEZ,YAAWjN,aD9BaqO,CAAe1C,GAAxCsB,EAHG,EAGHA,UAAWjN,EAHR,EAGQA,UAHR,EAIyB7B,IAAM8B,UAAS,GAJxC,mBAIJqO,EAJI,KAIQC,EAJR,OAKqBpQ,IAAM8B,UAAS,GALpC,mBAKJkK,EALI,KAKMC,EALN,KAMLoE,EAAarQ,IAAMC,OAAiC,MAEpD6N,EAAsB9N,IAAMmD,SAAQ,WACxC,IAAK6I,EAAU,MAAO,CAAEpL,EAAG,EAAGG,EAAG,GACjC,IAAMN,EAAQ4P,EAAW7P,QAA8BE,wBACvD,MAAO,CACLE,EAAGH,EAAKG,EACRG,EAAGN,EAAKM,KAET,CAACiL,IAEJhM,IAAMG,iBAAgB,YrBvCI,SAACmQ,EAAoB7P,GAC/C,IAAM8P,EAASxR,IAEf0B,EAAKG,GAAK2P,EACV3R,EAAU0R,GAAc7P,EqBoCtB+P,CACE5O,EACCgN,EAAWpO,QAA2BE,2BAExC,CAACkB,IAoBJ,OACE,kBAAC,GAAD,CAAW6O,aANY,WAClBjC,IAAgBD,GACrBE,EAAqB7M,KAKnB,kBAAC0L,GAAD,CAAajJ,SAAUkK,EAAclM,IAAKuM,GACxC,kBAACrB,GAAD,CACEC,iBAAkBA,EAClBnJ,SAAUkK,EACVzH,YAxBgB,SACtB6F,GAEAA,EAAMQ,iBACe,IAAjBR,EAAM7I,QAEVwK,EACE1M,EACA+K,EACCiC,EAAWpO,QAA2BE,2BAiBnC,yBAAKiC,QAAS,kBAAMgM,GAAW,KAC7B,2BAAIN,EAAKpG,OACRyG,GACC,kBAAC,GAAD,CACE5O,MAAO,kBAAM6O,GAAW,IACxB/M,UAAWA,EACXqG,MAAOoG,EAAKpG,SAIlB,4BAAQ5F,IAAKgO,EAAY1N,QAAS,kBAAMsJ,GAAY,SAACjG,GAAD,OAAUA,OAC5D,kBAAC,IAAD,CAAapD,KAAM,OAGvB,kBAAC8K,GAAD,CAAerJ,SAAUkK,EAAclM,IAAKyM,GACzCT,EAAKqC,MAAMpJ,KAAI,SAACiE,EAAMtI,GAAP,OACd,kBAAC,GAAD,CACE3C,IAAKiL,EAAKrD,GACVqD,KAAMA,EACN3J,UAAWA,EACX8F,MAAOzE,QAIZkN,EACC,kBAAC,EAAD,CACEvO,UAAWA,EACXD,aAAc,kBAAMyO,GAAc,IAClCvO,UAAWA,IAGb,kBAAC4L,GAAD,CACED,iBAAkBA,EAClBnJ,SAAUkK,EACV5L,QAAS,kBAAMyN,GAAc,KAE7B,kBAAC,IAAD,CAAQxN,KAAM,KACbyL,EAAKqC,MAAMrE,OAAS,EACnB,+CAEA,0CAIN,kBAAC,GAAD,CAAQhI,SAAUkK,KAEnBvC,GACC,kBAAC,GAAD,CACEpK,UAAWA,EACXmM,YAAa,kBAAMqC,GAAc,IACjCtQ,MAAO,kBAAMmM,GAAY,IACzB6B,aAAcA,MEtFTM,GA1CE,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,KAAMzM,EAA0C,EAA1CA,UAAWiD,EAA+B,EAA/BA,IAAKC,EAA0B,EAA1BA,KAAM9D,EAAoB,EAApBA,OAC9C,OACE,kBAACsM,GAAD,CACEW,MAAO,CACL0C,SAAU,QACV7L,OACAD,MACA7D,SACA4P,UAAW,iBACXC,UAAW,kCACXC,cAAe,SAGjB,kBAACvD,GAAD,CACEU,MAAO,CACL8C,OAAQ,aAGV,6BACE,2BAAI1C,EAAKpG,QAEX,gCACE,kBAAC,IAAD,CAAarF,KAAM,OAGvB,kBAAC8K,GAAD,KACGW,EAAKqC,MAAMpJ,KAAI,SAACiE,EAAMtI,GAAP,OACd,kBAAC,GAAD,CACE3C,IAAKiL,EAAKrD,GACVqD,KAAMA,EACN3J,UAAWA,EACX8F,MAAOzE,QAIb,kBAACwK,GAAD,KACE,kBAAC,IAAD,MACA,2D,8oCC7CD,IAAMtO,GAAYC,IAAOC,IAAV,MAEN,gBAAGC,EAAH,EAAGA,MAAH,SAAU0R,SACX1R,EAAM2F,UAAY3F,EAAMoF,gBAQxB,qBAAGsM,SAA2B,OAAS,WAMvC,qBAAGA,SAA2B,QAAU,UAYrC,qBAAG1R,MAAkBC,aAM1B,qBAAGD,MAAkBE,aAGnB,gBAAGF,EAAH,EAAGA,MAAH,OAAeG,YAAe,GAAKH,EAAME,cAYpC,qBAAGF,MAAkBI,SAOnB,gBAAGJ,EAAH,EAAGA,MAAH,OAAeG,YAAe,GAAKH,EAAMI,UAIzC,gBAAGJ,EAAH,EAAGA,MAAH,OAAeK,YAAO,GAAKL,EAAMI,UCAxCgC,gBArDC,SAAC,GAAqC,IAAnCpC,EAAkC,EAAlCA,MAAO2R,EAA2B,EAA3BA,cAChBC,EAAYlR,IAAMkC,WAAWV,GAA7B0P,QAD2C,EAGLlR,IAAM8B,UAAS,GAHV,mBAG5CqP,EAH4C,KAG3BC,EAH2B,KAI7C/P,EAAWrB,IAAMC,OAAgC,MAJJ,EAKzBD,IAAM8B,SAAS,IALU,mBAK5CC,EAL4C,KAKrCC,EALqC,KAM7CG,EAAYnC,IAAMoC,aAAY,WAC7B+O,GAAoBpP,IACzBmP,EAAQnP,GACRC,EAAS,IACTiP,OACC,CAACjP,EAAUD,EAAOmP,EAASC,EAAiBF,IAEzCnR,EAAQE,IAAMoC,aAAY,kBAAMgP,GAAmB,KAAQ,IAC3DC,EAAOrR,IAAMoC,aAAY,WAC7BgP,GAAmB,KAClB,IAEHpR,IAAMG,iBAAgB,WAChBgR,GACD9P,EAASb,QAA6Bc,UAExC,CAAC6P,IAtB+C,IAwB3CpR,EAAiBH,EAAuBuC,EAAWrC,GAAnDC,aAER,OACE,kBAAC,GAAD,CAAWiR,SAAUG,EAAiB9O,IAAKtC,GACzC,6BACE,2BACEsC,IAAKhB,EACLiB,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAOR,EAASQ,EAAEC,OAAOH,QACnCI,YAAY,mCAEd,6BACE,4BACEC,QAAS,WACPR,MAFJ,YAOA,4BAAQQ,QAAS7C,GACf,kBAAC,IAAD,CAAK8C,KAAM,GAAIC,MAAOvD,EAAME,eAIlC,uBAAGmD,QAAS0O,GAAZ,oBCGStF,GAnDE,SAAC,GAAuC,IAArCR,EAAoC,EAApCA,KAAMzG,EAA8B,EAA9BA,KAAMD,EAAwB,EAAxBA,IAAKhE,EAAmB,EAAnBA,MAC3BuH,EAAUpI,IAAMkC,WAAWiG,IAA3BC,MAEF4B,EAAahK,IAAMmD,SAAQ,WAC/B,IAAMoD,EAAqB,GAa3B,OAXAgF,EAAKvD,OAAOmE,SAAQ,SAAC1D,GACnBlC,EAAIG,KACF,kBAAC9B,EAAD,CACEtE,IAAKmI,EACL5F,MACGuF,EAAMJ,OAAOoE,MAAK,SAAChD,GAAD,OAAWA,EAAMlB,KAAOO,KAAmB5F,YAM/D0D,IACN,CAAC6B,EAAMJ,OAAQuD,EAAKvD,SAEvB,OACE,kBAAC5D,EAAD,CACE6J,MAAO,CACLpN,QACA8P,SAAU,QACV7L,OACAD,MACAkM,OAAQ,WACRH,UAAW,iBACXC,UAAW,kCACXS,WAAY,QACZR,cAAe,SAGjB,kBAACnM,EAAD,KAAeqF,GACf,2BAAIuB,EAAKtD,OACRsD,EAAKxI,MACJ,kBAACiB,EAAD,CACEpC,UAAW,EACXqB,UAAW,EACXD,SAAUuI,EAAKvI,SACfD,KAAMwI,EAAKxI,OAGf,gCACE,kBAAC,IAAD,CAASH,KAAM,Q,QC8BR2O,GAtFW,SACxBC,EACAC,GAEA,IAAMzQ,EAAShB,IAAMC,OAAO,GADzB,EAEuBD,IAAM8B,SAAgB,CAC9ClB,EAAG,EACHG,EAAG,IAJF,mBAEI8L,EAFJ,KAEW6E,EAFX,OAO6B1R,IAAM8B,UAAS,GAP5C,mBAOIuC,EAPJ,KAOcsN,EAPd,KASGC,EAAa5R,IAAMC,OAAc,CACrCW,EAAG,EACHG,EAAG,IAGC8Q,EAAc7R,IAAMC,OAAO,CAC/BW,EAAG,EACHG,EAAG,IAGC+Q,EAAe9R,IAAMC,OAAO,GAkB5B8R,EAAc/R,IAAMoC,aAAY,SAACxB,EAAWG,GAChD6Q,EAAWpR,QAAU,CAAEI,IAAGG,KAC1B2Q,EAAS,CAAE9Q,EAAGA,EAAIiR,EAAYrR,QAAQI,EAAGG,EAAGA,EAAI8Q,EAAYrR,QAAQO,MACnE,IAEGiR,EAAYhS,IAAMoC,aACtB,SAAC/B,GACCsR,GAAY,GACZ3S,SAASiT,KAAKhE,MAAM8C,OAAS,WAC7BgB,EAAY1R,EAAGM,QAASN,EAAGS,WAE7B,CAACiR,IAGGG,EAAUlS,IAAMoC,aAAY,WAChCpD,SAASiT,KAAKhE,MAAM8C,OAAS,OAC7BY,GAAY,GACZ1Q,OAAOE,oBAAoB,YAAa6Q,GACxC/Q,OAAOE,oBAAoB,UAAW+Q,KACrC,CAACF,IAEEvD,EAAuBzO,IAAMoC,aACjC,SAAC2K,GACC,IAAMoF,EAAO,aAAOX,GAEdY,EAAOD,EAAQL,EAAatR,SAClC2R,EAAQL,EAAatR,SAAW2R,EAAQpF,GACxCoF,EAAQpF,GAAWqF,EAEnBN,EAAatR,QAAUuM,EAEvB0E,EAAYU,KAEd,CAACX,EAAUC,IAGb,MAAO,CACLnD,cArDkB,SAClB1M,EACA+K,EACAlM,GAEAoR,EAAYrR,QAAU,CACpBI,EAAG+L,EAAMhM,QAAUF,EAAKG,EACxBG,EAAG4L,EAAM7L,QAAUL,EAAKM,GAE1B+Q,EAAatR,QAAUoB,EACvBZ,EAAOR,QAAUC,EAAKO,OACtB+Q,EAAYpF,EAAMhM,QAASgM,EAAM7L,SACjCG,OAAOC,iBAAiB,YAAa8Q,GACrC/Q,OAAOC,iBAAiB,UAAWgR,IAyCnC3F,iBAAkBuF,EAAatR,QAC/BgO,aAAcnK,EACdgO,iBAAkBxF,EAClB7L,OAAQA,EAAOR,QACfiO,yBCjFS6D,GAAa,SACxBd,EACAC,GAEA,IAAM5Q,EAAQb,IAAMC,OAAO,GADxB,EAEqCD,IAAM8B,UAAS,GAFpD,mBAEIyC,EAFJ,KAEkBgO,EAFlB,OAGuBvS,IAAM8B,SAAgB,CAC9ClB,EAAG,EACHG,EAAG,IALF,mBAGI8L,EAHJ,KAGW6E,EAHX,KAQGG,EAAc7R,IAAMC,OAAc,CACtCW,EAAG,EACHG,EAAG,IAGC6Q,EAAa5R,IAAMC,OAAc,CACrCW,EAAG,EACHG,EAAG,IAGCyR,EAAcxS,IAAMC,OAAO,CAC/BgD,UAAW,EACXrB,UAAW,IAuBPmQ,EAAc/R,IAAMoC,aAAY,SAACxB,EAAWG,GAChD6Q,EAAWpR,QAAU,CAAEI,IAAGG,KAC1B2Q,EAAS,CAAE9Q,EAAGA,EAAIiR,EAAYrR,QAAQI,EAAGG,EAAGA,EAAI8Q,EAAYrR,QAAQO,MACnE,IAEGiR,EAAYhS,IAAMoC,aACtB,SAAC/B,GACCkS,GAAgB,GAChBvT,SAASiT,KAAKhE,MAAM8C,OAAS,WAC7BgB,EAAY1R,EAAGM,QAASN,EAAGS,WAE7B,CAACiR,IAGGG,EAAUlS,IAAMoC,aAAY,WAChCpD,SAASiT,KAAKhE,MAAM8C,OAAS,OAC7BwB,GAAgB,GAChBtR,OAAOE,oBAAoB,YAAa6Q,GACxC/Q,OAAOE,oBAAoB,UAAW+Q,KACrC,CAACF,IAEES,EAAkBzS,IAAMoC,aAAY,SAAC2K,GACzC,QACEA,EAAU,GACVA,EAAUnO,EAAUyN,OAAS,I5BhDP,SAAC5L,EAAeoM,GAC1C,IAAM0D,EAASxR,IAGf,OAFA8N,EAAMjM,GAAK2P,EAEJ1D,EAAMjM,GAAKH,EAAKG,GAAKiM,EAAMjM,GAAKH,EAAKG,EAAIH,EAAKI,M4B6ChD6R,CAAa9T,EAAUmO,GAAU6E,EAAWpR,YAK9C,IAEGmS,EAAuB3S,IAAMoC,aACjC,SAAC2K,GACC,IAAMoF,EAAO,aAAOX,GAEpBW,EAAQpF,GAAS2D,MAAMhK,KACrByL,EAAQK,EAAYhS,QAAQoB,WAAW8O,MACrC8B,EAAYhS,QAAQyC,YAIxBkP,EAAQK,EAAYhS,QAAQoB,WAAW8O,MAAMkC,OAC3CJ,EAAYhS,QAAQyC,UACpB,GAGFuP,EAAYhS,QAAU,CACpBoB,UAAWmL,EACX9J,UAAWkP,EAAQpF,GAAS2D,MAAMrE,OAAS,GAG7CoF,EAAYU,KAEd,CAACX,EAAUC,IAGPhF,EAAqBzM,IAAMoC,aAC/B,SAACyQ,GACC,KACEA,EAAc,GACdA,GAAerB,EAASgB,EAAYhS,QAAQoB,WAAW8O,MAAMrE,QAF/D,CAMA,IAAM8F,EAAO,aAAOX,GAEdsB,EACJX,EAAQK,EAAYhS,QAAQoB,WAAW8O,MACrC8B,EAAYhS,QAAQyC,WAGxBkP,EAAQK,EAAYhS,QAAQoB,WAAW8O,MAAMkC,OAC3CJ,EAAYhS,QAAQyC,UACpB,GAGFkP,EAAQK,EAAYhS,QAAQoB,WAAW8O,MAAMkC,OAAOC,EAAa,EAAGC,GAEpEN,EAAYhS,QAAQyC,UAAY4P,EAEhCpB,EAAYU,MAEd,CAACX,EAAUC,IAoBb,OAjBAzR,IAAMG,iBAAgB,WACpB,GAAIoE,EAAc,CAChB,IAAMwO,EACJnB,EAAWpR,QAAQI,EACnBiR,EAAYrR,QAAQI,E5B/HJ,SAAC8G,GACvB,IAAMjH,EAAO7B,EAAU8I,GACjB6I,EAASxR,IACf,OAAO0B,EAAKG,EAAI2P,E4B6HVyC,CAASR,EAAYhS,QAAQoB,WAEzBqR,EAAOF,EAAYlD,KAAKqD,IAAIH,IAAc,EAE1CI,EAAcX,EAAYhS,QAAQoB,UAAYqR,EAEhDA,GAAQR,EAAgBU,IAC1BR,EAAqBQ,MAGxB,CAAC5O,EAAcsI,EAAO4F,EAAiBE,IAEnC,CACLpO,eACAsI,QACAP,cA9HoB,SACpBrJ,EACArB,EACA+K,EACAlM,GAEAoR,EAAYrR,QAAU,CACpBI,EAAG+L,EAAMhM,QAAUF,EAAKG,EACxBG,EAAG4L,EAAM7L,QAAUL,EAAKM,GAE1ByR,EAAYhS,QAAU,CACpByC,YACArB,aAEFf,EAAML,QAAUC,EAAKI,MACrBkR,EAAYpF,EAAMhM,QAASgM,EAAM7L,SACjCG,OAAOC,iBAAiB,YAAa8Q,GACrC/Q,OAAOC,iBAAiB,UAAWgR,IA8GnCM,YAAaA,EAAYhS,QACzBiM,qBACA5L,MAAOA,EAAML,U,4mCC9JV,IAAMrB,GAAYC,IAAOC,IAAV,MAQT+T,GAAiBhU,IAAOC,IAAV,MA2BdgU,GAAcjU,IAAOC,IAAV,MAaXiU,GAAWlU,IAAO0E,OAAV,MACL,qBAAGjB,SAON,qBAAG0Q,GAAe,EAAI,MCxC7BC,GAAO,CACX,CACEvL,MAAO,UACPyI,MAAO,CACL,eACA,wBACA,oEACA,uGAGJ,CACEzI,MAAO,SACPyI,MAAO,CAAC,gBAEV,CACEzI,MAAO,OACPyI,MAAO,CAAC,iBA2IG+C,GAvID,WAAO,IAAD,EACczT,IAAM8B,UAAqB,WACzD,OAAO0R,GAAKlM,KAAI,SAAC+G,GAAD,sBACXA,EADW,CAEdnG,GAAIe,IAAQC,WACZwH,MAAOrC,EAAKqC,MAAMpJ,KAAI,SAACiE,GAAD,MAAW,CAC/BrD,GAAIe,IAAQC,WACZjB,MAAOsD,EACPxI,KAAM,GACNC,UAAU,EACVgF,OAAQ,eAVI,mBACXwJ,EADW,KACDC,EADC,OAeSzR,IAAMkC,WAAWiG,IAApCC,EAfU,EAeVA,MAAOC,EAfG,EAeHA,QAETqL,ECjDO,SACblC,EACAC,GAEA,IAAM7F,EAAa5L,IAAMoC,aACvB,SAACa,EAAmBrB,GAClB,IAAMuQ,EAAO,aAAOX,GAEpBW,EAAQvQ,GAAW8O,MAAMkC,OAAO3P,EAAW,GAE3CwO,EAAYU,KAEd,CAACX,EAAUC,IAGPxP,EAAajC,IAAMoC,aACvB,SAAC6F,EAAerG,GACd,IAAMuQ,EAAO,aAAOX,GACdmC,EAAgB,CACpB3L,OAAQ,GACRC,QACAC,GAAIe,IAAQC,WACZnG,KAAM,GACNC,UAAU,GAEZmP,EAAQvQ,GAAW8O,MAAMhK,KAAKiN,GAC9BlC,EAAYU,KAEd,CAACX,EAAUC,IAGPzD,EAAahO,IAAMoC,aACvB,SAACR,GACC,IAAMuQ,EAAO,aAAOX,GAEpBW,EAAQS,OAAOhR,EAAW,GAE1B6P,EAAYU,KAEd,CAACX,EAAUC,IAGPP,EAAUlR,IAAMoC,aACpB,SAAC6F,GACC,IAAMkK,EAAO,aAAOX,GAEpBW,EAAQzL,KAAK,CACXwB,GAAIe,IAAQC,WACZwH,MAAO,GACPzI,UAGFwJ,EAAYU,KAEd,CAACX,EAAUC,IAGPtD,EAAgBnO,IAAMoC,aAC1B,SAAC6F,EAAerG,GACd,IAAMuQ,EAAO,aAAOX,GACpBW,EAAQvQ,GAAWqG,MAAQA,EAC3BwJ,EAAYU,KAEd,CAACX,EAAUC,IAGP5F,EAAgB7L,IAAMoC,aAC1B,SAAC6F,EAAehF,EAAmBrB,GACjC,IAAMuQ,EAAO,aAAOX,GACpBW,EAAQvQ,GAAW8O,MAAMzN,GAAWgF,MAAQA,EAC5CwJ,EAAYU,KAEd,CAACX,EAAUC,IAGP1L,EAAe/F,IAAMoC,aACzB,SAACW,EAAcE,EAAmBrB,GAChC,IAAMuQ,EAAO,aAAOX,GACpBW,EAAQvQ,GAAW8O,MAAMzN,GAAWF,KAAOA,EAC3C0O,EAAYU,KAEd,CAACX,EAAUC,IAGPpO,EAAoBrD,IAAMoC,aAC9B,SAACgG,EAAgBnF,EAAmBrB,GAClC,IAAMuQ,EAAO,aAAOX,GACpBW,EAAQvQ,GAAW8O,MAAMzN,GAAWD,SAAWoF,EAC/CqJ,EAAYU,KAEd,CAACX,EAAUC,IAGPjJ,EAAYxI,IAAMoC,aACtB,SAACwR,EAAiB3Q,EAAmBrB,GACnC,IAAMuQ,EAAO,aAAOX,GACdqC,EAAW1B,EAAQvQ,GAAW8O,MAAMzN,GAAW+E,OAAOoD,WAC1D,SAAChC,GAAD,OAAWA,IAAUwK,KAIrBzB,EAAQvQ,GAAW8O,MAAMzN,GAAW+E,OADlC6L,GAAY,EAC+B1B,EAAQvQ,GAAW8O,MAC9DzN,GACA+E,OAAOmB,QAAO,SAACC,GAAD,OAAWA,IAAUwK,KAErC,uBACKzB,EAAQvQ,GAAW8O,MAAMzN,GAAW+E,QADzC,CAEE4L,IAGJnC,EAAYU,KAEd,CAACX,EAAUC,IAGPnH,EAAmBtK,IAAMoC,aAC7B,SAACwR,GACC,IAAMzB,EAAUX,EAASlK,KAAI,SAAC+G,GAAD,sBACxBA,EADwB,CAE3BqC,MAAOrC,EAAKqC,MAAMpJ,KAAI,SAACiE,GAAD,sBACjBA,EADiB,CAEpBvD,OAAQuD,EAAKvD,OAAOmB,QAAO,SAACC,GAAD,OAAWA,IAAUwK,eAIpDnC,EAAYU,KAEd,CAACX,EAAUC,IA8Bb,OA3BmDzR,IAAMmD,SACvD,iBAAO,CACL+N,UACAjP,aACA2J,aACAoC,aACAG,gBACAtC,gBACA9F,eACA1C,oBACAmF,YACA8B,sBAEF,CACE4G,EACAjP,EACA+L,EACApC,EACAuC,EACAtC,EACA9F,EACA1C,EACAmF,EACA8B,IDxGyBwJ,CAAYtC,EAAUC,GAjBjC,EA0BdsC,GAAWvC,EAAUC,GANvBnD,EApBgB,EAoBhBA,cACA/B,EArBgB,EAqBhBA,iBACAiC,EAtBgB,EAsBhBA,aACA6D,EAvBgB,EAuBhBA,iBACArR,EAxBgB,EAwBhBA,OACAyN,EAzBgB,EAyBhBA,qBAzBgB,EAmCd6D,GAAWd,EAAUC,GANvBnF,EA7BgB,EA6BhBA,cACAO,EA9BgB,EA8BhBA,MACAtI,EA/BgB,EA+BhBA,aACAiO,EAhCgB,EAgChBA,YACA/F,EAjCgB,EAiChBA,mBACA5L,EAlCgB,EAkChBA,MAlCgB,EElCL,SAAkCgO,GAC/C,IAAMC,EAAY9O,IAAMC,OAA8B,MAChD8O,EAAc/O,IAAMC,OAA8B,MAClD+O,EAAgBhP,IAAMC,OAAc,CAAEW,EAAG,EAAGG,EAAG,IAK/CkO,EAAiBjP,IAAMoC,aAAY,SAACuK,GACxCqC,EAAcxO,QAAU,CACtBI,EAAG+L,EAAMhM,QACTI,EAAG4L,EAAM7L,WAEV,IAEGoO,EAAkBlP,IAAMoC,aAAY,WACxC,IAAMtD,EAAUgQ,EAAUtO,QACpBC,EAAO3B,EAAQ4B,wBACfsT,EAbS,IAaavT,EAAKG,EAC3BqT,EAAYxT,EAAKG,EAAIH,EAAKI,MAdjB,IAgBTqT,EAAalF,EAAcxO,QAAQI,GAAKqT,EACxCE,EAAcnF,EAAcxO,QAAQI,GAAKoT,EAEzCI,EAAgBtV,EAAQI,WAAa,EACrCmV,EACJvV,EAAQI,WAAaJ,EAAQwV,YAAc7T,EAAKI,MAElD,KAAMqT,IAAeG,MAAqBF,IAAgBC,GACxD,OAAO,EAGT,IAAIzE,EAAa7Q,EAAQI,WAEzB,GAAImV,GAAkBH,EAAY,CAChC,IAAMtE,GAAaZ,EAAcxO,QAAQI,EAAIqT,GA9BhC,IA+BbtE,GAA0BE,KAAKC,IA9BnB,GA8BiCF,EA9BjC,SA+BP,GAAIwE,GAAiBD,EAAa,CACvC,IAAMvE,GAAaoE,EAAWhF,EAAcxO,QAAQI,GAjCvC,IAkCb+O,GAA0BE,KAAKC,IAjCnB,GAiCiCF,EAjCjC,IAoCVD,IAAe7Q,EAAQI,YACzBJ,EAAQiR,SAAS,CACfjL,KAAM6K,MAGT,IAEH3P,IAAMG,iBAAgB,WASpB,OARI0O,GACFE,EAAYvO,QAAUwP,sBAAYd,EAAiB,IACnDjO,OAAOC,iBAAiB,YAAa+N,KAErChO,OAAOE,oBAAoB,YAAa8N,GACpCF,EAAYvO,SAASyP,wBAAclB,EAAYvO,UAG9C,WACLS,OAAOE,oBAAoB,YAAa8N,GACpCF,EAAYvO,SAASyP,wBAAclB,EAAYvO,YAEpD,CAACyO,EAAgBC,EAAiBL,IAErC,IAAMoC,EAAgBjR,IAAMoC,aAAY,WACtC,IAAMtD,EAAUgQ,EAAUtO,QAC1B1B,EAAQiR,SAAS,CACfjL,KAAMhG,EAAQwV,gBAEf,IAKH,MAAO,CAAExF,YAAWmC,iBFHiBsD,CAAyB/F,GAAtDM,EArCU,EAqCVA,UAAWmC,EArCD,EAqCCA,cAEbuD,EAAuCxU,IAAMmD,SACjD,iBAAO,CACLmJ,gBACA/H,eACAtB,UAAWuP,EAAYvP,UACvBrB,UAAW4Q,EAAY5Q,UACvB6K,wBAEF,CACE+F,EAAYvP,UACZuP,EAAY5Q,UACZ2C,EACA+H,EACAG,IASJ,OACE,kBAACjL,EAAgB6H,SAAjB,CAA0B/G,MAAOoR,GAC/B,kBAAC,EAAerK,SAAhB,CAAyB/G,MAAOkS,GAC9B,kBAAC,GAAD,KACE,kBAACnB,GAAD,KACGjL,EAAMJ,OAAOV,KAAI,SAAC8B,GAAD,OAChB,kBAACkK,GAAD,CACEhT,IAAK8I,EAAMlB,GACXqL,GAAInK,EAAM7D,SACV1C,MAAOuG,EAAMvG,MACbF,QAAS,kBAAM0F,EAAQK,gBAAgBU,EAAMlB,MAE5CkB,EAAMnB,UAGX,kBAACqL,GAAD,CACEC,GAAInL,EAAML,cACVlF,MAAM,OACNF,QAAS,kBAAM0F,EAAQM,gBAHzB,WAQF,kBAACyK,GAAD,CAAgBlL,GAAG,cAAc7F,IAAKyM,GACnC0C,EAASlK,KAAI,SAAC+G,EAAM3G,GAAP,OACZ,kBAAC,GAAD,CACE8F,iBACEjJ,GAAgBiO,EAAY5Q,YAAc8F,EAE5CpH,IAAK+N,EAAKnG,GACVtG,UAAW8F,EACX2G,KAAMA,EACNC,cAAeA,EACfC,aAAcC,GAAgBjC,IAAqB7E,EACnD8G,aAAcA,EACdC,qBAAsBA,OAG1B,kBAAC,GAAD,CAASwC,cAAeA,IACxB,yBACEhD,MAAO,CACLwG,SAAU,MACVzT,OAAQ,OACR0T,OAAQ,MAKbnQ,GACC,kBAACoQ,GAAD,CACEpJ,KACEiG,EAASgB,EAAY5Q,WAAW8O,MAAM8B,EAAYvP,WAEpD6B,KAAM+H,EAAMjM,EACZiE,IAAKgI,EAAM9L,EACXF,MAAOA,IAIV2N,GACC,kBAAC,GAAD,CACEH,KAAMmD,EAASjF,GACf3K,UAAW2K,EACXzH,KAAMuN,EAAiBzR,EACvBiE,IAAKwN,EAAiBtR,EACtBC,OAAQA,Q,8QG5If,IAAM4T,GAA6B,CACxCpV,UAAW,UACXkF,aAAc,sBACdJ,kBAAmB,sBACnBqJ,UAAW,UACXC,YAAa,UACb3I,UAAW,UACX1F,UAAW,QACXG,MAAO,UACPyE,IAAK,UACLqB,KAAM,UACNkF,IAAK,UACLxG,OAAQ,UACRsG,OAAQ,UACRC,OAAQ,UACRG,KAAM,UACND,KAAM,UACNE,MAAO,WAGIgK,GAAeC,YAAH,MAUZ,qBAAGxV,MAAkBE,a,4yCCnD3B,IAAML,GAAYC,IAAOC,IAAV,MAON,qBAAGC,MAAkBoF,gBAwBxBqQ,IAjBmB3V,IAAOC,IAAI2V,OACzC,kBAAuC,CACrCC,MADF,EAAGA,QACe,KAFY7V,CAAH,MAUR,qBAAG6V,MAAqB,WAAa,gBAOjC7V,IAAOC,IAAI2V,OAClC,kBAAgC,CAC9BnS,MADF,EAAGA,OACe,8BAFKzD,CAAH,MAMN,qBAAGyD,SAeD,gBAAGA,EAAH,EAAGA,MAAH,OAAepD,YAAe,GAAKoD,OAexCqS,IAXe9V,IAAOC,IAAV,MAOED,YAAO2V,GAAP3V,CAAH,MAIGA,IAAOC,IAAV,OC3BT8V,GApCA,SAACC,GACd,OACE,kBAAC,GAAD,KAcE,kBAACF,GAAD,KACE,kBAAC,KAAD,CAAUtS,KAAM,KADlB,iB,wOCCSyS,OAhBf,WACE,OACE,oCACE,kBAAC,IAAD,CAAe/V,MAAOsV,IACpB,kBAACC,GAAD,MACA,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,WAUN1V,GAAYC,IAAOC,IAAV,MCtBfiW,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFxW,SAASC,eAAe,W","file":"static/js/main.4e221d78.chunk.js","sourcesContent":["import Coord from \"../models/Coord\";\n\nexport let listRects: DOMRect[] = new Array<DOMRect>();\n\nlet element: null | HTMLDivElement = null;\n\nconst getScroll = () => {\n  if (!element) {\n    element = document.getElementById(\"scroll-test\") as HTMLDivElement;\n  }\n\n  return element.scrollLeft;\n};\n\nexport const getRectX = (index: number): number => {\n  const rect = listRects[index];\n  const scroll = getScroll();\n  return rect.x - scroll;\n};\n\nexport const saveListRect = (linstIndex: number, rect: DOMRect) => {\n  const scroll = getScroll();\n\n  rect.x += scroll;\n  listRects[linstIndex] = rect;\n};\n\nexport const rectInRangeX = (rect: DOMRect, coord: Coord): boolean => {\n  const scroll = getScroll();\n  coord.x += scroll;\n\n  return coord.x >= rect.x && coord.x <= rect.x + rect.width;\n};\n\nexport const rectInRangeY = (\n  rect: DOMRect,\n  coord: Coord,\n  yDirection: number\n): boolean => {\n  return yDirection > 0\n    ? coord.y >= rect.y + rect.height * 0.6\n    : coord.y <= rect.y + rect.height * 0.4;\n};\n\nexport const checkRangeY = (rect: DOMRect, coord: Coord): number => {\n  if (coord.y >= rect.y + rect.height * 0.5) return 0;\n  else if (coord.y <= rect.y + rect.height * 0.5) return -1;\n  else return 1;\n};\n","import styled from \"styled-components\";\nimport { transparentize, darken } from \"polished\";\n\nexport const Container = styled.div`\n  /* border: 2px solid red; */\n  margin: 0 4px 8px 4px;\n  display: flex;\n  flex-direction: column;\n\n  div {\n    margin-top: 8px;\n    display: flex;\n    justify-content: start;\n    align-content: center;\n  }\n\n  input {\n    width: 100%;\n    background: ${({ theme }) => theme.taskColor};\n    border-radius: 4px;\n    border: none;\n    border-bottom: 1px solid #bbb;\n    box-shadow: 0 0 2px rgba(0, 0, 0, 0.1);\n    padding: 8px;\n    resize: vertical;\n    font-size: 14px;\n    color: ${({ theme }) => theme.fontColor};\n    padding-bottom: 39px;\n\n    ::placeholder {\n      color: ${({ theme }) => transparentize(0.5, theme.fontColor)};\n    }\n  }\n\n  button {\n    border: none;\n\n    & + button {\n      margin-left: 4px;\n    }\n\n    :nth-of-type(1) {\n      background: ${({ theme }) => theme.green};\n      border-radius: 4px;\n      font-size: 14px;\n      color: white;\n      padding: 8px;\n\n      :hover {\n        background: ${({ theme }) => transparentize(0.2, theme.green)};\n      }\n\n      :active {\n        background: ${({ theme }) => darken(0.2, theme.green)};\n      }\n    }\n\n    :nth-of-type(2) {\n      background: none;\n\n      opacity: 0.5;\n\n      :hover {\n        opacity: 1;\n      }\n    }\n  }\n`;\n","import React from \"react\";\n\nexport default function useKeyMouseToSaveClose(\n  save: () => void,\n  close: () => void\n) {\n  const containerRef = React.useRef<null | HTMLDivElement>(null);\n  const pauseRef = React.useRef<boolean>(false);\n\n  React.useLayoutEffect(() => {\n    function handleKeyDown(ev: KeyboardEvent) {\n      switch (ev.key) {\n        case \"Enter\":\n          save();\n          break;\n        case \"Escape\":\n          close();\n          break;\n        default:\n          break;\n      }\n    }\n\n    function mouseUpHandler(ev: MouseEvent) {\n      if (pauseRef.current) return;\n      const rect = (containerRef.current as HTMLDivElement).getBoundingClientRect();\n\n      if (\n        ev.clientX < rect.x ||\n        ev.clientX > rect.x + rect.width ||\n        ev.clientY < rect.y ||\n        ev.clientY > rect.y + rect.height\n      ) {\n        save();\n        close();\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    window.addEventListener(\"mousedown\", mouseUpHandler, true);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      window.removeEventListener(\"mousedown\", mouseUpHandler, true);\n    };\n  }, [save, close]);\n\n  return { containerRef, pauseRef };\n}\n","import React from \"react\";\n\nexport default function useFocusInput<\n  T extends HTMLInputElement | HTMLTextAreaElement\n>() {\n  const inputRef = React.useRef<null | T>(null);\n\n  React.useLayoutEffect(() => {\n    (inputRef.current as HTMLInputElement).focus();\n  }, []);\n\n  return inputRef;\n}\n","import React from \"react\";\n\nexport interface TaskListContextValue {\n  deleteTask: (taskIndex: number, listIndex: number) => void;\n  addNewTask: (title: string, listIndex: number) => void;\n  deleteList: (listIndex: number) => void;\n  addList: (title: string) => void;\n  editListTitle: (title: string, listIndex: number) => void;\n  editTaskTitle: (title: string, taskIndex: number, listIndex: number) => void;\n  editTaskDate: (data: string, taskIndex: number, listIndex: number) => void;\n  editCompleteState: (\n    state: boolean,\n    taskIndex: number,\n    listIndex: number\n  ) => void;\n  editLabel: (labelid: string, taskIndex: number, listIndex: number) => void;\n  deleteEveryLabel: (labelid: string) => void;\n}\n\nexport const TaskListContext = React.createContext<TaskListContextValue | null>(\n  null\n);\n","import moment from \"moment\";\nimport React from \"react\";\nimport { FiClock, FiSquare, FiCheckSquare } from \"react-icons/fi\";\nimport styled, { css } from \"styled-components\";\nimport {\n  TaskListContext,\n  TaskListContextValue,\n} from \"../../../Contexts/TaskListContext\";\n\nenum DueState {\n  dueSoon = 0,\n  overDue = 1,\n  normal = 2,\n  done = 3,\n}\n\ninterface Props {\n  taskIndex: number;\n  listIndex: number;\n  date: string;\n  complete: boolean;\n}\n\nexport default ({ date, complete, taskIndex, listIndex }: Props) => {\n  const due = React.useMemo(() => moment(date, \"DD MM YY\"), [date]);\n  const { editCompleteState } = React.useContext(\n    TaskListContext\n  ) as TaskListContextValue;\n\n  const dueState = React.useMemo<DueState>(() => {\n    if (complete) return DueState.done;\n    const today = moment();\n    if (today.isSame(due, \"day\")) return DueState.dueSoon;\n    else if (today.isAfter(due, \"day\")) return DueState.overDue;\n    else return DueState.normal;\n  }, [due, complete]);\n\n  return (\n    <DateBadge\n      dueState={dueState}\n      onClick={(e) => {\n        if (e.button !== 0) return;\n        editCompleteState(!complete, taskIndex, listIndex);\n      }}\n    >\n      {complete ? <FiCheckSquare /> : <FiSquare />}\n      <FiClock />\n      <p>{due.format(\"MMMM Do YYYY\")}</p>\n    </DateBadge>\n  );\n};\n\ninterface DateBadgeProps {\n  dueState: DueState;\n}\n\nconst DateBadge = styled.div<DateBadgeProps>`\n  cursor: pointer;\n  margin-top: 8px;\n  display: grid;\n  grid-template-columns: auto auto 1fr;\n  place-items: center;\n  place-content: center;\n  column-gap: 8px;\n  padding: 4px;\n  color: ${({ theme }) => theme.fontColor};\n  border-radius: 4px;\n\n  ${({ dueState }) => {\n    switch (dueState) {\n      case DueState.dueSoon:\n        return css`\n          background: ${({ theme }) => theme.yellow};\n          color: white;\n        `;\n      case DueState.overDue:\n        return css`\n          background: ${({ theme }) => theme.red};\n          color: white;\n        `;\n      case DueState.done:\n        return css`\n          background: ${({ theme }) => theme.green};\n          color: white;\n        `;\n      default:\n        return css``;\n    }\n  }}\n`;\n","import React from \"react\";\nimport { Container } from \"./styled\";\nimport { FiX } from \"react-icons/fi\";\nimport { withTheme, DefaultTheme } from \"styled-components\";\nimport useKeyMouseToSaveClose from \"../../hooks/useKeyMouseToSaveClose\";\nimport useFocusInput from \"../../hooks/useFocusInput\";\nimport {\n  TaskListContext,\n  TaskListContextValue,\n} from \"../../Contexts/TaskListContext\";\n\ninterface Props {\n  theme: DefaultTheme;\n  listIndex: number;\n  closeNewTask: () => void;\n  scrolDown: () => void;\n}\n\nconst NewTask = ({ theme, closeNewTask, listIndex, scrolDown }: Props) => {\n  const [input, setInput] = React.useState(\"\");\n  const inputRef = useFocusInput<HTMLInputElement>();\n  const { addNewTask } = React.useContext(\n    TaskListContext\n  ) as TaskListContextValue;\n\n  const saveInput = React.useCallback(() => {\n    if (!input) return;\n    addNewTask(input, listIndex);\n    setInput(\"\");\n    scrolDown();\n  }, [setInput, addNewTask, input, listIndex, scrolDown]);\n\n  const { containerRef } = useKeyMouseToSaveClose(saveInput, closeNewTask);\n\n  return (\n    <Container ref={containerRef}>\n      <input\n        ref={inputRef}\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        placeholder=\"Enter a title for this card...\"\n      />\n      <div>\n        <button\n          onClick={() => {\n            saveInput();\n          }}\n        >\n          Add Card\n        </button>\n        <button onClick={closeNewTask}>\n          <FiX size={24} color={theme.fontColor} />\n        </button>\n      </div>\n    </Container>\n  );\n};\n\nexport default withTheme(NewTask);\n","import React from \"react\";\n\nexport interface DndTaskContextValue {\n  taskDragging: boolean;\n  listIndex: number;\n  taskIndex: number;\n  beginTaskDrag: (\n    taskIndex: number,\n    listIndex: number,\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    rect: DOMRect\n  ) => void;\n  moveTaskVertically: (toTaskIndex: number) => void;\n}\n\nconst DndTaskContext = React.createContext<DndTaskContextValue | null>(null);\n\nexport default DndTaskContext;\n","import styled, { css } from \"styled-components\";\nimport { darken } from \"polished\";\n\ninterface DragginProps {\n  dragging?: boolean;\n  taskDragging?: boolean;\n}\n\ninterface CardProps {\n  hide?: boolean;\n}\n\nexport const Card = styled.div<DragginProps & CardProps>`\n  position: relative;\n  max-width: 256px;\n  flex: 1;\n  background: ${({ theme }) => theme.taskColor};\n  padding: 8px;\n  border-radius: 4px;\n  border-bottom: 1px solid ${({ dragging }) => (dragging ? \"#ddd\" : \"#bbb\")};\n  word-wrap: break-word;\n  font-size: 14px;\n  box-shadow: 0 0 2px rgba(0, 0, 0, 0.1);\n  user-select: none;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  cursor: inherit;\n\n  & > button {\n    position: absolute;\n    top: 4px;\n    right: 4px;\n    border: none;\n    background: none;\n    display: none;\n    opacity: 0.5;\n    border-radius: 4px;\n\n    place-content: center;\n    width: 20px;\n    height: 20px;\n\n    :hover {\n      opacity: 1;\n      background: ${({ theme }) => theme.transparencyLight};\n    }\n  }\n\n  ${({ dragging }) =>\n    !dragging &&\n    css`\n      :hover > button {\n        display: grid;\n      }\n    `}\n\n  p {\n    max-width: calc(100% - 16px);\n    margin-right: 16px;\n  }\n\n  ${({ taskDragging }) =>\n    !taskDragging &&\n    css`\n      cursor: pointer;\n\n      &:hover {\n        background: ${({ theme }) => darken(0.1, theme.taskColor)};\n      }\n    `}\n\n  p {\n    opacity: ${({ dragging }) => (dragging ? 0 : 1)};\n  }\n\n  transition: 0.2s;\n\n  & + div {\n    margin-top: ${({ hide }) => (hide ? \"0\" : \"8px\")};\n  }\n\n  ${({ hide }) =>\n    hide &&\n    css`\n      max-height: 0;\n      padding: 0;\n      border: 0;\n      overflow: hidden;\n    `}\n`;\n\nexport const Shadow = styled.div<DragginProps>`\n  display: ${({ dragging }) => (dragging ? \"block\" : \"none\")};\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  border-radius: inherit;\n  background: ${({ theme }) => theme.transparency};\n`;\n\nexport const LabelWrapper = styled.div<DragginProps>`\n  width: calc(100% - 20px);\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  column-gap: 4px;\n  row-gap: 4px;\n  margin-bottom: 4px;\n\n  opacity: ${({ dragging }) => (dragging ? 0 : 1)};\n`;\n\ninterface LabelProps {\n  color: string;\n}\n\nexport const LabelMark = styled.div<LabelProps>`\n  height: 8px;\n  border-radius: 8px;\n  background: ${({ color }) => color};\n`;\n","import styled, { css } from \"styled-components\";\nimport { darken, lighten } from \"polished\";\n\ninterface ContainerProps {\n  top: number;\n  left: number;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  position: fixed;\n  z-index: 20;\n  top: ${({ top }) => top + \"px\"};\n  left: ${({ left }) => left + \"px\"};\n\n  width: 300px;\n\n  min-height: 300px;\n\n  background: ${({ theme }) => theme.taskColor};\n\n  padding: 8px 0;\n  border-radius: 4px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n  cursor: auto;\n\n  header {\n    position: relative;\n    display: grid;\n    place-content: center;\n    padding: 8px 16px;\n\n    p {\n      font-size: 14px;\n      text-align: center;\n      opacity: 0.7;\n    }\n\n    button {\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      left: 12px;\n      display: grid;\n      place-content: center;\n      border: none;\n      background: none;\n      opacity: 0.5;\n\n      :hover {\n        opacity: 1;\n      }\n    }\n  }\n`;\n\nexport const Division = styled.div`\n  height: 1px;\n  background: #ddd;\n  margin: 0 12px;\n`;\n\nexport const DataWrapper = styled.div`\n  margin: 8px;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  column-gap: 8px;\n  row-gap: 4px;\n\n  & > p {\n    font-size: 14px;\n    font-weight: 700;\n  }\n\n  & > div {\n    padding: 8px;\n    border: 2px solid ${({ theme }) => theme.listColor};\n    border-radius: 4px;\n    font-size: 14px;\n  }\n`;\n\nexport const CalendarNavWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  column-gap: 8px;\n  margin: 8px;\n\n  button,\n  select {\n    font-size: 14px;\n    cursor: pointer;\n    border: none;\n    background: none;\n    border-bottom: 1px solid black;\n    opacity: 0.5;\n\n    :hover {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Calendar = styled.div`\n  display: grid;\n  margin: 8px;\n  grid-template-columns: repeat(7, 1fr);\n\n  border-bottom: 1px solid ${({ theme }) => theme.fontColor};\n  border-right: 1px solid ${({ theme }) => theme.fontColor};\n`;\n\ninterface CalendarElementProps {\n  today?: boolean;\n  selected?: boolean;\n}\n\nexport const CalendarElement = styled.div<CalendarElementProps>`\n  background: ${({ theme }) => theme.listColor};\n  border-top: 1px solid ${({ theme }) => theme.fontColor};\n  border-left: 1px solid ${({ theme }) => theme.fontColor};\n  height: 30px;\n  display: grid;\n  place-content: center;\n  font-size: 14px;\n`;\n\nexport const CalendarWeekDay = styled(CalendarElement)`\n  background: ${({ theme }) => darken(0.1, theme.listColor)};\n  font-weight: 700;\n`;\n\nexport const CalendarDate = styled(CalendarElement)`\n  cursor: pointer;\n\n  font-weight: ${({ today }) => (today ? \"bold\" : \"500\")};\n\n  ${({ selected, today }) =>\n    selected\n      ? css`\n          background: ${({ theme }) => theme.blue};\n          color: white;\n        `\n      : css`\n          background: ${({ theme }) => theme.taskColor};\n\n          :hover {\n            background: ${({ theme }) => darken(0.1, theme.listColor)};\n          }\n\n          color: ${({ theme }) => (today ? theme.blue : \"auto\")};\n        `};\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 8px;\n`;\n\ninterface BtnProps {\n  color: string;\n}\n\nexport const Btn = styled.button<BtnProps>`\n  padding: 8px 12px;\n  border-radius: 4px;\n  border: none;\n  background: ${({ color }) => color};\n  color: white;\n  font-size: 14px;\n\n  transition: background 0.1s;\n\n  :hover {\n    background: ${({ color }) => lighten(0.1, color)};\n  }\n\n  :active {\n    background: ${({ color }) => darken(0.1, color)};\n  }\n`;\n","import moment from \"moment\";\nimport React from \"react\";\nimport { FiX } from \"react-icons/fi\";\nimport {\n  Container,\n  Division,\n  Calendar,\n  CalendarElement,\n  CalendarWeekDay,\n  CalendarDate,\n  BtnWrapper,\n  Btn,\n  CalendarNavWrapper,\n  DataWrapper,\n} from \"./styled\";\nimport { ThemeContext } from \"styled-components\";\nimport useKeyMouseToSaveClose from \"../../../hooks/useKeyMouseToSaveClose\";\nimport {\n  TaskListContext,\n  TaskListContextValue,\n} from \"../../../Contexts/TaskListContext\";\n\ninterface Props {\n  top: number;\n  left: number;\n  listIndex: number;\n  taskIndex: number;\n  close: () => void;\n  date: string;\n}\n\nexport default ({ top, left, listIndex, taskIndex, close, date }: Props) => {\n  const [selected, setSelected] = React.useState<moment.Moment>(\n    date ? moment(date, \"DD MM YY\") : moment()\n  );\n  const [calendarView, serCalendarView] = React.useState(\n    (date ? moment(date, \"DD MM YY\") : moment()).date(1)\n  );\n  const { editTaskDate } = React.useContext(\n    TaskListContext\n  ) as TaskListContextValue;\n\n  const save = React.useCallback(\n    (val: string) => {\n      editTaskDate(val, taskIndex, listIndex);\n      close();\n    },\n    [close, editTaskDate, taskIndex, listIndex]\n  );\n\n  const { containerRef } = useKeyMouseToSaveClose(() => {}, close);\n  const start = calendarView.weekday();\n  const daysInMonth = calendarView.daysInMonth();\n  const end =\n    (start + daysInMonth) % 7 === 0 ? 0 : 7 - ((start + daysInMonth) % 7);\n\n  const weekDays = React.useMemo(\n    () => [\"dom\", \"2ª\", \"3ª\", \"4ª\", \"5ª\", \"6ª\", \"sáb\"],\n    []\n  );\n\n  const years = React.useMemo(() => {\n    const arr: number[] = [];\n    const year = moment().year();\n\n    for (let i = 0; i < 21; i++) arr.push(year - 10 + i);\n\n    return arr;\n  }, []);\n\n  const { green, red } = React.useContext(ThemeContext);\n\n  const dates = () => {\n    let arr: JSX.Element[] = [];\n    for (let i = 0; i < daysInMonth; i++)\n      arr.push(\n        <CalendarDate\n          key={i}\n          today={\n            calendarView.year() === moment().year() &&\n            calendarView.month() === moment().month() &&\n            moment().date() === i + 1\n          }\n          selected={\n            calendarView.year() === selected.year() &&\n            calendarView.month() === selected.month() &&\n            selected.date() === i + 1\n          }\n          onClick={() => setSelected(calendarView.clone().date(i + 1))}\n        >\n          {i + 1}\n        </CalendarDate>\n      );\n    return arr;\n  };\n\n  const emptyDate = (n: number) => {\n    let arr: JSX.Element[] = [];\n    for (let i = 0; i < n; i++) arr.push(<CalendarElement key={i} />);\n    return arr;\n  };\n\n  return (\n    <Container\n      ref={containerRef}\n      top={top}\n      left={left}\n      onMouseDown={(e) => e.stopPropagation()}\n    >\n      <header>\n        <p>Change Due Date</p>\n        <button onClick={close}>\n          <FiX size={16} />\n        </button>\n      </header>\n      <Division />\n      <DataWrapper>\n        <p>Date</p>\n        <p>Time</p>\n        <div>{selected.format(\"MMMM Do YYYY\")}</div>\n        <div>{selected.format(\"H:mm\")}</div>\n      </DataWrapper>\n      <CalendarNavWrapper>\n        <button\n          onClick={() => serCalendarView((val) => val.clone().subtract(1, \"M\"))}\n        >\n          Prev\n        </button>\n        <select\n          value={calendarView.month()}\n          onChange={(e) => {\n            const newMonth = Number(e.target.value);\n            serCalendarView((val) => val.clone().month(newMonth));\n          }}\n        >\n          {moment.months().map((month, i) => (\n            <option key={month} value={i}>\n              {month}\n            </option>\n          ))}\n        </select>\n        <select\n          value={calendarView.year()}\n          onChange={(e) => {\n            const newYear = Number(e.target.value);\n            serCalendarView((val) => val.clone().year(newYear));\n          }}\n        >\n          {years.map((year) => (\n            <option key={year} value={year}>\n              {year}\n            </option>\n          ))}\n        </select>\n        <button\n          onClick={() => serCalendarView((val) => val.clone().add(1, \"M\"))}\n        >\n          Next\n        </button>\n      </CalendarNavWrapper>\n      <Calendar>\n        {weekDays.map((day, index) => (\n          <CalendarWeekDay key={index}>{day}</CalendarWeekDay>\n        ))}\n        {emptyDate(start)}\n        {dates()}\n        {emptyDate(end)}\n      </Calendar>\n      <BtnWrapper>\n        <Btn color={green} onClick={() => save(selected.format(\"DD/MM/YY\"))}>\n          Save\n        </Btn>\n        <Btn color={red} onClick={() => save(\"\")}>\n          Remove\n        </Btn>\n      </BtnWrapper>\n    </Container>\n  );\n};\n","import styled from \"styled-components\";\nimport { darken, lighten } from \"polished\";\n\ninterface MenuProps {\n  top: number;\n  left: number;\n}\n\nexport const Container = styled.div<MenuProps>`\n  position: fixed;\n  z-index: 10;\n  top: 0px;\n  left: 0px;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, .5);\n  /* background:  ${({ theme }) => theme.transparency}; */\n  cursor: auto;\n\n  & > div {\n    position: absolute;\n    top: ${({ top }) => top + \"px\"};\n    left: ${({ left }) => left + \"px\"};\n    display: flex;\n    padding-right: 8px;\n    /* background: ${({ theme }) => theme.transparencyLight};\n    box-shadow: 0 0 10px 10px ${({ theme }) => theme.transparencyLight}; */\n  }\n`;\n\ninterface EditZoneProps {\n  width: number;\n  height: number;\n}\n\nexport const EditZone = styled.div<EditZoneProps>`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: flex-start;\n\n  & > div {\n    width: ${({ width }) => width + \"px\"};\n    min-height: ${({ height }) => height + \"px\"};\n    border-radius: 4px;\n    background: white;\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    flex-direction: column;\n    padding: 8px;\n\n    & > textarea {\n      width: 100%;\n      resize: none;\n      min-height: 100px;\n      font-size: 14px;\n      border: none;\n      border-radius: inherit;\n      padding-right: 16px;\n    }\n  }\n\n  & > button {\n    margin-top: 16px;\n    padding: 8px 16px;\n    background: ${({ theme }) => theme.green};\n    color: white;\n    font-size: 14px;\n    border: none;\n    border-radius: 4px;\n    transition: 0.1s;\n\n    :hover {\n      background: ${({ theme }) => lighten(0.1, theme.green)};\n    }\n\n    :active {\n      background: ${({ theme }) => darken(0.1, theme.green)};\n    }\n  }\n`;\n\nexport const OptionsZone = styled.div`\n  margin-left: 8px;\n  display: grid;\n  row-gap: 4px;\n  place-content: start;\n  place-items: start;\n  grid-template-columns: auto;\n\n  & > button {\n    background: ${({ theme }) => theme.transparency};\n    color: white;\n    border: none;\n    border-radius: 4px;\n    padding: 8px 12px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    & > p {\n      margin-left: 8px;\n      font-size: 14px;\n      font-weight: 700;\n    }\n\n    transition: 0.1s;\n\n    :hover {\n      transform: translateX(8px);\n      background: ${({ theme }) => darken(0.1, theme.transparency)};\n    }\n  }\n`;\n","import React from \"react\";\nimport shortid from \"shortid\";\nimport Label from \"../models/Label\";\n\ninterface LabelState {\n  noTagSelected: boolean;\n  labels: Label[];\n}\n\ninterface LabelActions {\n  createLabel: (title: string, color: string) => void;\n  deleteLabel: (id: string) => void;\n  editLabel: (labelId: string, title: string, color: string) => void;\n  toggleSelection: (labelId: string) => void;\n  toggleNoTag: () => void;\n}\n\ninterface LabelContextType {\n  state: LabelState;\n  actions: LabelActions;\n}\n\nconst initialState: LabelState = {\n  noTagSelected: true,\n  labels: [\n    { color: \"red\", title: \"teste\", id: \"1\", selected: true },\n    { color: \"blue\", title: \"teste\", id: \"2\", selected: true },\n    { color: \"green\", title: \"teste\", id: \"3\", selected: true },\n    { color: \"yellow\", title: \"teste\", id: \"4\", selected: true },\n  ],\n};\n\nexport const LabelContext = React.createContext<LabelContextType>({\n  state: initialState,\n  actions: {\n    createLabel: (title: string, color: string) => {},\n    deleteLabel: (id: string) => {},\n    editLabel: (labelId: string, title: string, color: string) => {},\n    toggleSelection: (labelId: string) => {},\n    toggleNoTag: () => {},\n  },\n});\n\ninterface Props {\n  children: JSX.Element;\n}\n\nexport const LabelProvider = ({ children }: Props) => {\n  const [state, setState] = React.useState<LabelState>(initialState);\n\n  const createLabel = React.useCallback(\n    (title: string, color: string) => {\n      const newState = { ...state };\n\n      const newLabel: Label = {\n        title,\n        color,\n        id: shortid.generate(),\n        selected: true,\n      };\n\n      newState.labels.push(newLabel);\n\n      setState(newState);\n    },\n    [state, setState]\n  );\n\n  const deleteLabel = React.useCallback(\n    (id: string) => {\n      const newState = { ...state };\n\n      newState.labels = newState.labels.filter((label) => label.id !== id);\n\n      setState(newState);\n    },\n    [state, setState]\n  );\n\n  const editLabel = React.useCallback(\n    (labelId: string, title: string, color: string) => {\n      const newState = { ...state };\n\n      newState.labels = newState.labels.map((label) =>\n        label.id !== labelId\n          ? label\n          : {\n              ...label,\n              title,\n              color,\n            }\n      );\n\n      setState(newState);\n    },\n    [state, setState]\n  );\n\n  const toggleSelection = React.useCallback(\n    (labelId: string) => {\n      const newState = {\n        ...state,\n        labels: state.labels.map((label) =>\n          label.id !== labelId ? label : { ...label, selected: !label.selected }\n        ),\n      };\n      setState(newState);\n    },\n    [state, setState]\n  );\n\n  const toggleNoTag = React.useCallback(() => {\n    const newState = { ...state, noTagSelected: !state.noTagSelected };\n    setState(newState);\n  }, [state, setState]);\n\n  const actions = React.useMemo<LabelActions>(\n    () => ({\n      createLabel,\n      deleteLabel,\n      editLabel,\n      toggleSelection,\n      toggleNoTag,\n    }),\n    [createLabel, deleteLabel, editLabel, toggleSelection, toggleNoTag]\n  );\n\n  return (\n    <LabelContext.Provider value={{ state, actions }}>\n      {children}\n    </LabelContext.Provider>\n  );\n};\n","import styled from \"styled-components\";\nimport { darken, lighten } from \"polished\";\n\ninterface ContainerProps {\n  top: number;\n  left: number;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  position: fixed;\n  z-index: 20;\n  top: ${({ top }) => top + \"px\"};\n  left: ${({ left }) => left + \"px\"};\n\n  width: 300px;\n\n  background: ${({ theme }) => theme.taskColor};\n\n  padding: 8px 0;\n  border-radius: 4px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n  cursor: auto;\n\n  header {\n    position: relative;\n    display: grid;\n    place-content: center;\n    padding: 8px 16px;\n\n    p {\n      font-size: 14px;\n      text-align: center;\n      opacity: 0.7;\n    }\n\n    button {\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      left: 12px;\n      display: grid;\n      place-content: center;\n      border: none;\n      background: none;\n      opacity: 0.5;\n\n      :hover {\n        opacity: 1;\n      }\n    }\n  }\n`;\n\nexport const Division = styled.div`\n  height: 1px;\n  background: #ddd;\n  margin: 0 12px;\n`;\n\nexport const Content = styled.div`\n  padding: 8px;\n  display: grid;\n  grid-auto-flow: row;\n  row-gap: 8px;\n  place-items: start;\n\n  & > p,\n  label {\n    font-size: 12px;\n    font-weight: 700;\n  }\n\n  & > input {\n    width: 100%;\n    padding: 8px 12px;\n    font-size: 14px;\n  }\n`;\n\ninterface ColorSelectBoxProps {\n  color: string;\n}\n\nexport const ColorBoxWrapper = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  column-gap: 8px;\n  row-gap: 8px;\n`;\n\nexport const ColorSelectBox = styled.div<ColorSelectBoxProps>`\n  background: ${({ color }) => color};\n  height: 32px;\n  border-radius: 4px;\n  cursor: pointer;\n  display: grid;\n  place-content: center;\n`;\n\ninterface ConfirmBtnProps {\n  negative?: boolean;\n}\n\nexport const ConfirmBtnWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const ConfirmBtn = styled.button<ConfirmBtnProps>`\n  padding: 8px 12px;\n  border-radius: 4px;\n  border: none;\n  background: ${({ theme, negative }) => (negative ? theme.red : theme.green)};\n  color: white;\n  font-size: 14px;\n  transition: 0.1s;\n\n  :hover {\n    background: ${({ theme, negative }) =>\n      lighten(0.1, negative ? theme.red : theme.green)};\n  }\n\n  :active {\n    background: ${({ theme, negative }) =>\n      darken(0.1, negative ? theme.red : theme.green)};\n  }\n`;\n\nexport const OptionBtn = styled.button`\n  width: 100%;\n  padding: 8px 12px;\n  border: none;\n  background: ${({ theme }) => theme.listColor};\n\n  transition: 0.1s;\n\n  :hover {\n    background: ${({ theme }) => lighten(0.1, theme.listColor)};\n  }\n\n  :active {\n    background: ${({ theme }) => darken(0.1, theme.listColor)};\n  }\n`;\n\nexport const LabelSelectBoxWrapper = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 1fr auto;\n  row-gap: 8px;\n  column-gap: 4px;\n\n  & > p {\n    columns: 1 / 3;\n    font-size: 14px;\n  }\n\n  & > button {\n    width: 32px;\n    background: none;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n\n    :hover {\n      background: ${({ theme }) => theme.listColor};\n    }\n  }\n`;\n\nexport const LabelSelectBox = styled.div<ColorSelectBoxProps>`\n  background: ${({ color }) => color};\n  width: 100%;\n  height: 32px;\n  border-radius: 4px;\n  cursor: pointer;\n  color: white;\n  font-size: 14px;\n  font-weight: 700;\n  padding: 0 12px;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  transition: 0.1s;\n\n  :hover {\n    border-left: 8px solid ${({ color }) => darken(0.1, color)};\n  }\n`;\n","import React from \"react\";\nimport { FiArrowLeft, FiCheck, FiX, FiEdit2 } from \"react-icons/fi\";\nimport { ThemeContext } from \"styled-components\";\nimport { LabelContext } from \"../../../Contexts/LabelContext\";\nimport useKeyMouseToSaveClose from \"../../../hooks/useKeyMouseToSaveClose\";\nimport {\n  ColorBoxWrapper,\n  ColorSelectBox,\n  ConfirmBtn,\n  Container,\n  Content,\n  Division,\n  LabelSelectBox,\n  LabelSelectBoxWrapper,\n  OptionBtn,\n  ConfirmBtnWrapper,\n} from \"./styled\";\nimport {\n  TaskListContext,\n  TaskListContextValue,\n} from \"../../../Contexts/TaskListContext\";\n\ninterface Props {\n  top: number;\n  left: number;\n  listIndex: number;\n  taskIndex: number;\n  close: () => void;\n  labels: string[];\n}\n\nenum LabelMenuPage {\n  main,\n  newLabel,\n  changeLabel,\n}\n\nexport default ({\n  top,\n  left,\n  listIndex,\n  taskIndex,\n  close,\n  labels: taskLabels,\n}: Props) => {\n  const { containerRef } = useKeyMouseToSaveClose(() => {}, close);\n  const { state, actions } = React.useContext(LabelContext);\n  const [page, setPage] = React.useState<LabelMenuPage>(LabelMenuPage.main);\n  const [selectedColor, setSelectedColor] = React.useState(\"\");\n  const [input, setInput] = React.useState(\"\");\n  const { editLabel, deleteEveryLabel } = React.useContext(\n    TaskListContext\n  ) as TaskListContextValue;\n  const changeLabelRef = React.useRef(\"\");\n\n  // console.log(state);\n\n  const {\n    green,\n    yellow,\n    orange,\n    red,\n    purple,\n    blue,\n    sky,\n    lime,\n    pink,\n    black,\n  } = React.useContext(ThemeContext);\n\n  const colorBoxes = React.useMemo(() => {\n    const colorArr = [\n      green,\n      yellow,\n      orange,\n      red,\n      purple,\n      blue,\n      sky,\n      lime,\n      pink,\n      black,\n    ];\n    return colorArr.map((color) => (\n      <ColorSelectBox\n        key={color}\n        color={color}\n        onClick={() => setSelectedColor(color)}\n      >\n        {selectedColor === color && <FiCheck color=\"white\" size={20} />}\n      </ColorSelectBox>\n    ));\n  }, [\n    green,\n    yellow,\n    orange,\n    red,\n    purple,\n    blue,\n    sky,\n    lime,\n    pink,\n    black,\n    selectedColor,\n  ]);\n\n  const header = React.useMemo(() => {\n    switch (page) {\n      case LabelMenuPage.newLabel:\n        return (\n          <>\n            <p>Create Label</p>\n            <button onClick={() => setPage(LabelMenuPage.main)}>\n              <FiArrowLeft size={16} />\n            </button>\n          </>\n        );\n      case LabelMenuPage.changeLabel:\n        return (\n          <>\n            <p>Change Label</p>\n            <button onClick={() => setPage(LabelMenuPage.main)}>\n              <FiArrowLeft size={16} />\n            </button>\n          </>\n        );\n      default:\n        return (\n          <>\n            <p>Labels</p>\n            <button onClick={close}>\n              <FiX size={16} />\n            </button>\n          </>\n        );\n    }\n  }, [close, page, setPage]);\n\n  const content = React.useMemo(() => {\n    switch (page) {\n      case LabelMenuPage.newLabel:\n        return (\n          <>\n            <label htmlFor=\"name\">Name</label>\n            <input\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              id=\"name\"\n            />\n            <p>Select a color</p>\n            <ColorBoxWrapper>{colorBoxes}</ColorBoxWrapper>\n            <ConfirmBtn\n              onClick={() => {\n                if (!input || !selectedColor) return;\n                actions.createLabel(input, selectedColor);\n                setPage(LabelMenuPage.main);\n              }}\n            >\n              Confirm\n            </ConfirmBtn>\n          </>\n        );\n      case LabelMenuPage.changeLabel:\n        return (\n          <>\n            <label htmlFor=\"name\">Name</label>\n            <input\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              id=\"name\"\n            />\n            <p>Select a color</p>\n            <ColorBoxWrapper>{colorBoxes}</ColorBoxWrapper>\n            <ConfirmBtnWrapper>\n              <ConfirmBtn\n                onClick={() => {\n                  if (!input || !selectedColor) return;\n                  actions.editLabel(\n                    changeLabelRef.current,\n                    input,\n                    selectedColor\n                  );\n                  setPage(LabelMenuPage.main);\n                }}\n              >\n                Save\n              </ConfirmBtn>\n              <ConfirmBtn\n                negative={true}\n                onClick={() => {\n                  deleteEveryLabel(changeLabelRef.current);\n                  actions.deleteLabel(changeLabelRef.current);\n                  setPage(LabelMenuPage.main);\n                }}\n              >\n                Delete\n              </ConfirmBtn>\n            </ConfirmBtnWrapper>\n          </>\n        );\n      default:\n        return (\n          <>\n            <p>LABELS</p>\n            <LabelSelectBoxWrapper>\n              {state.labels.map((label) => (\n                <React.Fragment key={label.id + \"btnfrag\"}>\n                  <LabelSelectBox\n                    key={label.id}\n                    color={label.color}\n                    onClick={() => editLabel(label.id, taskIndex, listIndex)}\n                  >\n                    <p>{label.title}</p>\n                    {taskLabels.findIndex((l) => l === label.id) >= 0 && (\n                      <FiCheck color=\"white\" size={20} />\n                    )}\n                  </LabelSelectBox>\n                  <button\n                    onClick={() => {\n                      changeLabelRef.current = label.id;\n                      setInput(label.title);\n                      setSelectedColor(label.color);\n                      setPage(LabelMenuPage.changeLabel);\n                    }}\n                    key={label.id + \"btn\"}\n                  >\n                    <FiEdit2 size={16} />\n                  </button>\n                </React.Fragment>\n              ))}\n            </LabelSelectBoxWrapper>\n\n            <OptionBtn\n              onClick={() => {\n                setInput(\"\");\n                setSelectedColor(\"\");\n                setPage(LabelMenuPage.newLabel);\n              }}\n            >\n              Create a new Label\n            </OptionBtn>\n          </>\n        );\n    }\n  }, [\n    page,\n    colorBoxes,\n    input,\n    actions,\n    selectedColor,\n    state.labels,\n    taskLabels,\n    editLabel,\n    listIndex,\n    taskIndex,\n    deleteEveryLabel,\n  ]);\n\n  return (\n    <Container\n      ref={containerRef}\n      top={top}\n      left={left}\n      onMouseDown={(e) => e.stopPropagation()}\n    >\n      <header>{header}</header>\n      <Division />\n      <Content>{content}</Content>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { FiArchive, FiClock, FiTag } from \"react-icons/fi\";\nimport {\n  TaskListContext,\n  TaskListContextValue,\n} from \"../../../Contexts/TaskListContext\";\nimport useFocusInput from \"../../../hooks/useFocusInput\";\nimport useKeyMouseToSaveClose from \"../../../hooks/useKeyMouseToSaveClose\";\nimport Task from \"../../../models/Task\";\nimport DateBadge from \"../DateBadge\";\nimport DateMenu from \"../dateMenu\";\nimport { Container, EditZone, OptionsZone } from \"./styled\";\nimport LabelMenu from \"../labelMenu\";\nimport { LabelWrapper } from \"../styled\";\n\ninterface Props {\n  close: () => void;\n  rect: DOMRect;\n  task: Task;\n  taskIndex: number;\n  listIndex: number;\n  taskLabels: JSX.Element[];\n}\n\nconst TaskMenu = ({\n  close,\n  rect,\n  task,\n  listIndex,\n  taskIndex,\n  taskLabels,\n}: Props) => {\n  const inputRef = useFocusInput<HTMLTextAreaElement>();\n  const [input, setInput] = React.useState(\"\");\n  const [dateMenuOpen, setDateMenuOpen] = React.useState(false);\n  const [labelMenuOpen, setLabelMenuOpen] = React.useState(false);\n  const { deleteTask, editTaskTitle } = React.useContext(\n    TaskListContext\n  ) as TaskListContextValue;\n\n  React.useEffect(() => {\n    setInput(task.title);\n  }, [task.title]);\n\n  const save = React.useCallback(() => {\n    if (input === \"\") return;\n    editTaskTitle(input, taskIndex, listIndex);\n    close();\n  }, [input, close, editTaskTitle, taskIndex, listIndex]);\n\n  const { containerRef, pauseRef } = useKeyMouseToSaveClose(save, close);\n\n  return (\n    <Container\n      onMouseDown={(e) => e.stopPropagation()}\n      top={rect.y}\n      left={rect.x}\n    >\n      <div ref={containerRef}>\n        <EditZone height={rect.height} width={rect.width}>\n          <div>\n            <LabelWrapper>{taskLabels}</LabelWrapper>\n            <textarea\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              ref={inputRef}\n            />\n            {task.date && (\n              <DateBadge\n                taskIndex={taskIndex}\n                listIndex={listIndex}\n                complete={task.complete}\n                date={task.date}\n              />\n            )}\n          </div>\n          <button onClick={save}>Save</button>\n        </EditZone>\n        <OptionsZone>\n          <button\n            onClick={() => {\n              setLabelMenuOpen(true);\n              pauseRef.current = true;\n            }}\n          >\n            <FiTag />\n            <p>Edit Labels</p>\n          </button>\n          <button\n            onClick={() => {\n              setDateMenuOpen(true);\n              pauseRef.current = true;\n            }}\n          >\n            <FiClock />\n            <p>Change Due Date</p>\n          </button>\n          <button\n            onClick={() => {\n              deleteTask(taskIndex, listIndex);\n            }}\n          >\n            <FiArchive />\n            <p>Archive</p>\n          </button>\n        </OptionsZone>\n        {labelMenuOpen && (\n          <LabelMenu\n            close={() => {\n              setLabelMenuOpen(false);\n              pauseRef.current = false;\n            }}\n            top={rect.y}\n            left={rect.x + rect.width + 8}\n            taskIndex={taskIndex}\n            listIndex={listIndex}\n            labels={task.labels}\n          />\n        )}\n        {dateMenuOpen && (\n          <DateMenu\n            date={task.date}\n            close={() => {\n              setDateMenuOpen(false);\n              pauseRef.current = false;\n            }}\n            top={rect.y}\n            left={rect.x + rect.width + 8}\n            taskIndex={taskIndex}\n            listIndex={listIndex}\n          />\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default TaskMenu;\n","import React from \"react\";\nimport { FiEdit2 } from \"react-icons/fi\";\nimport DndTaskContext, {\n  DndTaskContextValue,\n} from \"../../Contexts/DndTaskContext\";\nimport Task from \"../../models/Task\";\nimport { checkRangeY } from \"../../util\";\nimport DateBadge from \"./DateBadge\";\nimport { Card, Shadow, LabelWrapper, LabelMark } from \"./styled\";\nimport TaskMenu from \"./taskMenu\";\nimport { LabelContext } from \"../../Contexts/LabelContext\";\nimport Label from \"../../models/Label\";\n\ninterface Props {\n  task: Task;\n  listIndex: number;\n  index: number;\n}\n\nconst TaskCard = ({ task, listIndex, index }: Props) => {\n  const containerRef = React.useRef<HTMLDivElement | null>(null);\n  const [menuOpen, setMenuOpen] = React.useState(false);\n  const { state } = React.useContext(LabelContext);\n\n  const hideRef = React.useRef(false);\n\n  const taskLabels = React.useMemo(() => {\n    const arr: JSX.Element[] = [];\n    hideRef.current = true;\n\n    task.labels.forEach((labelId) => {\n      const label = state.labels.find((label) => label.id === labelId) as Label;\n      if (label.selected) hideRef.current = false;\n      arr.push(<LabelMark key={labelId} color={label.color} />);\n    });\n\n    if (!arr.length && state.noTagSelected) hideRef.current = false;\n\n    return arr;\n  }, [state.labels, task.labels, state.noTagSelected]);\n\n  const {\n    beginTaskDrag,\n    taskDragging,\n    listIndex: draggedListIndex,\n    taskIndex: draggedTaskIndex,\n    moveTaskVertically,\n  } = React.useContext(DndTaskContext) as DndTaskContextValue;\n\n  const dragging =\n    taskDragging &&\n    draggedListIndex === listIndex &&\n    draggedTaskIndex === index;\n\n  const mouseMoveHandle = React.useCallback(\n    (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      if (!taskDragging) return;\n      if (dragging) return;\n      const rect = (containerRef.current as HTMLDivElement).getBoundingClientRect();\n      const coord = {\n        x: event.clientX,\n        y: event.clientY,\n      };\n      const check = checkRangeY(rect, coord);\n      if (check > 0) return;\n      const toIndex = index + check + 1;\n      if (toIndex !== draggedTaskIndex) moveTaskVertically(toIndex);\n    },\n    [dragging, index, moveTaskVertically, draggedTaskIndex, taskDragging]\n  );\n\n  const handleLeftMouseDown = React.useCallback(\n    (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      beginTaskDrag(\n        index,\n        listIndex,\n        event,\n        (containerRef.current as HTMLDivElement).getBoundingClientRect()\n      );\n    },\n    [beginTaskDrag, index, listIndex]\n  );\n\n  const handleRightMouseDown = React.useCallback(\n    (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      setMenuOpen(true);\n    },\n    []\n  );\n\n  const handleMouseDown = React.useCallback(\n    (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      event.preventDefault();\n      if (event.button === 0) {\n        handleLeftMouseDown(event);\n      } else {\n        handleRightMouseDown(event);\n      }\n    },\n    [handleLeftMouseDown, handleRightMouseDown]\n  );\n\n  return (\n    <Card\n      hide={hideRef.current}\n      taskDragging={taskDragging}\n      dragging={dragging}\n      ref={containerRef}\n      onContextMenu={(e) => {\n        e.preventDefault();\n      }}\n      onMouseDown={handleMouseDown}\n      onMouseMove={mouseMoveHandle}\n    >\n      <LabelWrapper dragging={dragging}>{taskLabels}</LabelWrapper>\n      <p>{task.title}</p>\n      {task.date && !dragging && (\n        <DateBadge\n          listIndex={listIndex}\n          taskIndex={index}\n          complete={task.complete}\n          date={task.date}\n        />\n      )}\n      <button onClick={() => setMenuOpen(true)}>\n        <FiEdit2 size={14} />\n      </button>\n      <Shadow dragging={dragging} />\n      {menuOpen && (\n        <TaskMenu\n          taskLabels={taskLabels}\n          taskIndex={index}\n          listIndex={listIndex}\n          rect={(containerRef.current as HTMLDivElement).getBoundingClientRect()}\n          close={() => setMenuOpen(false)}\n          task={task}\n        />\n      )}\n    </Card>\n  );\n};\n\nexport default TaskCard;\n","import styled, { css } from \"styled-components\";\n\ninterface draggingProps {\n  dragging?: boolean;\n  selfTaskDragging?: boolean;\n}\n\nexport const Container = styled.div`\n  min-width: 272px;\n\n  height: 100%;\n\n  & + div {\n    margin-left: 8px;\n  }\n`;\n\nexport const CardContent = styled.div<draggingProps>`\n  position: relative;\n  max-width: 272px;\n  width: 100%;\n  padding: 0 4px;\n\n  max-height: 100%;\n\n  /* display: flex;\n  flex-direction: column; */\n\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  row-gap: 8px;\n  /* grid-auto-flow: row; */\n\n  background: ${({ dragging, theme }) => (dragging ? \"none\" : theme.listColor)};\n\n  font-size: 14px;\n  border-radius: 4px;\n`;\n\ninterface ShadowProps {\n  dragging: boolean;\n}\n\nexport const Shadow = styled.div<ShadowProps>`\n  display: ${({ dragging }) => (dragging ? \"block\" : \"none\")};\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  border-radius: inherit;\n  background: ${({ theme }) => theme.transparency};\n`;\n\nexport const CardHeader = styled.div<draggingProps>`\n  opacity: ${({ dragging }) => (dragging ? 0 : 1)};\n  font-weight: 700;\n  cursor: ${({ selfTaskDragging }) =>\n    selfTaskDragging ? \"inherit\" : \"pointer\"};\n  padding-top: 4px;\n  position: relative;\n  display: grid;\n  grid-template-columns: 1fr auto;\n\n  & > button {\n    height: 32px;\n    width: 32px;\n    /* border: 2px solid red; */\n    display: grid;\n    place-content: center;\n    border-radius: 4px;\n    opacity: 0.5;\n    border: none;\n\n    :hover {\n      opacity: 1;\n      background: ${({ theme }) => theme.transparencyLight};\n    }\n  }\n\n  & > div {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    padding-left: 12px;\n    width: 100%;\n    font-weight: 700;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n  }\n\n  p {\n  }\n`;\n\nexport const NewTaskBtn = styled.div<draggingProps>`\n  opacity: ${({ dragging }) => (dragging ? 0 : 1)};\n  display: grid;\n  grid-auto-flow: column;\n  align-content: center;\n  place-content: start;\n\n  column-gap: 8px;\n  padding: 8px 8px;\n  cursor: ${({ selfTaskDragging }) =>\n    selfTaskDragging ? \"inherit\" : \"pointer\"};\n  margin: 0 4px;\n  margin-bottom: 8px;\n\n  ${({ selfTaskDragging }) =>\n    !selfTaskDragging &&\n    css`\n      :hover {\n        background: rgba(9, 30, 66, 0.08);\n      }\n    `}\n`;\n\nexport const TaskContainer = styled.div<draggingProps>`\n  opacity: ${({ dragging }) => (dragging ? 0 : 1)};\n  display: flex;\n  flex-direction: column;\n  padding: 0 4px 0 4px;\n  flex: 1 1 auto;\n  overflow-y: auto;\n\n  /* width */\n  ::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    border-radius: 10px;\n    background: ${({ theme }) => theme.scrollBar};\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: ${({ theme }) => theme.scrollThumb};\n    border-radius: 10px;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  width: 300px;\n  background: ${({ theme }) => theme.taskColor};\n  padding: 8px 0;\n  border-radius: 4px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n\n  header {\n    position: relative;\n    display: grid;\n    place-content: center;\n    padding: 8px 16px;\n\n    p {\n      font-size: 14px;\n      text-align: center;\n      opacity: 0.5;\n    }\n\n    button {\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      left: 12px;\n      display: grid;\n      place-content: center;\n      border: none;\n      background: none;\n      opacity: 0.5;\n\n      :hover {\n        opacity: 1;\n      }\n    }\n  }\n\n  ul {\n    list-style: none;\n    padding: 8px 0;\n\n    li {\n      button {\n        width: 100%;\n        border: none;\n        background: none;\n        font-size: 14px;\n        padding: 8px 12px;\n        text-align: start;\n\n        :hover {\n          background: ${({ theme }) => theme.listColor};\n        }\n      }\n    }\n  }\n`;\n\nexport const Division = styled.div`\n  height: 1px;\n  background: #ddd;\n  margin: 0 12px;\n`;\n","import React from \"react\";\nimport { FiX } from \"react-icons/fi\";\nimport {\n  TaskListContext,\n  TaskListContextValue,\n} from \"../../../Contexts/TaskListContext\";\nimport useKeyMouseToSaveClose from \"../../../hooks/useKeyMouseToSaveClose\";\nimport Coord from \"../../../models/Coord\";\nimport { Container, Division } from \"./styled\";\n\ninterface Props {\n  menuPosition: Coord;\n  close: () => void;\n  openNewTask: () => void;\n  listIndex: number;\n}\n\nconst CardlistAction = ({\n  menuPosition,\n  close,\n  openNewTask,\n  listIndex,\n}: Props) => {\n  const { containerRef } = useKeyMouseToSaveClose(() => {}, close);\n  const { deleteList } = React.useContext(\n    TaskListContext\n  ) as TaskListContextValue;\n  return (\n    <Container\n      ref={containerRef}\n      style={{\n        top: menuPosition.y,\n        left: menuPosition.x,\n      }}\n    >\n      <header>\n        <p>List Actions</p>\n        <button onClick={close}>\n          <FiX size={16} />\n        </button>\n      </header>\n      <Division />\n      <ul>\n        <li>\n          <button\n            onClick={() => {\n              openNewTask();\n              close();\n            }}\n          >\n            Add Card...\n          </button>\n        </li>\n      </ul>\n      <Division />\n      <ul>\n        <li>\n          <button\n            onClick={() => {\n              deleteList(listIndex);\n              close();\n            }}\n          >\n            Archive this List\n          </button>\n        </li>\n      </ul>\n    </Container>\n  );\n};\n\nexport default CardlistAction;\n","import React from \"react\";\nimport styled, { withTheme, DefaultTheme } from \"styled-components\";\nimport useKeyMouseToSaveClose from \"../../../hooks/useKeyMouseToSaveClose\";\nimport useFocusInput from \"../../../hooks/useFocusInput\";\nimport {\n  TaskListContext,\n  TaskListContextValue,\n} from \"../../../Contexts/TaskListContext\";\nimport { FiX } from \"react-icons/fi\";\n\ninterface Props {\n  title: string;\n  close: () => void;\n  listIndex: number;\n  theme: DefaultTheme;\n}\n\nconst CardlistEditTitle = ({ title, close, listIndex, theme }: Props) => {\n  const [input, setInput] = React.useState(\"\");\n\n  const { editListTitle } = React.useContext(\n    TaskListContext\n  ) as TaskListContextValue;\n\n  const save = React.useCallback(() => {\n    if (!input) return;\n    editListTitle(input, listIndex);\n    close();\n  }, [input, close, editListTitle, listIndex]);\n\n  const { containerRef } = useKeyMouseToSaveClose(save, close);\n  const inputRef = useFocusInput<HTMLInputElement>();\n\n  React.useEffect(() => {\n    setInput(title);\n  }, [title]);\n\n  return (\n    <Container ref={containerRef}>\n      <Input\n        ref={inputRef}\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n      />\n      <Btn\n        onClick={(e) => {\n          close();\n          e.stopPropagation();\n        }}\n      >\n        <FiX size={20} color={theme.red} />\n      </Btn>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  top: 4px;\n  left: 0;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Btn = styled.div`\n  position: absolute;\n  top: 50%;\n  right: 40px;\n  transform: translateY(-50%);\n  display: grid;\n  place-content: center;\n  height: 20px;\n  width: 20px;\n\n  opacity: 0.5;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nconst Input = styled.input`\n  width: calc(100% - 32px);\n  height: calc(100% - 4px);\n  border: none;\n  background: none;\n  padding: 8px 12px;\n  padding-right: 28px;\n  font-size: 14px;\n  font-weight: 700;\n  background: ${({ theme }) => theme.taskColor};\n  border: 2px solid ${({ theme }) => theme.red};\n  border-radius: 4px;\n  color: ${({ theme }) => theme.fontColor};\n`;\n\nexport default withTheme(CardlistEditTitle);\n","import React from \"react\";\nimport { BsThreeDots } from \"react-icons/bs\";\nimport { FiPlus } from \"react-icons/fi\";\nimport useMouseScroll from \"../../hooks/useMouseScrollVertical\";\nimport TaskList from \"../../models/List\";\nimport Coord from \"../../models/Coord\";\nimport { saveListRect } from \"../../util\";\nimport NewTask from \"../newTask\";\nimport TaskCard from \"../taskCard\";\nimport {\n  CardContent,\n  CardHeader,\n  Container,\n  NewTaskBtn,\n  Shadow,\n  TaskContainer,\n} from \"./styled\";\nimport CardlistAction from \"./cardlistAction\";\nimport CardListEdit from \"./cardlistEditTitle\";\n\ninterface Props {\n  list: TaskList;\n  listIndex: number;\n  selfTaskDragging: boolean;\n  draggingList: boolean;\n  draggingSelf: boolean;\n  beginDragList: (\n    listIndex: number,\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    rect: DOMRect\n  ) => void;\n  moveListHorizontally: (toIndex: number) => void;\n}\n\nconst CardList = ({\n  list,\n  listIndex,\n  selfTaskDragging,\n  beginDragList,\n  draggingSelf,\n  draggingList,\n  moveListHorizontally,\n}: Props) => {\n  const [editing, setEditing] = React.useState(false);\n  const contentRef = React.useRef<HTMLDivElement | null>(null);\n  const { scrollRef, scrolDown } = useMouseScroll(selfTaskDragging);\n  const [addingTask, setAddingTask] = React.useState(false);\n  const [menuOpen, setMenuOpen] = React.useState(false);\n  const menuBtnRef = React.useRef<HTMLButtonElement | null>(null);\n\n  const menuPosition: Coord = React.useMemo(() => {\n    if (!menuOpen) return { x: 0, y: 0 };\n    const rect = (menuBtnRef.current as HTMLButtonElement).getBoundingClientRect();\n    return {\n      x: rect.x,\n      y: rect.y,\n    };\n  }, [menuOpen]);\n\n  React.useLayoutEffect(() => {\n    saveListRect(\n      listIndex,\n      (contentRef.current as HTMLDivElement).getBoundingClientRect()\n    );\n  }, [listIndex]);\n\n  const handleMouseDown = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    if (event.button !== 0) return;\n\n    beginDragList(\n      listIndex,\n      event,\n      (contentRef.current as HTMLDivElement).getBoundingClientRect()\n    );\n  };\n\n  const handleMouseEnter = () => {\n    if (!draggingList || draggingSelf) return;\n    moveListHorizontally(listIndex);\n  };\n\n  return (\n    <Container onMouseEnter={handleMouseEnter}>\n      <CardContent dragging={draggingSelf} ref={contentRef}>\n        <CardHeader\n          selfTaskDragging={selfTaskDragging}\n          dragging={draggingSelf}\n          onMouseDown={handleMouseDown}\n        >\n          <div onClick={() => setEditing(true)}>\n            <p>{list.title}</p>\n            {editing && (\n              <CardListEdit\n                close={() => setEditing(false)}\n                listIndex={listIndex}\n                title={list.title}\n              />\n            )}\n          </div>\n          <button ref={menuBtnRef} onClick={() => setMenuOpen((val) => !val)}>\n            <BsThreeDots size={16} />\n          </button>\n        </CardHeader>\n        <TaskContainer dragging={draggingSelf} ref={scrollRef}>\n          {list.tasks.map((task, taskIndex) => (\n            <TaskCard\n              key={task.id}\n              task={task}\n              listIndex={listIndex}\n              index={taskIndex}\n            />\n          ))}\n        </TaskContainer>\n        {addingTask ? (\n          <NewTask\n            listIndex={listIndex}\n            closeNewTask={() => setAddingTask(false)}\n            scrolDown={scrolDown}\n          />\n        ) : (\n          <NewTaskBtn\n            selfTaskDragging={selfTaskDragging}\n            dragging={draggingSelf}\n            onClick={() => setAddingTask(true)}\n          >\n            <FiPlus size={16} />\n            {list.tasks.length > 0 ? (\n              <p>Add another card</p>\n            ) : (\n              <p>Add a card</p>\n            )}\n          </NewTaskBtn>\n        )}\n        <Shadow dragging={draggingSelf} />\n      </CardContent>\n      {menuOpen && (\n        <CardlistAction\n          listIndex={listIndex}\n          openNewTask={() => setAddingTask(true)}\n          close={() => setMenuOpen(false)}\n          menuPosition={menuPosition}\n        />\n      )}\n    </Container>\n  );\n};\nexport default CardList;\n","import React from \"react\";\nimport Coord from \"../models/Coord\";\nimport { clearInterval, setInterval } from \"timers\";\n\nexport default function useMouseScrollVertical(condition: boolean) {\n  const scrollRef = React.useRef<HTMLDivElement | null>(null);\n  const intervalRef = React.useRef<NodeJS.Timeout | null>(null);\n  const mouseCoordRef = React.useRef<Coord>({ x: 0, y: 0 });\n\n  const edgeSize = 100;\n  const maxStep = 20;\n\n  const saveMouseCoord = React.useCallback((event: MouseEvent) => {\n    mouseCoordRef.current = {\n      x: event.clientX,\n      y: event.clientY,\n    };\n  }, []);\n\n  const checkMoveScroll = React.useCallback(() => {\n    const element = scrollRef.current as HTMLDivElement;\n    const rect = element.getBoundingClientRect();\n    const topEdge = edgeSize + rect.y;\n    const bottomEdge = rect.y + rect.height - edgeSize;\n\n    const inBottomEdge = mouseCoordRef.current.y >= bottomEdge;\n    const inTopEdge = mouseCoordRef.current.y <= topEdge;\n\n    const canScrollUp = element.scrollTop > 0;\n    const canScrollDown =\n      element.scrollTop < element.scrollHeight - rect.height;\n\n    if ((!inBottomEdge || !canScrollDown) && (!inTopEdge || !canScrollUp)) {\n      return false;\n    }\n\n    let nextScroll = element.scrollTop;\n\n    if (canScrollDown && inBottomEdge) {\n      const intensity = (mouseCoordRef.current.y - bottomEdge) / edgeSize;\n      nextScroll = nextScroll + Math.min(maxStep * intensity, maxStep);\n    } else if (canScrollUp && inTopEdge) {\n      const intensity = (topEdge - mouseCoordRef.current.y) / edgeSize;\n      nextScroll = nextScroll - Math.min(maxStep * intensity, maxStep);\n    }\n\n    if (nextScroll !== element.scrollTop) {\n      element.scrollTo({\n        top: nextScroll,\n      });\n    }\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (condition) {\n      intervalRef.current = setInterval(checkMoveScroll, 30);\n      window.addEventListener(\"mousemove\", saveMouseCoord);\n    } else {\n      window.removeEventListener(\"mousemove\", saveMouseCoord);\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    }\n\n    return () => {\n      window.removeEventListener(\"mousemove\", saveMouseCoord);\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, [saveMouseCoord, checkMoveScroll, condition]);\n\n  const scrolDown = React.useCallback(() => {\n    const element = scrollRef.current as HTMLDivElement;\n    element.scrollTo({\n      top: element.scrollHeight,\n    });\n  }, []);\n\n  return { scrollRef, scrolDown };\n}\n","import React from \"react\";\nimport { BsThreeDots } from \"react-icons/bs\";\nimport { FiPlus } from \"react-icons/fi\";\nimport TaskList from \"../../models/List\";\nimport TaskCard from \"../taskCard\";\nimport { CardContent, CardHeader, NewTaskBtn, TaskContainer } from \"./styled\";\n\ninterface Props {\n  list: TaskList;\n  listIndex: number;\n  left: number;\n  top: number;\n  height: number;\n}\n\nconst CardList = ({ list, listIndex, top, left, height }: Props) => {\n  return (\n    <CardContent\n      style={{\n        position: \"fixed\",\n        left,\n        top,\n        height,\n        transform: \"rotate(2.5deg)\",\n        boxShadow: \"5px 5px 20px rgba(0, 0, 0, 0.3)\",\n        pointerEvents: \"none\",\n      }}\n    >\n      <CardHeader\n        style={{\n          cursor: \"grabbing\",\n        }}\n      >\n        <div>\n          <p>{list.title}</p>\n        </div>\n        <button>\n          <BsThreeDots size={16} />\n        </button>\n      </CardHeader>\n      <TaskContainer>\n        {list.tasks.map((task, taskIndex) => (\n          <TaskCard\n            key={task.id}\n            task={task}\n            listIndex={listIndex}\n            index={taskIndex}\n          />\n        ))}\n      </TaskContainer>\n      <NewTaskBtn>\n        <FiPlus />\n        <p>Adicionar outro cartão</p>\n      </NewTaskBtn>\n    </CardContent>\n  );\n};\nexport default CardList;\n","import styled from \"styled-components\";\nimport { transparentize, darken } from \"polished\";\n\ninterface ContainerProps {\n  creating: boolean;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  min-width: 272px;\n  background: ${({ theme, creating }) =>\n    creating ? theme.listColor : theme.transparency};\n  display: flex;\n  flex-direction: column;\n  padding: 4px;\n  border-radius: 4px;\n  cursor: pointer;\n\n  p {\n    display: ${({ creating }) => (creating ? \"none\" : \"block\")};\n    padding: 4px;\n    color: white;\n  }\n\n  & > div {\n    display: ${({ creating }) => (creating ? \"block\" : \"none\")};\n\n    & > div {\n      margin-top: 8px;\n      display: flex;\n      justify-content: start;\n      align-content: center;\n    }\n  }\n\n  input {\n    width: 100%;\n    background: ${({ theme }) => theme.taskColor};\n    border-radius: 4px;\n    border: none;\n    padding: 8px;\n    resize: vertical;\n    font-size: 14px;\n    color: ${({ theme }) => theme.fontColor};\n\n    ::placeholder {\n      color: ${({ theme }) => transparentize(0.5, theme.fontColor)};\n    }\n  }\n\n  button {\n    border: none;\n\n    & + button {\n      margin-left: 4px;\n    }\n\n    :nth-of-type(1) {\n      background: ${({ theme }) => theme.green};\n      border-radius: 4px;\n      font-size: 14px;\n      color: white;\n      padding: 8px;\n\n      :hover {\n        background: ${({ theme }) => transparentize(0.2, theme.green)};\n      }\n\n      :active {\n        background: ${({ theme }) => darken(0.2, theme.green)};\n      }\n    }\n\n    :nth-of-type(2) {\n      background: none;\n\n      opacity: 0.5;\n\n      :hover {\n        opacity: 1;\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { FiX } from \"react-icons/fi\";\nimport { DefaultTheme, withTheme } from \"styled-components\";\nimport useKeyMouseToSaveClose from \"../../hooks/useKeyMouseToSaveClose\";\nimport { Container } from \"./styled\";\nimport {\n  TaskListContextValue,\n  TaskListContext,\n} from \"../../Contexts/TaskListContext\";\n\ninterface Props {\n  theme: DefaultTheme;\n  scrollToRight: () => void;\n}\n\nconst NewList = ({ theme, scrollToRight }: Props) => {\n  const { addList } = React.useContext(TaskListContext) as TaskListContextValue;\n\n  const [creatingNewList, setCreatingNewList] = React.useState(false);\n  const inputRef = React.useRef<HTMLInputElement | null>(null);\n  const [input, setInput] = React.useState(\"\");\n  const saveInput = React.useCallback(() => {\n    if (!creatingNewList || !input) return;\n    addList(input);\n    setInput(\"\");\n    scrollToRight();\n  }, [setInput, input, addList, creatingNewList, scrollToRight]);\n\n  const close = React.useCallback(() => setCreatingNewList(false), []);\n  const open = React.useCallback(() => {\n    setCreatingNewList(true);\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (creatingNewList) {\n      (inputRef.current as HTMLInputElement).focus();\n    }\n  }, [creatingNewList]);\n\n  const { containerRef } = useKeyMouseToSaveClose(saveInput, close);\n\n  return (\n    <Container creating={creatingNewList} ref={containerRef}>\n      <div>\n        <input\n          ref={inputRef}\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Enter a title for this list...\"\n        />\n        <div>\n          <button\n            onClick={() => {\n              saveInput();\n            }}\n          >\n            Add List\n          </button>\n          <button onClick={close}>\n            <FiX size={24} color={theme.fontColor} />\n          </button>\n        </div>\n      </div>\n      <p onClick={open}>Add new list</p>\n    </Container>\n  );\n};\n\nexport default withTheme(NewList);\n","import React from \"react\";\nimport Task from \"../../models/Task\";\nimport { Card, LabelWrapper, LabelMark } from \"./styled\";\nimport { FiEdit2 } from \"react-icons/fi\";\nimport DateBadge from \"./DateBadge\";\nimport { LabelContext } from \"../../Contexts/LabelContext\";\nimport Label from \"../../models/Label\";\n\ninterface Props {\n  task: Task;\n  left: number;\n  top: number;\n  width: number;\n}\n\nconst TaskCard = ({ task, left, top, width }: Props) => {\n  const { state } = React.useContext(LabelContext);\n\n  const taskLabels = React.useMemo(() => {\n    const arr: JSX.Element[] = [];\n\n    task.labels.forEach((labelId) => {\n      arr.push(\n        <LabelMark\n          key={labelId}\n          color={\n            (state.labels.find((label) => label.id === labelId) as Label).color\n          }\n        />\n      );\n    });\n\n    return arr;\n  }, [state.labels, task.labels]);\n\n  return (\n    <Card\n      style={{\n        width,\n        position: \"fixed\",\n        left,\n        top,\n        cursor: \"grabbing\",\n        transform: \"rotate(2.5deg)\",\n        boxShadow: \"5px 5px 20px rgba(0, 0, 0, 0.3)\",\n        background: \"white\",\n        pointerEvents: \"none\",\n      }}\n    >\n      <LabelWrapper>{taskLabels}</LabelWrapper>\n      <p>{task.title}</p>\n      {task.date && (\n        <DateBadge\n          listIndex={0}\n          taskIndex={0}\n          complete={task.complete}\n          date={task.date}\n        />\n      )}\n      <button>\n        <FiEdit2 size={14} />\n      </button>\n    </Card>\n  );\n};\n\nexport default TaskCard;\n","import React from \"react\";\nimport Coord from \"../models/Coord\";\nimport TaskList from \"../models/List\";\n\nexport const useDnDList = (\n  allLists: TaskList[],\n  setAllLists: React.Dispatch<React.SetStateAction<TaskList[]>>\n) => {\n  const height = React.useRef(0);\n  const [coord, setCoord] = React.useState<Coord>({\n    x: 0,\n    y: 0,\n  });\n\n  const [dragging, setDragging] = React.useState(false);\n\n  const mouseCoord = React.useRef<Coord>({\n    x: 0,\n    y: 0,\n  });\n\n  const mouseOffset = React.useRef({\n    x: 0,\n    y: 0,\n  });\n\n  const listIndexRef = React.useRef(0);\n\n  const onMouseDown = (\n    listIndex: number,\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    rect: DOMRect\n  ) => {\n    mouseOffset.current = {\n      x: event.clientX - rect.x,\n      y: event.clientY - rect.y,\n    };\n    listIndexRef.current = listIndex;\n    height.current = rect.height;\n    setPosition(event.clientX, event.clientY);\n    window.addEventListener(\"mousemove\", mouseMove);\n    window.addEventListener(\"mouseup\", mouseUp);\n  };\n\n  const setPosition = React.useCallback((x: number, y: number) => {\n    mouseCoord.current = { x, y };\n    setCoord({ x: x - mouseOffset.current.x, y: y - mouseOffset.current.y });\n  }, []);\n\n  const mouseMove = React.useCallback(\n    (ev: MouseEvent) => {\n      setDragging(true);\n      document.body.style.cursor = \"grabbing\";\n      setPosition(ev.clientX, ev.clientY);\n    },\n    [setPosition]\n  );\n\n  const mouseUp = React.useCallback(() => {\n    document.body.style.cursor = \"auto\";\n    setDragging(false);\n    window.removeEventListener(\"mousemove\", mouseMove);\n    window.removeEventListener(\"mouseup\", mouseUp);\n  }, [mouseMove]);\n\n  const moveListHorizontally = React.useCallback(\n    (toIndex: number) => {\n      const newList = [...allLists];\n\n      const temp = newList[listIndexRef.current];\n      newList[listIndexRef.current] = newList[toIndex];\n      newList[toIndex] = temp;\n\n      listIndexRef.current = toIndex;\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  return {\n    beginDragList: onMouseDown,\n    draggedListIndex: listIndexRef.current,\n    draggingList: dragging,\n    draggedListCoord: coord,\n    height: height.current,\n    moveListHorizontally,\n  };\n};\n\nexport default useDnDList;\n","import React from \"react\";\nimport Coord from \"../models/Coord\";\nimport TaskList from \"../models/List\";\nimport { listRects, rectInRangeX, getRectX } from \"../util\";\n\nexport const useDndTask = (\n  allLists: TaskList[],\n  setAllLists: React.Dispatch<React.SetStateAction<TaskList[]>>\n) => {\n  const width = React.useRef(0);\n  const [taskDragging, setTaskDragging] = React.useState(false);\n  const [coord, setCoord] = React.useState<Coord>({\n    x: 0,\n    y: 0,\n  });\n\n  const mouseOffset = React.useRef<Coord>({\n    x: 0,\n    y: 0,\n  });\n\n  const mouseCoord = React.useRef<Coord>({\n    x: 0,\n    y: 0,\n  });\n\n  const dragIndexes = React.useRef({\n    taskIndex: 0,\n    listIndex: 0,\n  });\n\n  const beginTaskDrag = (\n    taskIndex: number,\n    listIndex: number,\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    rect: DOMRect\n  ) => {\n    mouseOffset.current = {\n      x: event.clientX - rect.x,\n      y: event.clientY - rect.y,\n    };\n    dragIndexes.current = {\n      taskIndex,\n      listIndex,\n    };\n    width.current = rect.width;\n    setPosition(event.clientX, event.clientY);\n    window.addEventListener(\"mousemove\", mouseMove);\n    window.addEventListener(\"mouseup\", mouseUp);\n  };\n\n  const setPosition = React.useCallback((x: number, y: number) => {\n    mouseCoord.current = { x, y };\n    setCoord({ x: x - mouseOffset.current.x, y: y - mouseOffset.current.y });\n  }, []);\n\n  const mouseMove = React.useCallback(\n    (ev: MouseEvent) => {\n      setTaskDragging(true);\n      document.body.style.cursor = \"grabbing\";\n      setPosition(ev.clientX, ev.clientY);\n    },\n    [setPosition]\n  );\n\n  const mouseUp = React.useCallback(() => {\n    document.body.style.cursor = \"auto\";\n    setTaskDragging(false);\n    window.removeEventListener(\"mousemove\", mouseMove);\n    window.removeEventListener(\"mouseup\", mouseUp);\n  }, [mouseMove]);\n\n  const horizontalCheck = React.useCallback((toIndex: number): boolean => {\n    if (\n      toIndex < 0 ||\n      toIndex > listRects.length - 1 ||\n      !rectInRangeX(listRects[toIndex], mouseCoord.current)\n    )\n      return false;\n\n    return true;\n  }, []);\n\n  const moveTaskHorizontally = React.useCallback(\n    (toIndex: number) => {\n      const newList = [...allLists];\n\n      newList[toIndex].tasks.push(\n        newList[dragIndexes.current.listIndex].tasks[\n          dragIndexes.current.taskIndex\n        ]\n      );\n\n      newList[dragIndexes.current.listIndex].tasks.splice(\n        dragIndexes.current.taskIndex,\n        1\n      );\n\n      dragIndexes.current = {\n        listIndex: toIndex,\n        taskIndex: newList[toIndex].tasks.length - 1,\n      };\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const moveTaskVertically = React.useCallback(\n    (toTaskIndex: number) => {\n      if (\n        toTaskIndex < 0 ||\n        toTaskIndex >= allLists[dragIndexes.current.listIndex].tasks.length\n      )\n        return;\n\n      const newList = [...allLists];\n\n      const tmp =\n        newList[dragIndexes.current.listIndex].tasks[\n          dragIndexes.current.taskIndex\n        ];\n\n      newList[dragIndexes.current.listIndex].tasks.splice(\n        dragIndexes.current.taskIndex,\n        1\n      );\n\n      newList[dragIndexes.current.listIndex].tasks.splice(toTaskIndex, 0, tmp);\n\n      dragIndexes.current.taskIndex = toTaskIndex;\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  React.useLayoutEffect(() => {\n    if (taskDragging) {\n      const relativeX =\n        mouseCoord.current.x -\n        mouseOffset.current.x -\n        getRectX(dragIndexes.current.listIndex);\n\n      const xDir = relativeX / Math.abs(relativeX) || 0;\n\n      const toListIndex = dragIndexes.current.listIndex + xDir;\n\n      if (xDir && horizontalCheck(toListIndex)) {\n        moveTaskHorizontally(toListIndex);\n      }\n    }\n  }, [taskDragging, coord, horizontalCheck, moveTaskHorizontally]);\n\n  return {\n    taskDragging,\n    coord,\n    beginTaskDrag,\n    dragIndexes: dragIndexes.current,\n    moveTaskVertically,\n    width: width.current,\n  };\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  max-height: calc(100vh - 40px);\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 8px;\n  flex: 1;\n`;\n\nexport const ListContainter = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n  flex: 1;\n  overflow-x: auto;\n  padding: 8px;\n\n  /* width */\n  ::-webkit-scrollbar {\n    height: 12px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    border-radius: 10px;\n    background: rgba(0, 0, 0, 0.15);\n    margin: 8px;\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: rgba(9, 30, 66, 0.3);\n    border-radius: 10px;\n  }\n`;\n\nexport const LabelFilter = styled.div`\n  padding: 4px 4px 0 8px;\n  display: grid;\n  grid-auto-flow: column;\n  column-gap: 8px;\n  justify-content: start;\n`;\n\ninterface LabelBtnProps {\n  color: string;\n  on: boolean;\n}\n\nexport const LabelBtn = styled.button<LabelBtnProps>`\n  background: ${({ color }) => color};\n  padding: 4px 12px;\n  border: none;\n  border-radius: 4px;\n  color: white;\n  font-weight: 700;\n  font-size: 14px;\n  opacity: ${({ on }) => (on ? 1 : 0.5)};\n`;\n","import React from \"react\";\nimport shortid from \"shortid\";\nimport CardList from \"../../components/cardlist\";\nimport VisualList from \"../../components/cardlist/visualList\";\nimport NewList from \"../../components/newList\";\nimport VisualTaskCard from \"../../components/taskCard/VisualTaskCard\";\nimport DndTaskContext, {\n  DndTaskContextValue,\n} from \"../../Contexts/DndTaskContext\";\nimport useDndList from \"../../hooks/useDnDList\";\nimport { useDndTask } from \"../../hooks/useDndTask\";\nimport useTaskList from \"../../hooks/useTaskList\";\nimport useMouseScrollHorizontal from \"../../hooks/useMouseScrollHorizontal\";\nimport TaskList from \"../../models/List\";\nimport { Container, ListContainter, LabelFilter, LabelBtn } from \"./styles\";\nimport { TaskListContext } from \"../../Contexts/TaskListContext\";\nimport { LabelContext } from \"../../Contexts/LabelContext\";\n\nconst mock = [\n  {\n    title: \"Backlog\",\n    tasks: [\n      \"backlog task\",\n      \"anothter backlog task\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"A very looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong task\",\n    ],\n  },\n  {\n    title: \"To dos\",\n    tasks: [\"a todo task\"],\n  },\n  {\n    title: \"Done\",\n    tasks: [\"a done task\"],\n  },\n];\n\nconst Panel = () => {\n  const [allLists, setAllLists] = React.useState<TaskList[]>(() => {\n    return mock.map((list) => ({\n      ...list,\n      id: shortid.generate(),\n      tasks: list.tasks.map((task) => ({\n        id: shortid.generate(),\n        title: task,\n        date: \"\",\n        complete: false,\n        labels: [],\n      })),\n    }));\n  });\n\n  const { state, actions } = React.useContext(LabelContext);\n\n  const taskListContextValue = useTaskList(allLists, setAllLists);\n\n  const {\n    beginDragList,\n    draggedListIndex,\n    draggingList,\n    draggedListCoord,\n    height,\n    moveListHorizontally,\n  } = useDndList(allLists, setAllLists);\n\n  const {\n    beginTaskDrag,\n    coord,\n    taskDragging,\n    dragIndexes,\n    moveTaskVertically,\n    width,\n  } = useDndTask(allLists, setAllLists);\n\n  const { scrollRef, scrollToRight } = useMouseScrollHorizontal(draggingList);\n\n  const dndContextValue: DndTaskContextValue = React.useMemo(\n    () => ({\n      beginTaskDrag,\n      taskDragging,\n      taskIndex: dragIndexes.taskIndex,\n      listIndex: dragIndexes.listIndex,\n      moveTaskVertically,\n    }),\n    [\n      dragIndexes.taskIndex,\n      dragIndexes.listIndex,\n      taskDragging,\n      beginTaskDrag,\n      moveTaskVertically,\n    ]\n  );\n\n  // if (!allLists[dragIndexes.listIndex].tasks[dragIndexes.taskIndex]) {\n  //   console.log(allLists);\n  //   console.log(dragIndexes);\n  // }\n\n  return (\n    <TaskListContext.Provider value={taskListContextValue}>\n      <DndTaskContext.Provider value={dndContextValue}>\n        <Container>\n          <LabelFilter>\n            {state.labels.map((label) => (\n              <LabelBtn\n                key={label.id}\n                on={label.selected}\n                color={label.color}\n                onClick={() => actions.toggleSelection(label.id)}\n              >\n                {label.title}\n              </LabelBtn>\n            ))}\n            <LabelBtn\n              on={state.noTagSelected}\n              color=\"#ccc\"\n              onClick={() => actions.toggleNoTag()}\n            >\n              No Tag\n            </LabelBtn>\n          </LabelFilter>\n          <ListContainter id=\"scroll-test\" ref={scrollRef}>\n            {allLists.map((list, index) => (\n              <CardList\n                selfTaskDragging={\n                  taskDragging && dragIndexes.listIndex === index\n                }\n                key={list.id}\n                listIndex={index}\n                list={list}\n                beginDragList={beginDragList}\n                draggingSelf={draggingList && draggedListIndex === index}\n                draggingList={draggingList}\n                moveListHorizontally={moveListHorizontally}\n              />\n            ))}\n            <NewList scrollToRight={scrollToRight} />\n            <div\n              style={{\n                minWidth: \"8px\",\n                height: \"100%\",\n                margin: 0,\n              }}\n            />\n          </ListContainter>\n\n          {taskDragging && (\n            <VisualTaskCard\n              task={\n                allLists[dragIndexes.listIndex].tasks[dragIndexes.taskIndex]\n              }\n              left={coord.x}\n              top={coord.y}\n              width={width}\n            />\n          )}\n\n          {draggingList && (\n            <VisualList\n              list={allLists[draggedListIndex]}\n              listIndex={draggedListIndex}\n              left={draggedListCoord.x}\n              top={draggedListCoord.y}\n              height={height}\n            />\n          )}\n        </Container>\n      </DndTaskContext.Provider>\n    </TaskListContext.Provider>\n  );\n};\n\nexport default Panel;\n","import React from \"react\";\nimport shortid from \"shortid\";\nimport TaskList from \"../models/List\";\nimport Task from \"../models/Task\";\nimport { TaskListContextValue } from \"../Contexts/TaskListContext\";\n\nexport default function useTaskList(\n  allLists: TaskList[],\n  setAllLists: React.Dispatch<React.SetStateAction<TaskList[]>>\n) {\n  const deleteTask = React.useCallback(\n    (taskIndex: number, listIndex: number) => {\n      const newList = [...allLists];\n\n      newList[listIndex].tasks.splice(taskIndex, 1);\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const addNewTask = React.useCallback(\n    (title: string, listIndex: number) => {\n      const newList = [...allLists];\n      const newTask: Task = {\n        labels: [],\n        title,\n        id: shortid.generate(),\n        date: \"\",\n        complete: false,\n      };\n      newList[listIndex].tasks.push(newTask);\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const deleteList = React.useCallback(\n    (listIndex: number) => {\n      const newList = [...allLists];\n\n      newList.splice(listIndex, 1);\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const addList = React.useCallback(\n    (title: string) => {\n      const newList = [...allLists];\n\n      newList.push({\n        id: shortid.generate(),\n        tasks: [],\n        title,\n      });\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const editListTitle = React.useCallback(\n    (title: string, listIndex: number) => {\n      const newList = [...allLists];\n      newList[listIndex].title = title;\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const editTaskTitle = React.useCallback(\n    (title: string, taskIndex: number, listIndex: number) => {\n      const newList = [...allLists];\n      newList[listIndex].tasks[taskIndex].title = title;\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const editTaskDate = React.useCallback(\n    (date: string, taskIndex: number, listIndex: number) => {\n      const newList = [...allLists];\n      newList[listIndex].tasks[taskIndex].date = date;\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const editCompleteState = React.useCallback(\n    (state: boolean, taskIndex: number, listIndex: number) => {\n      const newList = [...allLists];\n      newList[listIndex].tasks[taskIndex].complete = state;\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const editLabel = React.useCallback(\n    (labelid: string, taskIndex: number, listIndex: number) => {\n      const newList = [...allLists];\n      const hasLabel = newList[listIndex].tasks[taskIndex].labels.findIndex(\n        (label) => label === labelid\n      );\n\n      if (hasLabel >= 0)\n        newList[listIndex].tasks[taskIndex].labels = newList[listIndex].tasks[\n          taskIndex\n        ].labels.filter((label) => label !== labelid);\n      else\n        newList[listIndex].tasks[taskIndex].labels = [\n          ...newList[listIndex].tasks[taskIndex].labels,\n          labelid,\n        ];\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const deleteEveryLabel = React.useCallback(\n    (labelid: string) => {\n      const newList = allLists.map((list) => ({\n        ...list,\n        tasks: list.tasks.map((task) => ({\n          ...task,\n          labels: task.labels.filter((label) => label !== labelid),\n        })),\n      }));\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const taskListContextValue: TaskListContextValue = React.useMemo(\n    () => ({\n      addList,\n      addNewTask,\n      deleteTask,\n      deleteList,\n      editListTitle,\n      editTaskTitle,\n      editTaskDate,\n      editCompleteState,\n      editLabel,\n      deleteEveryLabel,\n    }),\n    [\n      addList,\n      addNewTask,\n      deleteList,\n      deleteTask,\n      editListTitle,\n      editTaskTitle,\n      editTaskDate,\n      editCompleteState,\n      editLabel,\n      deleteEveryLabel,\n    ]\n  );\n\n  return taskListContextValue;\n}\n","import React from \"react\";\nimport { clearInterval, setInterval } from \"timers\";\nimport Coord from \"../models/Coord\";\n\nexport default function useMouseScrollHorizontal(condition: boolean) {\n  const scrollRef = React.useRef<HTMLDivElement | null>(null);\n  const intervalRef = React.useRef<NodeJS.Timeout | null>(null);\n  const mouseCoordRef = React.useRef<Coord>({ x: 0, y: 0 });\n\n  const edgeSize = 150;\n  const maxStep = 20;\n\n  const saveMouseCoord = React.useCallback((event: MouseEvent) => {\n    mouseCoordRef.current = {\n      x: event.clientX,\n      y: event.clientY,\n    };\n  }, []);\n\n  const checkMoveScroll = React.useCallback(() => {\n    const element = scrollRef.current as HTMLDivElement;\n    const rect = element.getBoundingClientRect();\n    const leftEdge = edgeSize + rect.x;\n    const rightEdge = rect.x + rect.width - edgeSize;\n\n    const inLeftEdge = mouseCoordRef.current.x >= rightEdge;\n    const inRightEdge = mouseCoordRef.current.x <= leftEdge;\n\n    const canScrollLeft = element.scrollLeft > 0;\n    const canScrollRight =\n      element.scrollLeft < element.scrollWidth - rect.width;\n\n    if ((!inLeftEdge || !canScrollRight) && (!inRightEdge || !canScrollLeft)) {\n      return false;\n    }\n\n    let nextScroll = element.scrollLeft;\n\n    if (canScrollRight && inLeftEdge) {\n      const intensity = (mouseCoordRef.current.x - rightEdge) / edgeSize;\n      nextScroll = nextScroll + Math.min(maxStep * intensity, maxStep);\n    } else if (canScrollLeft && inRightEdge) {\n      const intensity = (leftEdge - mouseCoordRef.current.x) / edgeSize;\n      nextScroll = nextScroll - Math.min(maxStep * intensity, maxStep);\n    }\n\n    if (nextScroll !== element.scrollLeft) {\n      element.scrollTo({\n        left: nextScroll,\n      });\n    }\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (condition) {\n      intervalRef.current = setInterval(checkMoveScroll, 30);\n      window.addEventListener(\"mousemove\", saveMouseCoord);\n    } else {\n      window.removeEventListener(\"mousemove\", saveMouseCoord);\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    }\n\n    return () => {\n      window.removeEventListener(\"mousemove\", saveMouseCoord);\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, [saveMouseCoord, checkMoveScroll, condition]);\n\n  const scrollToRight = React.useCallback(() => {\n    const element = scrollRef.current as HTMLDivElement;\n    element.scrollTo({\n      left: element.scrollWidth,\n    });\n  }, []);\n\n\n  \n\n  return { scrollRef, scrollToRight };\n}\n","import { createGlobalStyle, DefaultTheme } from \"styled-components\";\n\ndeclare module \"styled-components\" {\n  export interface DefaultTheme {\n    fontColor: string;\n    transparency: string;\n    transparencyLight: string;\n    scrollBar: string;\n    scrollThumb: string;\n    listColor: string;\n    taskColor: string;\n    green: string;\n    red: string;\n    blue: string;\n    sky: string;\n    yellow: string;\n    orange: string;\n    purple: string;\n    pink: string;\n    lime: string;\n    black: string;\n  }\n}\n\nexport const defaultTheme: DefaultTheme = {\n  fontColor: \"#172b4d\",\n  transparency: \"rgba(0, 0, 0, 0.32)\",\n  transparencyLight: \"rgba(0, 0, 0, 0.16)\",\n  scrollBar: \"#d9dce2\",\n  scrollThumb: \"#bdc3ce\",\n  listColor: \"#ebecf0\",\n  taskColor: \"white\",\n  green: \"#5aac44\",\n  red: \"#eb5a46\",\n  blue: \"#298fca\",\n  sky: \"#00c2e0\",\n  yellow: \"#f2d600\",\n  orange: \"#ff9f1a\",\n  purple: \"#c377e0\",\n  pink: \"#ff78cb\",\n  lime: \"#51e898\",\n  black: \"#344563\",\n};\n\nexport const GlobalStyles = createGlobalStyle`\n  * {\n    padding: 0;\n    margin: 0;\n    outline: 0;\n    box-sizing: border-box;\n    font-family: sans-serif;\n  }\n\n  body{\n    color: ${({ theme }) => theme.fontColor};\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n`;\n","import styled from \"styled-components\";\nimport { transparentize } from \"polished\";\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 40px;\n  padding: 4px;\n\n  display: flex;\n  background: ${({ theme }) => theme.transparency};\n`;\n\ninterface HeaderBtnWrapperProps {\n  right?: boolean;\n}\n\nexport const HeaderBtnWrapper = styled.div.attrs(\n  ({ right }: HeaderBtnWrapperProps) => ({\n    right: right || false,\n  })\n)`\n  width: 50%;\n  display: grid;\n  column-gap: 4px;\n  grid-auto-flow: column;\n  align-items: center;\n  justify-content: ${({ right }) => (right ? \"flex-end\" : \"flex-start\")};\n`;\n\ninterface HeaderBoxProps {\n  color?: string;\n}\n\nexport const HeaderBox = styled.div.attrs(\n  ({ color }): HeaderBoxProps => ({\n    color: color || \"rgba(255, 255, 255, .32)\",\n  })\n)`\n  border: none;\n  background: ${({ color }) => color};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  column-gap: 8px;\n  height: 32px;\n  min-width: 32px;\n  padding: 8px;\n  color: white;\n  font-weight: bolder;\n  font-size: 14px;\n  border-radius: 4px;\n  transition: background 0.2s;\n\n  &:hover {\n    background: ${({ color }) => transparentize(0.1, color as string)};\n  }\n`;\n\nexport const HeaderAvatar = styled.div`\n  border-radius: 50%;\n  width: 32px;\n  height: 32px;\n  background: #aaa;\n`;\n\nexport const HeaderInput = styled(HeaderBox)`\n  width: 100%;\n`;\n\nexport const HeaderTitle = styled.div`\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  position: absolute;\n  font-family: \"Pacifico\", cursive;\n  font-size: 20px;\n  display: flex;\n  align-items: center;\n  color: white;\n`;\n","import React from \"react\";\nimport { DiTrello } from \"react-icons/di\";\nimport { Container, HeaderTitle } from \"./styles\";\n\n\ninterface Props {}\n\nconst Header = (props: Props) => {\n  return (\n    <Container>\n      {/* <HeaderBtnWrapper>\n        <HeaderBox as=\"button\">\n          <BsFillGrid3X3GapFill size={16} color=\"white\" />\n        </HeaderBox>\n        <HeaderBox as=\"button\">\n          <AiOutlineHome size={18} color=\"white\" />\n        </HeaderBox>\n        <HeaderBox as=\"button\">\n          <FaTrello size={16} />\n          <p>Quadros</p>\n        </HeaderBox>\n        <HeaderBox as=\"input\" />\n      </HeaderBtnWrapper> */}\n      <HeaderTitle>\n        <DiTrello size={24} />\n        Fake Trello\n      </HeaderTitle>\n      {/* <HeaderBtnWrapper right>\n        <HeaderBox as=\"button\">\n          <FiPlus size={20} color=\"white\" />\n        </HeaderBox>\n        <HeaderBox as=\"button\">\n          <FiAlertCircle size={20} color=\"white\" />\n        </HeaderBox>\n        <HeaderBox as=\"button\" color=\"#eb5a46\">\n          <MdNotificationsNone size={20} color=\"white\" />\n        </HeaderBox>\n        <HeaderAvatar />\n      </HeaderBtnWrapper> */}\n    </Container>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Panel from \"./pages/panel\";\nimport { GlobalStyles, defaultTheme } from \"./styles\";\nimport { ThemeProvider } from \"styled-components\";\nimport Header from \"./components/header\";\nimport styled from \"styled-components\";\nimport { LabelProvider } from \"./Contexts/LabelContext\";\n\nfunction App() {\n  return (\n    <>\n      <ThemeProvider theme={defaultTheme}>\n        <GlobalStyles />\n        <LabelProvider>\n          <Container>\n            <Header />\n            <Panel />\n          </Container>\n        </LabelProvider>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  min-height: 100vh;\n\n  display: flex;\n  flex-direction: column;\n\n  background: #0079bf;\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}