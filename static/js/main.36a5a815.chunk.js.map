{"version":3,"sources":["components/newTask/styled.ts","hooks/useKeyMouseToSaveClose.tsx","hooks/useFocusInput.tsx","components/taskCard/DateBadge/index.tsx","Contexts/TaskListContext.tsx","components/newTask/index.tsx","Contexts/DndTaskContext.tsx","Contexts/LabelContext.tsx","components/taskCard/styled.ts","components/taskCard/dateMenu/styled.ts","components/taskCard/dateMenu/index.tsx","components/taskCard/taskMenu/styled.ts","components/taskCard/labelMenu/styled.ts","components/taskCard/labelMenu/index.tsx","components/taskCard/taskMenu/index.tsx","components/taskCard/index.tsx","components/cardlist/styled.ts","components/cardlist/cardlistAction/styled.ts","components/cardlist/cardlistAction/index.tsx","components/cardlist/cardlistEditTitle/index.tsx","components/cardlist/index.tsx","hooks/useMouseScrollVertical.tsx","components/cardlist/visualList.tsx","components/newList/styled.ts","components/newList/index.tsx","components/taskCard/VisualTaskCard.tsx","hooks/useDnDList.tsx","pages/panel/styles.ts","pages/panel/useInit.tsx","pages/panel/index.tsx","hooks/useDndTask.tsx","hooks/useMouseScrollHorizontal.tsx","styles/index.ts","components/header/styles.ts","components/header/index.tsx","App.tsx","index.tsx"],"names":["Container","styled","div","theme","taskColor","fontColor","transparentize","green","darken","useKeyMouseToSaveClose","save","close","containerRef","React","useRef","pauseRef","useLayoutEffect","handleKeyDown","ev","key","mouseUpHandler","current","rect","getBoundingClientRect","clientX","x","width","clientY","y","height","window","addEventListener","removeEventListener","useFocusInput","inputRef","focus","DueState","TaskListContext","createContext","allLists","list","setAllLists","taskListActions","deleteTask","taskIndex","listIndex","addNewTask","title","deleteList","addList","editListTitle","editTaskTitle","editTaskDate","data","editCompleteState","state","editLabel","labelid","deleteEveryLabel","TaskListProvider","children","useState","useCallback","newList","tasks","splice","newTask","labels","id","shortid","generate","date","complete","push","hasLabel","findIndex","label","filter","map","task","useMemo","Provider","value","withTheme","closeNewTask","scrolDown","input","setInput","useContext","saveInput","ref","onChange","e","target","placeholder","onClick","size","color","DndTaskContext","initialState","noTagSelected","LabelContext","actions","createLabel","deleteLabel","labelId","toggleSelection","toggleNoTag","LabelProvider","setState","newState","newLabel","selected","due","moment","dueState","done","today","isSame","dueSoon","isAfter","overDue","normal","button","format","DateBadge","css","yellow","red","Card","dragging","transparencyLight","taskDragging","hide","Shadow","transparency","LabelWrapper","LabelMark","top","left","Division","DataWrapper","listColor","CalendarNavWrapper","Calendar","CalendarElement","CalendarWeekDay","CalendarDate","blue","BtnWrapper","Btn","lighten","setSelected","calendarView","serCalendarView","val","start","weekday","daysInMonth","end","weekDays","years","arr","year","i","ThemeContext","emptyDate","n","onMouseDown","stopPropagation","clone","subtract","month","newMonth","Number","months","newYear","add","day","index","dates","EditZone","OptionsZone","LabelMenuPage","Content","ColorBoxWrapper","ColorSelectBox","ConfirmBtnWrapper","ConfirmBtn","negative","OptionBtn","LabelSelectBoxWrapper","LabelSelectBox","taskLabels","main","page","setPage","selectedColor","setSelectedColor","changeLabelRef","orange","purple","sky","lime","pink","black","colorBoxes","header","changeLabel","content","htmlFor","Fragment","l","TaskMenu","dateMenuOpen","setDateMenuOpen","labelMenuOpen","setLabelMenuOpen","useEffect","TaskCard","menuOpen","setMenuOpen","hideRef","forEach","find","length","beginTaskDrag","draggedListIndex","draggedTaskIndex","moveTaskVertically","draggedTaskHeight","mouseMoveHandle","event","check","coord","checkRangeY","toIndex","handleLeftMouseDown","handleRightMouseDown","handleMouseDown","preventDefault","onContextMenu","onMouseMove","CardContent","CardHeader","selfTaskDragging","NewTaskBtn","TaskContainer","scrollBar","scrollThumb","CardlistAction","menuPosition","openNewTask","style","Input","CardList","beginDragList","draggingSelf","draggingList","moveListHorizontally","editing","setEditing","contentRef","condition","scrollRef","intervalRef","mouseCoordRef","saveMouseCoord","checkMoveScroll","element","topEdge","bottomEdge","inBottomEdge","inTopEdge","canScrollUp","scrollTop","canScrollDown","scrollHeight","nextScroll","intensity","Math","min","scrollTo","setInterval","clearInterval","useMouseScroll","addingTask","setAddingTask","menuBtnRef","moveTaskHorizontally","onMouseEnter","position","transform","boxShadow","pointerEvents","cursor","creating","scrollToRight","creatingNewList","setCreatingNewList","open","background","useDnDList","setCoord","setDragging","mouseCoord","mouseOffset","listIndexRef","setPosition","mouseMove","document","body","mouseUp","temp","draggedListCoord","ListContainter","LabelFilter","LabelBtn","on","Capitalize","text","toUpperCase","slice","shuffleArray","array","j","floor","random","Panel","placeHolderRef","responseRef","init","colors","texts","split","flat","newText","labelTextIndex","labelText","numberOfLabels","tasksPerList","totalTasks","allLabels","nTaskLabels","k","dueStatus","offset","a","axios","get","console","log","FetchText","useInit","useDndList","setTaskDragging","dragIndexes","toTaskIndex","tmp","useDndTask","taskHeight","leftEdge","rightEdge","inLeftEdge","inRightEdge","canScrollLeft","scrollLeft","canScrollRight","scrollWidth","useMouseScrollHorizontal","dndContextValue","minWidth","margin","VisualTaskCard","defaultTheme","GlobalStyles","createGlobalStyle","HeaderBox","attrs","right","HeaderTitle","Header","props","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.36a5a815.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { transparentize, darken } from \"polished\";\n\nexport const Container = styled.div`\n  /* border: 2px solid red; */\n  margin: 0 4px 8px 4px;\n  display: flex;\n  flex-direction: column;\n\n  div {\n    margin-top: 8px;\n    display: flex;\n    justify-content: start;\n    align-content: center;\n  }\n\n  input {\n    width: 100%;\n    background: ${({ theme }) => theme.taskColor};\n    border-radius: 4px;\n    border: none;\n    border-bottom: 1px solid #bbb;\n    box-shadow: 0 0 2px rgba(0, 0, 0, 0.1);\n    padding: 8px;\n    resize: vertical;\n    font-size: 14px;\n    color: ${({ theme }) => theme.fontColor};\n    padding-bottom: 39px;\n\n    ::placeholder {\n      color: ${({ theme }) => transparentize(0.5, theme.fontColor)};\n    }\n  }\n\n  button {\n    border: none;\n\n    & + button {\n      margin-left: 4px;\n    }\n\n    :nth-of-type(1) {\n      background: ${({ theme }) => theme.green};\n      border-radius: 4px;\n      font-size: 14px;\n      color: white;\n      padding: 8px;\n\n      :hover {\n        background: ${({ theme }) => transparentize(0.2, theme.green)};\n      }\n\n      :active {\n        background: ${({ theme }) => darken(0.2, theme.green)};\n      }\n    }\n\n    :nth-of-type(2) {\n      background: none;\n\n      opacity: 0.5;\n\n      :hover {\n        opacity: 1;\n      }\n    }\n  }\n`;\n","import React from \"react\";\n\nexport default function useKeyMouseToSaveClose(\n  save: () => void,\n  close: () => void\n) {\n  const containerRef = React.useRef<null | HTMLDivElement>(null);\n  const pauseRef = React.useRef<boolean>(false);\n\n  React.useLayoutEffect(() => {\n    function handleKeyDown(ev: KeyboardEvent) {\n      switch (ev.key) {\n        case \"Enter\":\n          save();\n          break;\n        case \"Escape\":\n          close();\n          break;\n        default:\n          break;\n      }\n    }\n\n    function mouseUpHandler(ev: MouseEvent) {\n      if (pauseRef.current) return;\n      const rect = (containerRef.current as HTMLDivElement).getBoundingClientRect();\n\n      if (\n        ev.clientX < rect.x ||\n        ev.clientX > rect.x + rect.width ||\n        ev.clientY < rect.y ||\n        ev.clientY > rect.y + rect.height\n      ) {\n        save();\n        close();\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    window.addEventListener(\"mousedown\", mouseUpHandler, true);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      window.removeEventListener(\"mousedown\", mouseUpHandler, true);\n    };\n  }, [save, close]);\n\n  return { containerRef, pauseRef };\n}\n","import React from \"react\";\n\nexport default function useFocusInput<\n  T extends HTMLInputElement | HTMLTextAreaElement\n>() {\n  const inputRef = React.useRef<null | T>(null);\n\n  React.useLayoutEffect(() => {\n    (inputRef.current as HTMLInputElement).focus();\n  }, []);\n\n  return inputRef;\n}\n","import moment from \"moment\";\nimport React from \"react\";\nimport { FiClock, FiSquare, FiCheckSquare } from \"react-icons/fi\";\nimport styled, { css } from \"styled-components\";\nimport { TaskListContext } from \"../../../Contexts/TaskListContext\";\n\nenum DueState {\n  dueSoon = 0,\n  overDue = 1,\n  normal = 2,\n  done = 3,\n}\n\ninterface Props {\n  taskIndex: number;\n  listIndex: number;\n  date: string;\n  complete: boolean;\n}\n\nexport default ({ date, complete, taskIndex, listIndex }: Props) => {\n  const due = React.useMemo(() => moment(date, \"DD MM YY\"), [date]);\n  const {\n    taskListActions: { editCompleteState },\n  } = React.useContext(TaskListContext);\n\n  const dueState = React.useMemo<DueState>(() => {\n    if (complete) return DueState.done;\n    const today = moment();\n    if (today.isSame(due, \"day\")) return DueState.dueSoon;\n    else if (today.isAfter(due, \"day\")) return DueState.overDue;\n    else return DueState.normal;\n  }, [due, complete]);\n\n  return (\n    <DateBadge\n      dueState={dueState}\n      onClick={(e) => {\n        if (e.button !== 0) return;\n        editCompleteState(!complete, taskIndex, listIndex);\n      }}\n    >\n      {complete ? <FiCheckSquare /> : <FiSquare />}\n      <FiClock />\n      <p>{due.format(\"MMMM Do YYYY\")}</p>\n    </DateBadge>\n  );\n};\n\ninterface DateBadgeProps {\n  dueState: DueState;\n}\n\nconst DateBadge = styled.div<DateBadgeProps>`\n  cursor: pointer;\n  margin-top: 8px;\n  display: grid;\n  grid-template-columns: auto auto 1fr;\n  place-items: center;\n  place-content: center;\n  column-gap: 8px;\n  padding: 4px;\n  color: ${({ theme }) => theme.fontColor};\n  border-radius: 4px;\n\n  ${({ dueState }) => {\n    switch (dueState) {\n      case DueState.dueSoon:\n        return css`\n          background: ${({ theme }) => theme.yellow};\n          color: white;\n        `;\n      case DueState.overDue:\n        return css`\n          background: ${({ theme }) => theme.red};\n          color: white;\n        `;\n      case DueState.done:\n        return css`\n          background: ${({ theme }) => theme.green};\n          color: white;\n        `;\n      default:\n        return css``;\n    }\n  }}\n`;\n","import React from \"react\";\nimport TaskList from \"../models/List\";\nimport Task from \"../models/Task\";\nimport shortid from \"shortid\";\n\ninterface TaskListActions {\n  deleteTask: (taskIndex: number, listIndex: number) => void;\n  addNewTask: (title: string, listIndex: number) => void;\n  deleteList: (listIndex: number) => void;\n  addList: (title: string) => void;\n  editListTitle: (title: string, listIndex: number) => void;\n  editTaskTitle: (title: string, taskIndex: number, listIndex: number) => void;\n  editTaskDate: (data: string, taskIndex: number, listIndex: number) => void;\n  editCompleteState: (\n    state: boolean,\n    taskIndex: number,\n    listIndex: number\n  ) => void;\n  editLabel: (labelid: string, taskIndex: number, listIndex: number) => void;\n  deleteEveryLabel: (labelid: string) => void;\n}\n\ninterface TaskContextType {\n  allLists: {\n    list: TaskList[];\n  };\n  setAllLists: React.Dispatch<\n    React.SetStateAction<{\n      list: TaskList[];\n    }>\n  >;\n  taskListActions: TaskListActions;\n}\n\nexport const TaskListContext = React.createContext<TaskContextType>({\n  allLists: {\n    list: [],\n  },\n  setAllLists: () => {},\n  taskListActions: {\n    deleteTask: (taskIndex: number, listIndex: number) => {},\n    addNewTask: (title: string, listIndex: number) => {},\n    deleteList: (listIndex: number) => {},\n    addList: (title: string) => {},\n    editListTitle: (title: string, listIndex: number) => {},\n    editTaskTitle: (title: string, taskIndex: number, listIndex: number) => {},\n    editTaskDate: (data: string, taskIndex: number, listIndex: number) => {},\n    editCompleteState: (\n      state: boolean,\n      taskIndex: number,\n      listIndex: number\n    ) => {},\n    editLabel: (labelid: string, taskIndex: number, listIndex: number) => {},\n    deleteEveryLabel: (labelid: string) => {},\n  },\n});\n\ninterface Props {\n  children: JSX.Element;\n}\n\nexport const TaskListProvider = ({ children }: Props) => {\n  const [allLists, setAllLists] = React.useState<{ list: TaskList[] }>({\n    list: [],\n  });\n  const deleteTask = React.useCallback(\n    (taskIndex: number, listIndex: number) => {\n      const newList = { ...allLists };\n\n      newList.list[listIndex].tasks.splice(taskIndex, 1);\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const addNewTask = React.useCallback(\n    (title: string, listIndex: number) => {\n      const newList = { ...allLists };\n      const newTask: Task = {\n        labels: [],\n        title,\n        id: shortid.generate(),\n        date: \"\",\n        complete: false,\n      };\n      newList.list[listIndex].tasks.push(newTask);\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const deleteList = React.useCallback(\n    (listIndex: number) => {\n      const newList = { ...allLists };\n\n      newList.list.splice(listIndex, 1);\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const addList = React.useCallback(\n    (title: string) => {\n      const newList = { ...allLists };\n\n      const list = {\n        id: shortid.generate(),\n        tasks: [],\n        title,\n      };\n\n      newList.list.push(list);\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const editListTitle = React.useCallback(\n    (title: string, listIndex: number) => {\n      const newList = { ...allLists };\n      newList.list[listIndex].title = title;\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const editTaskTitle = React.useCallback(\n    (title: string, taskIndex: number, listIndex: number) => {\n      const newList = { ...allLists };\n      newList.list[listIndex].tasks[taskIndex].title = title;\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const editTaskDate = React.useCallback(\n    (date: string, taskIndex: number, listIndex: number) => {\n      const newList = { ...allLists };\n      newList.list[listIndex].tasks[taskIndex].date = date;\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const editCompleteState = React.useCallback(\n    (state: boolean, taskIndex: number, listIndex: number) => {\n      const newList = { ...allLists };\n      newList.list[listIndex].tasks[taskIndex].complete = state;\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const editLabel = React.useCallback(\n    (labelid: string, taskIndex: number, listIndex: number) => {\n      const newList = { ...allLists };\n      const hasLabel = newList.list[listIndex].tasks[\n        taskIndex\n      ].labels.findIndex((label) => label === labelid);\n\n      if (hasLabel >= 0)\n        newList.list[listIndex].tasks[taskIndex].labels = newList.list[\n          listIndex\n        ].tasks[taskIndex].labels.filter((label) => label !== labelid);\n      else\n        newList.list[listIndex].tasks[taskIndex].labels = [\n          ...newList.list[listIndex].tasks[taskIndex].labels,\n          labelid,\n        ];\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const deleteEveryLabel = React.useCallback(\n    (labelid: string) => {\n      const newList = { ...allLists };\n\n      newList.list = allLists.list.map((list) => ({\n        ...list,\n        tasks: list.tasks.map((task) => ({\n          ...task,\n          labels: task.labels.filter((label) => label !== labelid),\n        })),\n      }));\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const taskListActions = React.useMemo<TaskListActions>(\n    () => ({\n      deleteTask,\n      addNewTask,\n      deleteList,\n      addList,\n      editListTitle,\n      editTaskTitle,\n      editTaskDate,\n      editLabel,\n      deleteEveryLabel,\n      editCompleteState,\n    }),\n    [\n      deleteTask,\n      addNewTask,\n      deleteList,\n      addList,\n      editListTitle,\n      editTaskTitle,\n      editTaskDate,\n      editLabel,\n      deleteEveryLabel,\n      editCompleteState,\n    ]\n  );\n\n  return (\n    <TaskListContext.Provider\n      value={{ allLists, setAllLists, taskListActions }}\n    >\n      {children}\n    </TaskListContext.Provider>\n  );\n};\n","import React from \"react\";\nimport { Container } from \"./styled\";\nimport { FiX } from \"react-icons/fi\";\nimport { withTheme, DefaultTheme } from \"styled-components\";\nimport useKeyMouseToSaveClose from \"../../hooks/useKeyMouseToSaveClose\";\nimport useFocusInput from \"../../hooks/useFocusInput\";\nimport { TaskListContext } from \"../../Contexts/TaskListContext\";\n\ninterface Props {\n  theme: DefaultTheme;\n  listIndex: number;\n  closeNewTask: () => void;\n  scrolDown: () => void;\n}\n\nconst NewTask = ({ theme, closeNewTask, listIndex, scrolDown }: Props) => {\n  const [input, setInput] = React.useState(\"\");\n  const inputRef = useFocusInput<HTMLInputElement>();\n  const {\n    taskListActions: { addNewTask },\n  } = React.useContext(TaskListContext);\n\n  const saveInput = React.useCallback(() => {\n    if (!input) return;\n    addNewTask(input, listIndex);\n    setInput(\"\");\n    scrolDown();\n  }, [setInput, addNewTask, input, listIndex, scrolDown]);\n\n  const { containerRef } = useKeyMouseToSaveClose(saveInput, closeNewTask);\n\n  return (\n    <Container ref={containerRef}>\n      <input\n        ref={inputRef}\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        placeholder=\"Enter a title for this card...\"\n      />\n      <div>\n        <button\n          onClick={() => {\n            saveInput();\n          }}\n        >\n          Add Card\n        </button>\n        <button onClick={closeNewTask}>\n          <FiX size={24} color={theme.fontColor} />\n        </button>\n      </div>\n    </Container>\n  );\n};\n\nexport default withTheme(NewTask);\n","import React from \"react\";\n\nexport interface DndTaskContextValue {\n  taskDragging: boolean;\n  listIndex: number;\n  taskIndex: number;\n  beginTaskDrag: (\n    taskIndex: number,\n    listIndex: number,\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    rect: DOMRect\n  ) => void;\n  moveTaskVertically: (toTaskIndex: number) => void;\n  moveTaskHorizontally: (toIndex: number) => void;\n  height: number;\n}\n\nconst DndTaskContext = React.createContext<DndTaskContextValue | null>(null);\n\nexport default DndTaskContext;\n","import React from \"react\";\nimport shortid from \"shortid\";\nimport Label from \"../models/Label\";\n\ninterface LabelState {\n  noTagSelected: boolean;\n  labels: Label[];\n}\n\ninterface LabelActions {\n  createLabel: (title: string, color: string) => void;\n  deleteLabel: (id: string) => void;\n  editLabel: (labelId: string, title: string, color: string) => void;\n  toggleSelection: (labelId: string) => void;\n  toggleNoTag: () => void;\n}\n\ninterface LabelContextType {\n  state: LabelState;\n  actions: LabelActions;\n}\n\nconst initialState: LabelState = {\n  noTagSelected: true,\n  labels: [],\n};\n\nexport const LabelContext = React.createContext<LabelContextType>({\n  state: initialState,\n  actions: {\n    createLabel: (title: string, color: string) => {},\n    deleteLabel: (id: string) => {},\n    editLabel: (labelId: string, title: string, color: string) => {},\n    toggleSelection: (labelId: string) => {},\n    toggleNoTag: () => {},\n  },\n});\n\ninterface Props {\n  children: JSX.Element;\n}\n\nexport const LabelProvider = ({ children }: Props) => {\n  const [state, setState] = React.useState<LabelState>(initialState);\n\n  const createLabel = React.useCallback(\n    (title: string, color: string) => {\n      const newState = { ...state };\n\n      const newLabel: Label = {\n        title,\n        color,\n        id: shortid.generate(),\n        selected: true,\n      };\n\n      newState.labels.push(newLabel);\n\n      setState(newState);\n    },\n    [state, setState]\n  );\n\n  const deleteLabel = React.useCallback(\n    (id: string) => {\n      const newState = { ...state };\n\n      newState.labels = newState.labels.filter((label) => label.id !== id);\n\n      setState(newState);\n    },\n    [state, setState]\n  );\n\n  const editLabel = React.useCallback(\n    (labelId: string, title: string, color: string) => {\n      const newState = { ...state };\n\n      newState.labels = newState.labels.map((label) =>\n        label.id !== labelId\n          ? label\n          : {\n              ...label,\n              title,\n              color,\n            }\n      );\n\n      setState(newState);\n    },\n    [state, setState]\n  );\n\n  const toggleSelection = React.useCallback(\n    (labelId: string) => {\n      const newState = {\n        ...state,\n        labels: state.labels.map((label) =>\n          label.id !== labelId ? label : { ...label, selected: !label.selected }\n        ),\n      };\n      setState(newState);\n    },\n    [state, setState]\n  );\n\n  const toggleNoTag = React.useCallback(() => {\n    const newState = { ...state, noTagSelected: !state.noTagSelected };\n    setState(newState);\n  }, [state, setState]);\n\n  const actions = React.useMemo<LabelActions>(\n    () => ({\n      createLabel,\n      deleteLabel,\n      editLabel,\n      toggleSelection,\n      toggleNoTag,\n    }),\n    [createLabel, deleteLabel, editLabel, toggleSelection, toggleNoTag]\n  );\n\n  return (\n    <LabelContext.Provider value={{ state, actions }}>\n      {children}\n    </LabelContext.Provider>\n  );\n};\n","import styled, { css } from \"styled-components\";\nimport { darken } from \"polished\";\n\ninterface DragginProps {\n  dragging?: boolean;\n  taskDragging?: boolean;\n}\n\ninterface CardProps {\n  hide?: boolean;\n}\n\nexport const Card = styled.div<DragginProps & CardProps>`\n  position: relative;\n  max-width: 256px;\n  flex: 1;\n  background: ${({ theme }) => theme.taskColor};\n  padding: 8px;\n  border-radius: 4px;\n  border-bottom: 1px solid ${({ dragging }) => (dragging ? \"#ddd\" : \"#bbb\")};\n  word-wrap: break-word;\n  font-size: 14px;\n  box-shadow: 0 0 2px rgba(0, 0, 0, 0.1);\n  user-select: none;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  cursor: inherit;\n\n  & > button {\n    position: absolute;\n    top: 4px;\n    right: 4px;\n    border: none;\n    background: none;\n    display: none;\n    opacity: 0.5;\n    border-radius: 4px;\n\n    place-content: center;\n    width: 20px;\n    height: 20px;\n\n    :hover {\n      opacity: 1;\n      background: ${({ theme }) => theme.transparencyLight};\n    }\n  }\n\n  ${({ dragging }) =>\n    !dragging &&\n    css`\n      :hover > button {\n        display: grid;\n      }\n    `}\n\n  p {\n    max-width: calc(100% - 16px);\n    margin-right: 16px;\n  }\n\n  ${({ taskDragging }) =>\n    !taskDragging &&\n    css`\n      cursor: pointer;\n\n      &:hover {\n        background: ${({ theme }) => darken(0.1, theme.taskColor)};\n      }\n    `}\n\n  p {\n    opacity: ${({ dragging }) => (dragging ? 0 : 1)};\n  }\n\n  transition: max-height 0.2s, padding 0.2s, border 0.2s;\n\n  & + div {\n    margin-top: ${({ hide }) => (hide ? \"0\" : \"8px\")};\n  }\n\n  ${({ hide }) =>\n    hide &&\n    css`\n      max-height: 0;\n      padding: 0;\n      border: 0;\n      overflow: hidden;\n    `}\n`;\n\nexport const Shadow = styled.div<DragginProps>`\n  display: ${({ dragging }) => (dragging ? \"block\" : \"none\")};\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  border-radius: inherit;\n  background: ${({ theme }) => theme.transparency};\n`;\n\nexport const LabelWrapper = styled.div<DragginProps>`\n  width: calc(100% - 20px);\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  column-gap: 4px;\n  row-gap: 4px;\n  margin-bottom: 4px;\n\n  opacity: ${({ dragging }) => (dragging ? 0 : 1)};\n`;\n\ninterface LabelProps {\n  color: string;\n}\n\nexport const LabelMark = styled.div<LabelProps>`\n  height: 8px;\n  border-radius: 8px;\n  background: ${({ color }) => color};\n`;\n","import styled, { css } from \"styled-components\";\nimport { darken, lighten } from \"polished\";\n\ninterface ContainerProps {\n  top: number;\n  left: number;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  position: fixed;\n  z-index: 20;\n  top: ${({ top }) => top + \"px\"};\n  left: ${({ left }) => left + \"px\"};\n\n  width: 300px;\n\n  min-height: 300px;\n\n  background: ${({ theme }) => theme.taskColor};\n\n  padding: 8px 0;\n  border-radius: 4px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n  cursor: auto;\n\n  header {\n    position: relative;\n    display: grid;\n    place-content: center;\n    padding: 8px 16px;\n\n    p {\n      font-size: 14px;\n      text-align: center;\n      opacity: 0.7;\n    }\n\n    button {\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      left: 12px;\n      display: grid;\n      place-content: center;\n      border: none;\n      background: none;\n      opacity: 0.5;\n\n      :hover {\n        opacity: 1;\n      }\n    }\n  }\n`;\n\nexport const Division = styled.div`\n  height: 1px;\n  background: #ddd;\n  margin: 0 12px;\n`;\n\nexport const DataWrapper = styled.div`\n  margin: 8px;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  column-gap: 8px;\n  row-gap: 4px;\n\n  & > p {\n    font-size: 14px;\n    font-weight: 700;\n  }\n\n  & > div {\n    padding: 8px;\n    border: 2px solid ${({ theme }) => theme.listColor};\n    border-radius: 4px;\n    font-size: 14px;\n  }\n`;\n\nexport const CalendarNavWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  column-gap: 8px;\n  margin: 8px;\n\n  button,\n  select {\n    font-size: 14px;\n    cursor: pointer;\n    border: none;\n    background: none;\n    border-bottom: 1px solid black;\n    opacity: 0.5;\n\n    :hover {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Calendar = styled.div`\n  display: grid;\n  margin: 8px;\n  grid-template-columns: repeat(7, 1fr);\n\n  border-bottom: 1px solid ${({ theme }) => theme.fontColor};\n  border-right: 1px solid ${({ theme }) => theme.fontColor};\n`;\n\ninterface CalendarElementProps {\n  today?: boolean;\n  selected?: boolean;\n}\n\nexport const CalendarElement = styled.div<CalendarElementProps>`\n  background: ${({ theme }) => theme.listColor};\n  border-top: 1px solid ${({ theme }) => theme.fontColor};\n  border-left: 1px solid ${({ theme }) => theme.fontColor};\n  height: 30px;\n  display: grid;\n  place-content: center;\n  font-size: 14px;\n`;\n\nexport const CalendarWeekDay = styled(CalendarElement)`\n  background: ${({ theme }) => darken(0.1, theme.listColor)};\n  font-weight: 700;\n`;\n\nexport const CalendarDate = styled(CalendarElement)`\n  cursor: pointer;\n\n  font-weight: ${({ today }) => (today ? \"bold\" : \"500\")};\n\n  ${({ selected, today }) =>\n    selected\n      ? css`\n          background: ${({ theme }) => theme.blue};\n          color: white;\n        `\n      : css`\n          background: ${({ theme }) => theme.taskColor};\n\n          :hover {\n            background: ${({ theme }) => darken(0.1, theme.listColor)};\n          }\n\n          color: ${({ theme }) => (today ? theme.blue : \"auto\")};\n        `};\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 8px;\n`;\n\ninterface BtnProps {\n  color: string;\n}\n\nexport const Btn = styled.button<BtnProps>`\n  padding: 8px 12px;\n  border-radius: 4px;\n  border: none;\n  background: ${({ color }) => color};\n  color: white;\n  font-size: 14px;\n\n  transition: background 0.1s;\n\n  :hover {\n    background: ${({ color }) => lighten(0.1, color)};\n  }\n\n  :active {\n    background: ${({ color }) => darken(0.1, color)};\n  }\n`;\n","import moment from \"moment\";\nimport React from \"react\";\nimport { FiX } from \"react-icons/fi\";\nimport {\n  Container,\n  Division,\n  Calendar,\n  CalendarElement,\n  CalendarWeekDay,\n  CalendarDate,\n  BtnWrapper,\n  Btn,\n  CalendarNavWrapper,\n  DataWrapper,\n} from \"./styled\";\nimport { ThemeContext } from \"styled-components\";\nimport useKeyMouseToSaveClose from \"../../../hooks/useKeyMouseToSaveClose\";\nimport { TaskListContext } from \"../../../Contexts/TaskListContext\";\n\ninterface Props {\n  top: number;\n  left: number;\n  listIndex: number;\n  taskIndex: number;\n  close: () => void;\n  date: string;\n}\n\nexport default ({ top, left, listIndex, taskIndex, close, date }: Props) => {\n  const [selected, setSelected] = React.useState<moment.Moment>(\n    date ? moment(date, \"DD MM YY\") : moment()\n  );\n  const [calendarView, serCalendarView] = React.useState(\n    (date ? moment(date, \"DD MM YY\") : moment()).date(1)\n  );\n  const {\n    taskListActions: { editTaskDate },\n  } = React.useContext(TaskListContext);\n\n  const save = React.useCallback(\n    (val: string) => {\n      editTaskDate(val, taskIndex, listIndex);\n      close();\n    },\n    [close, editTaskDate, taskIndex, listIndex]\n  );\n\n  const { containerRef } = useKeyMouseToSaveClose(() => {}, close);\n  const start = calendarView.weekday();\n  const daysInMonth = calendarView.daysInMonth();\n  const end =\n    (start + daysInMonth) % 7 === 0 ? 0 : 7 - ((start + daysInMonth) % 7);\n\n  const weekDays = React.useMemo(\n    () => [\"dom\", \"2ª\", \"3ª\", \"4ª\", \"5ª\", \"6ª\", \"sáb\"],\n    []\n  );\n\n  const years = React.useMemo(() => {\n    const arr: number[] = [];\n    const year = moment().year();\n\n    for (let i = 0; i < 21; i++) arr.push(year - 10 + i);\n\n    return arr;\n  }, []);\n\n  const { green, red } = React.useContext(ThemeContext);\n\n  const dates = () => {\n    let arr: JSX.Element[] = [];\n    for (let i = 0; i < daysInMonth; i++)\n      arr.push(\n        <CalendarDate\n          key={i}\n          today={\n            calendarView.year() === moment().year() &&\n            calendarView.month() === moment().month() &&\n            moment().date() === i + 1\n          }\n          selected={\n            calendarView.year() === selected.year() &&\n            calendarView.month() === selected.month() &&\n            selected.date() === i + 1\n          }\n          onClick={() => setSelected(calendarView.clone().date(i + 1))}\n        >\n          {i + 1}\n        </CalendarDate>\n      );\n    return arr;\n  };\n\n  const emptyDate = (n: number) => {\n    let arr: JSX.Element[] = [];\n    for (let i = 0; i < n; i++) arr.push(<CalendarElement key={i} />);\n    return arr;\n  };\n\n  return (\n    <Container\n      ref={containerRef}\n      top={top}\n      left={left}\n      onMouseDown={(e) => e.stopPropagation()}\n    >\n      <header>\n        <p>Change Due Date</p>\n        <button onClick={close}>\n          <FiX size={16} />\n        </button>\n      </header>\n      <Division />\n      <DataWrapper>\n        <p>Date</p>\n        <p>Time</p>\n        <div>{selected.format(\"MMMM Do YYYY\")}</div>\n        <div>{selected.format(\"H:mm\")}</div>\n      </DataWrapper>\n      <CalendarNavWrapper>\n        <button\n          onClick={() => serCalendarView((val) => val.clone().subtract(1, \"M\"))}\n        >\n          Prev\n        </button>\n        <select\n          value={calendarView.month()}\n          onChange={(e) => {\n            const newMonth = Number(e.target.value);\n            serCalendarView((val) => val.clone().month(newMonth));\n          }}\n        >\n          {moment.months().map((month, i) => (\n            <option key={month} value={i}>\n              {month}\n            </option>\n          ))}\n        </select>\n        <select\n          value={calendarView.year()}\n          onChange={(e) => {\n            const newYear = Number(e.target.value);\n            serCalendarView((val) => val.clone().year(newYear));\n          }}\n        >\n          {years.map((year) => (\n            <option key={year} value={year}>\n              {year}\n            </option>\n          ))}\n        </select>\n        <button\n          onClick={() => serCalendarView((val) => val.clone().add(1, \"M\"))}\n        >\n          Next\n        </button>\n      </CalendarNavWrapper>\n      <Calendar>\n        {weekDays.map((day, index) => (\n          <CalendarWeekDay key={index}>{day}</CalendarWeekDay>\n        ))}\n        {emptyDate(start)}\n        {dates()}\n        {emptyDate(end)}\n      </Calendar>\n      <BtnWrapper>\n        <Btn color={green} onClick={() => save(selected.format(\"DD/MM/YY\"))}>\n          Save\n        </Btn>\n        <Btn color={red} onClick={() => save(\"\")}>\n          Remove\n        </Btn>\n      </BtnWrapper>\n    </Container>\n  );\n};\n","import styled from \"styled-components\";\nimport { darken, lighten } from \"polished\";\n\ninterface MenuProps {\n  top: number;\n  left: number;\n}\n\nexport const Container = styled.div<MenuProps>`\n  position: fixed;\n  z-index: 10;\n  top: 0px;\n  left: 0px;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, .5);\n  /* background:  ${({ theme }) => theme.transparency}; */\n  cursor: auto;\n\n  & > div {\n    position: absolute;\n    top: ${({ top }) => top + \"px\"};\n    left: ${({ left }) => left + \"px\"};\n    display: flex;\n    padding-right: 8px;\n    /* background: ${({ theme }) => theme.transparencyLight};\n    box-shadow: 0 0 10px 10px ${({ theme }) => theme.transparencyLight}; */\n  }\n`;\n\ninterface EditZoneProps {\n  width: number;\n  height: number;\n}\n\nexport const EditZone = styled.div<EditZoneProps>`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: flex-start;\n\n  & > div {\n    width: ${({ width }) => width + \"px\"};\n    min-height: ${({ height }) => height + \"px\"};\n    border-radius: 4px;\n    background: white;\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    flex-direction: column;\n    padding: 8px;\n\n    & > textarea {\n      width: 100%;\n      resize: none;\n      min-height: 100px;\n      font-size: 14px;\n      border: none;\n      border-radius: inherit;\n      padding-right: 16px;\n    }\n  }\n\n  & > button {\n    margin-top: 16px;\n    padding: 8px 16px;\n    background: ${({ theme }) => theme.green};\n    color: white;\n    font-size: 14px;\n    border: none;\n    border-radius: 4px;\n    transition: 0.1s;\n\n    :hover {\n      background: ${({ theme }) => lighten(0.1, theme.green)};\n    }\n\n    :active {\n      background: ${({ theme }) => darken(0.1, theme.green)};\n    }\n  }\n`;\n\nexport const OptionsZone = styled.div`\n  margin-left: 8px;\n  display: grid;\n  row-gap: 4px;\n  place-content: start;\n  place-items: start;\n  grid-template-columns: auto;\n\n  & > button {\n    background: ${({ theme }) => theme.transparency};\n    color: white;\n    border: none;\n    border-radius: 4px;\n    padding: 8px 12px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    & > p {\n      margin-left: 8px;\n      font-size: 14px;\n      font-weight: 700;\n    }\n\n    transition: 0.1s;\n\n    :hover {\n      transform: translateX(8px);\n      background: ${({ theme }) => darken(0.1, theme.transparency)};\n    }\n  }\n`;\n","import styled from \"styled-components\";\nimport { darken, lighten } from \"polished\";\n\ninterface ContainerProps {\n  top: number;\n  left: number;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  position: fixed;\n  z-index: 20;\n  top: ${({ top }) => top + \"px\"};\n  left: ${({ left }) => left + \"px\"};\n\n  width: 300px;\n\n  background: ${({ theme }) => theme.taskColor};\n\n  padding: 8px 0;\n  border-radius: 4px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n  cursor: auto;\n\n  header {\n    position: relative;\n    display: grid;\n    place-content: center;\n    padding: 8px 16px;\n\n    p {\n      font-size: 14px;\n      text-align: center;\n      opacity: 0.7;\n    }\n\n    button {\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      left: 12px;\n      display: grid;\n      place-content: center;\n      border: none;\n      background: none;\n      opacity: 0.5;\n\n      :hover {\n        opacity: 1;\n      }\n    }\n  }\n`;\n\nexport const Division = styled.div`\n  height: 1px;\n  background: #ddd;\n  margin: 0 12px;\n`;\n\nexport const Content = styled.div`\n  padding: 8px;\n  display: grid;\n  grid-auto-flow: row;\n  row-gap: 8px;\n  place-items: start;\n\n  & > p,\n  label {\n    font-size: 12px;\n    font-weight: 700;\n  }\n\n  & > input {\n    width: 100%;\n    padding: 8px 12px;\n    font-size: 14px;\n  }\n`;\n\ninterface ColorSelectBoxProps {\n  color: string;\n}\n\nexport const ColorBoxWrapper = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  column-gap: 8px;\n  row-gap: 8px;\n`;\n\nexport const ColorSelectBox = styled.div<ColorSelectBoxProps>`\n  background: ${({ color }) => color};\n  height: 32px;\n  border-radius: 4px;\n  cursor: pointer;\n  display: grid;\n  place-content: center;\n`;\n\ninterface ConfirmBtnProps {\n  negative?: boolean;\n}\n\nexport const ConfirmBtnWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const ConfirmBtn = styled.button<ConfirmBtnProps>`\n  padding: 8px 12px;\n  border-radius: 4px;\n  border: none;\n  background: ${({ theme, negative }) => (negative ? theme.red : theme.green)};\n  color: white;\n  font-size: 14px;\n  transition: 0.1s;\n\n  :hover {\n    background: ${({ theme, negative }) =>\n      lighten(0.1, negative ? theme.red : theme.green)};\n  }\n\n  :active {\n    background: ${({ theme, negative }) =>\n      darken(0.1, negative ? theme.red : theme.green)};\n  }\n`;\n\nexport const OptionBtn = styled.button`\n  width: 100%;\n  padding: 8px 12px;\n  border: none;\n  background: ${({ theme }) => theme.listColor};\n\n  transition: 0.1s;\n\n  :hover {\n    background: ${({ theme }) => lighten(0.1, theme.listColor)};\n  }\n\n  :active {\n    background: ${({ theme }) => darken(0.1, theme.listColor)};\n  }\n`;\n\nexport const LabelSelectBoxWrapper = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 1fr auto;\n  row-gap: 8px;\n  column-gap: 4px;\n\n  & > p {\n    columns: 1 / 3;\n    font-size: 14px;\n  }\n\n  & > button {\n    width: 32px;\n    background: none;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n\n    :hover {\n      background: ${({ theme }) => theme.listColor};\n    }\n  }\n`;\n\nexport const LabelSelectBox = styled.div<ColorSelectBoxProps>`\n  background: ${({ color }) => color};\n  width: 100%;\n  height: 32px;\n  border-radius: 4px;\n  cursor: pointer;\n  color: white;\n  font-size: 14px;\n  font-weight: 700;\n  padding: 0 12px;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  transition: 0.1s;\n\n  :hover {\n    border-left: 8px solid ${({ color }) => darken(0.1, color)};\n  }\n`;\n","import React from \"react\";\nimport { FiArrowLeft, FiCheck, FiX, FiEdit2 } from \"react-icons/fi\";\nimport { ThemeContext } from \"styled-components\";\nimport { LabelContext } from \"../../../Contexts/LabelContext\";\nimport useKeyMouseToSaveClose from \"../../../hooks/useKeyMouseToSaveClose\";\nimport {\n  ColorBoxWrapper,\n  ColorSelectBox,\n  ConfirmBtn,\n  Container,\n  Content,\n  Division,\n  LabelSelectBox,\n  LabelSelectBoxWrapper,\n  OptionBtn,\n  ConfirmBtnWrapper,\n} from \"./styled\";\nimport { TaskListContext } from \"../../../Contexts/TaskListContext\";\n\ninterface Props {\n  top: number;\n  left: number;\n  listIndex: number;\n  taskIndex: number;\n  close: () => void;\n  labels: string[];\n}\n\nenum LabelMenuPage {\n  main,\n  newLabel,\n  changeLabel,\n}\n\nexport default ({\n  top,\n  left,\n  listIndex,\n  taskIndex,\n  close,\n  labels: taskLabels,\n}: Props) => {\n  const { containerRef } = useKeyMouseToSaveClose(() => {}, close);\n  const { state, actions } = React.useContext(LabelContext);\n  const [page, setPage] = React.useState<LabelMenuPage>(LabelMenuPage.main);\n  const [selectedColor, setSelectedColor] = React.useState(\"\");\n  const [input, setInput] = React.useState(\"\");\n  const {\n    taskListActions: { editLabel, deleteEveryLabel },\n  } = React.useContext(TaskListContext);\n  const changeLabelRef = React.useRef(\"\");\n\n  // console.log(state);\n\n  const {\n    green,\n    yellow,\n    orange,\n    red,\n    purple,\n    blue,\n    sky,\n    lime,\n    pink,\n    black,\n  } = React.useContext(ThemeContext);\n\n  const colorBoxes = React.useMemo(() => {\n    const colorArr = [\n      green,\n      yellow,\n      orange,\n      red,\n      purple,\n      blue,\n      sky,\n      lime,\n      pink,\n      black,\n    ];\n    return colorArr.map((color) => (\n      <ColorSelectBox\n        key={color}\n        color={color}\n        onClick={() => setSelectedColor(color)}\n      >\n        {selectedColor === color && <FiCheck color=\"white\" size={20} />}\n      </ColorSelectBox>\n    ));\n  }, [\n    green,\n    yellow,\n    orange,\n    red,\n    purple,\n    blue,\n    sky,\n    lime,\n    pink,\n    black,\n    selectedColor,\n  ]);\n\n  const header = React.useMemo(() => {\n    switch (page) {\n      case LabelMenuPage.newLabel:\n        return (\n          <>\n            <p>Create Label</p>\n            <button onClick={() => setPage(LabelMenuPage.main)}>\n              <FiArrowLeft size={16} />\n            </button>\n          </>\n        );\n      case LabelMenuPage.changeLabel:\n        return (\n          <>\n            <p>Change Label</p>\n            <button onClick={() => setPage(LabelMenuPage.main)}>\n              <FiArrowLeft size={16} />\n            </button>\n          </>\n        );\n      default:\n        return (\n          <>\n            <p>Labels</p>\n            <button onClick={close}>\n              <FiX size={16} />\n            </button>\n          </>\n        );\n    }\n  }, [close, page, setPage]);\n\n  const content = React.useMemo(() => {\n    switch (page) {\n      case LabelMenuPage.newLabel:\n        return (\n          <>\n            <label htmlFor=\"name\">Name</label>\n            <input\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              id=\"name\"\n            />\n            <p>Select a color</p>\n            <ColorBoxWrapper>{colorBoxes}</ColorBoxWrapper>\n            <ConfirmBtn\n              onClick={() => {\n                if (!input || !selectedColor) return;\n                actions.createLabel(input, selectedColor);\n                setPage(LabelMenuPage.main);\n              }}\n            >\n              Confirm\n            </ConfirmBtn>\n          </>\n        );\n      case LabelMenuPage.changeLabel:\n        return (\n          <>\n            <label htmlFor=\"name\">Name</label>\n            <input\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              id=\"name\"\n            />\n            <p>Select a color</p>\n            <ColorBoxWrapper>{colorBoxes}</ColorBoxWrapper>\n            <ConfirmBtnWrapper>\n              <ConfirmBtn\n                onClick={() => {\n                  if (!input || !selectedColor) return;\n                  actions.editLabel(\n                    changeLabelRef.current,\n                    input,\n                    selectedColor\n                  );\n                  setPage(LabelMenuPage.main);\n                }}\n              >\n                Save\n              </ConfirmBtn>\n              <ConfirmBtn\n                negative={true}\n                onClick={() => {\n                  deleteEveryLabel(changeLabelRef.current);\n                  actions.deleteLabel(changeLabelRef.current);\n                  setPage(LabelMenuPage.main);\n                }}\n              >\n                Delete\n              </ConfirmBtn>\n            </ConfirmBtnWrapper>\n          </>\n        );\n      default:\n        return (\n          <>\n            <p>LABELS</p>\n            <LabelSelectBoxWrapper>\n              {state.labels.map((label) => (\n                <React.Fragment key={label.id + \"btnfrag\"}>\n                  <LabelSelectBox\n                    key={label.id}\n                    color={label.color}\n                    onClick={() => editLabel(label.id, taskIndex, listIndex)}\n                  >\n                    <p>{label.title}</p>\n                    {taskLabels.findIndex((l) => l === label.id) >= 0 && (\n                      <FiCheck color=\"white\" size={20} />\n                    )}\n                  </LabelSelectBox>\n                  <button\n                    onClick={() => {\n                      changeLabelRef.current = label.id;\n                      setInput(label.title);\n                      setSelectedColor(label.color);\n                      setPage(LabelMenuPage.changeLabel);\n                    }}\n                    key={label.id + \"btn\"}\n                  >\n                    <FiEdit2 size={16} />\n                  </button>\n                </React.Fragment>\n              ))}\n            </LabelSelectBoxWrapper>\n\n            <OptionBtn\n              onClick={() => {\n                setInput(\"\");\n                setSelectedColor(\"\");\n                setPage(LabelMenuPage.newLabel);\n              }}\n            >\n              Create a new Label\n            </OptionBtn>\n          </>\n        );\n    }\n  }, [\n    page,\n    colorBoxes,\n    input,\n    actions,\n    selectedColor,\n    state.labels,\n    taskLabels,\n    editLabel,\n    listIndex,\n    taskIndex,\n    deleteEveryLabel,\n  ]);\n\n  return (\n    <Container\n      ref={containerRef}\n      top={top}\n      left={left}\n      onMouseDown={(e) => e.stopPropagation()}\n    >\n      <header>{header}</header>\n      <Division />\n      <Content>{content}</Content>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { FiArchive, FiClock, FiTag } from \"react-icons/fi\";\nimport { TaskListContext } from \"../../../Contexts/TaskListContext\";\nimport useFocusInput from \"../../../hooks/useFocusInput\";\nimport useKeyMouseToSaveClose from \"../../../hooks/useKeyMouseToSaveClose\";\nimport Task from \"../../../models/Task\";\nimport DateBadge from \"../DateBadge\";\nimport DateMenu from \"../dateMenu\";\nimport { Container, EditZone, OptionsZone } from \"./styled\";\nimport LabelMenu from \"../labelMenu\";\nimport { LabelWrapper } from \"../styled\";\n\ninterface Props {\n  close: () => void;\n  rect: DOMRect;\n  task: Task;\n  taskIndex: number;\n  listIndex: number;\n  taskLabels: JSX.Element[];\n}\n\nconst TaskMenu = ({\n  close,\n  rect,\n  task,\n  listIndex,\n  taskIndex,\n  taskLabels,\n}: Props) => {\n  const inputRef = useFocusInput<HTMLTextAreaElement>();\n  const [input, setInput] = React.useState(\"\");\n  const [dateMenuOpen, setDateMenuOpen] = React.useState(false);\n  const [labelMenuOpen, setLabelMenuOpen] = React.useState(false);\n  const {\n    taskListActions: { deleteTask, editTaskTitle },\n  } = React.useContext(TaskListContext);\n\n  React.useEffect(() => {\n    setInput(task.title);\n  }, [task.title]);\n\n  const save = React.useCallback(() => {\n    if (input === \"\") return;\n    editTaskTitle(input, taskIndex, listIndex);\n    close();\n  }, [input, close, editTaskTitle, taskIndex, listIndex]);\n\n  const { containerRef, pauseRef } = useKeyMouseToSaveClose(save, close);\n\n  return (\n    <Container\n      onMouseDown={(e) => e.stopPropagation()}\n      top={rect.y}\n      left={rect.x}\n    >\n      <div ref={containerRef}>\n        <EditZone height={rect.height} width={rect.width}>\n          <div>\n            <LabelWrapper>{taskLabels}</LabelWrapper>\n            <textarea\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              ref={inputRef}\n            />\n            {task.date && (\n              <DateBadge\n                taskIndex={taskIndex}\n                listIndex={listIndex}\n                complete={task.complete}\n                date={task.date}\n              />\n            )}\n          </div>\n          <button onClick={save}>Save</button>\n        </EditZone>\n        <OptionsZone>\n          <button\n            onClick={() => {\n              setLabelMenuOpen(true);\n              pauseRef.current = true;\n            }}\n          >\n            <FiTag />\n            <p>Edit Labels</p>\n          </button>\n          <button\n            onClick={() => {\n              setDateMenuOpen(true);\n              pauseRef.current = true;\n            }}\n          >\n            <FiClock />\n            <p>Change Due Date</p>\n          </button>\n          <button\n            onClick={() => {\n              deleteTask(taskIndex, listIndex);\n            }}\n          >\n            <FiArchive />\n            <p>Archive</p>\n          </button>\n        </OptionsZone>\n        {labelMenuOpen && (\n          <LabelMenu\n            close={() => {\n              setLabelMenuOpen(false);\n              pauseRef.current = false;\n            }}\n            top={rect.y}\n            left={rect.x + rect.width + 8}\n            taskIndex={taskIndex}\n            listIndex={listIndex}\n            labels={task.labels}\n          />\n        )}\n        {dateMenuOpen && (\n          <DateMenu\n            date={task.date}\n            close={() => {\n              setDateMenuOpen(false);\n              pauseRef.current = false;\n            }}\n            top={rect.y}\n            left={rect.x + rect.width + 8}\n            taskIndex={taskIndex}\n            listIndex={listIndex}\n          />\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default TaskMenu;\n","import React from \"react\";\nimport { FiEdit2 } from \"react-icons/fi\";\nimport DndTaskContext, {\n  DndTaskContextValue,\n} from \"../../Contexts/DndTaskContext\";\nimport { LabelContext } from \"../../Contexts/LabelContext\";\nimport Coord from \"../../models/Coord\";\nimport Label from \"../../models/Label\";\nimport Task from \"../../models/Task\";\nimport DateBadge from \"./DateBadge\";\nimport { Card, LabelMark, LabelWrapper, Shadow } from \"./styled\";\nimport TaskMenu from \"./taskMenu\";\n\ninterface Props {\n  task: Task;\n  listIndex: number;\n  index: number;\n}\n\nexport const checkRangeY = (\n  rect: DOMRect,\n  coord: Coord,\n  draggedTaskHeight: number\n): number => {\n  if (\n    coord.y > rect.y + rect.height * 0.5 &&\n    coord.y >= rect.y + rect.height - draggedTaskHeight\n  )\n    return 0;\n  else if (\n    coord.y < rect.y + rect.height * 0.5 &&\n    coord.y <= rect.y + draggedTaskHeight\n  )\n    return -1;\n  else return 1;\n};\n\nconst TaskCard = ({ task, listIndex, index }: Props) => {\n  const containerRef = React.useRef<HTMLDivElement | null>(null);\n  const [menuOpen, setMenuOpen] = React.useState(false);\n  const { state } = React.useContext(LabelContext);\n\n  const hideRef = React.useRef(false);\n\n  const taskLabels = React.useMemo(() => {\n    const arr: JSX.Element[] = [];\n    hideRef.current = true;\n\n    task.labels.forEach((labelId) => {\n      const label = state.labels.find((label) => label.id === labelId) as Label;\n      if (label.selected) hideRef.current = false;\n      arr.push(<LabelMark key={labelId} color={label.color} />);\n    });\n\n    if (!arr.length && state.noTagSelected) hideRef.current = false;\n\n    return arr;\n  }, [state.labels, task.labels, state.noTagSelected]);\n\n  const {\n    beginTaskDrag,\n    taskDragging,\n    listIndex: draggedListIndex,\n    taskIndex: draggedTaskIndex,\n    moveTaskVertically,\n    height: draggedTaskHeight,\n  } = React.useContext(DndTaskContext) as DndTaskContextValue;\n\n  const dragging =\n    taskDragging &&\n    draggedListIndex === listIndex &&\n    draggedTaskIndex === index;\n\n  const mouseMoveHandle = React.useCallback(\n    (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      if (!taskDragging || dragging) return;\n      const rect = (containerRef.current as HTMLDivElement).getBoundingClientRect();\n      const coord = {\n        x: event.clientX,\n        y: event.clientY,\n      };\n      const check = checkRangeY(rect, coord, draggedTaskHeight);\n      if (check > 0) return;\n      const toIndex = index + check + 1;\n      if (toIndex !== draggedTaskIndex) moveTaskVertically(toIndex);\n    },\n    [\n      dragging,\n      index,\n      moveTaskVertically,\n      draggedTaskIndex,\n      taskDragging,\n      draggedTaskHeight,\n    ]\n  );\n\n  const handleLeftMouseDown = React.useCallback(\n    (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      beginTaskDrag(\n        index,\n        listIndex,\n        event,\n        (containerRef.current as HTMLDivElement).getBoundingClientRect()\n      );\n    },\n    [beginTaskDrag, index, listIndex]\n  );\n\n  const handleRightMouseDown = React.useCallback(\n    (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      setMenuOpen(true);\n    },\n    []\n  );\n\n  const handleMouseDown = React.useCallback(\n    (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      event.preventDefault();\n      if (event.button === 0) {\n        handleLeftMouseDown(event);\n      } else {\n        handleRightMouseDown(event);\n      }\n    },\n    [handleLeftMouseDown, handleRightMouseDown]\n  );\n\n  return (\n    <Card\n      hide={hideRef.current}\n      taskDragging={taskDragging}\n      dragging={dragging}\n      ref={containerRef}\n      onContextMenu={(e) => {\n        e.preventDefault();\n      }}\n      onMouseDown={handleMouseDown}\n      onMouseMove={mouseMoveHandle}\n    >\n      <LabelWrapper dragging={dragging}>{taskLabels}</LabelWrapper>\n      <p>{task.title}</p>\n      {task.date && !dragging && (\n        <DateBadge\n          listIndex={listIndex}\n          taskIndex={index}\n          complete={task.complete}\n          date={task.date}\n        />\n      )}\n      <button onClick={() => setMenuOpen(true)}>\n        <FiEdit2 size={14} />\n      </button>\n      <Shadow dragging={dragging} />\n      {menuOpen && (\n        <TaskMenu\n          taskLabels={taskLabels}\n          taskIndex={index}\n          listIndex={listIndex}\n          rect={(containerRef.current as HTMLDivElement).getBoundingClientRect()}\n          close={() => setMenuOpen(false)}\n          task={task}\n        />\n      )}\n    </Card>\n  );\n};\n\nexport default TaskCard;\n","import styled, { css } from \"styled-components\";\n\ninterface draggingProps {\n  dragging?: boolean;\n  selfTaskDragging?: boolean;\n}\n\nexport const Container = styled.div`\n  min-width: 272px;\n\n\n  & + div {\n    margin-left: 8px;\n  }\n`;\n\nexport const CardContent = styled.div<draggingProps>`\n  position: relative;\n  max-width: 272px;\n  width: 100%;\n  padding: 0 4px;\n\n  max-height: 100%;\n\n  /* display: flex;\n  flex-direction: column; */\n\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  row-gap: 8px;\n  /* grid-auto-flow: row; */\n\n  background: ${({ dragging, theme }) => (dragging ? \"none\" : theme.listColor)};\n\n  font-size: 14px;\n  border-radius: 4px;\n`;\n\ninterface ShadowProps {\n  dragging: boolean;\n}\n\nexport const Shadow = styled.div<ShadowProps>`\n  display: ${({ dragging }) => (dragging ? \"block\" : \"none\")};\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  border-radius: inherit;\n  background: ${({ theme }) => theme.transparency};\n`;\n\nexport const CardHeader = styled.div<draggingProps>`\n  opacity: ${({ dragging }) => (dragging ? 0 : 1)};\n  font-weight: 700;\n  cursor: ${({ selfTaskDragging }) =>\n    selfTaskDragging ? \"inherit\" : \"pointer\"};\n  padding-top: 4px;\n  position: relative;\n  display: grid;\n  grid-template-columns: 1fr auto;\n\n  & > button {\n    height: 32px;\n    width: 32px;\n    /* border: 2px solid red; */\n    display: grid;\n    place-content: center;\n    border-radius: 4px;\n    opacity: 0.5;\n    border: none;\n\n    :hover {\n      opacity: 1;\n      background: ${({ theme }) => theme.transparencyLight};\n    }\n  }\n\n  & > div {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    padding-left: 12px;\n    width: 100%;\n    font-weight: 700;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n  }\n\n  p {\n  }\n`;\n\nexport const NewTaskBtn = styled.div<draggingProps>`\n  opacity: ${({ dragging }) => (dragging ? 0 : 1)};\n  display: grid;\n  grid-auto-flow: column;\n  align-content: center;\n  place-content: start;\n\n  column-gap: 8px;\n  padding: 8px 8px;\n  cursor: ${({ selfTaskDragging }) =>\n    selfTaskDragging ? \"inherit\" : \"pointer\"};\n  margin: 0 4px;\n  margin-bottom: 8px;\n\n  ${({ selfTaskDragging }) =>\n    !selfTaskDragging &&\n    css`\n      :hover {\n        background: rgba(9, 30, 66, 0.08);\n      }\n    `}\n`;\n\nexport const TaskContainer = styled.div<draggingProps>`\n  opacity: ${({ dragging }) => (dragging ? 0 : 1)};\n  display: flex;\n  flex-direction: column;\n  padding: 0 4px 0 4px;\n  flex: 1 1 auto;\n  overflow-y: auto;\n\n  /* width */\n  ::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    border-radius: 10px;\n    background: ${({ theme }) => theme.scrollBar};\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: ${({ theme }) => theme.scrollThumb};\n    border-radius: 10px;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  width: 300px;\n  background: ${({ theme }) => theme.taskColor};\n  padding: 8px 0;\n  border-radius: 4px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n\n  header {\n    position: relative;\n    display: grid;\n    place-content: center;\n    padding: 8px 16px;\n\n    p {\n      font-size: 14px;\n      text-align: center;\n      opacity: 0.5;\n    }\n\n    button {\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      left: 12px;\n      display: grid;\n      place-content: center;\n      border: none;\n      background: none;\n      opacity: 0.5;\n\n      :hover {\n        opacity: 1;\n      }\n    }\n  }\n\n  ul {\n    list-style: none;\n    padding: 8px 0;\n\n    li {\n      button {\n        width: 100%;\n        border: none;\n        background: none;\n        font-size: 14px;\n        padding: 8px 12px;\n        text-align: start;\n\n        :hover {\n          background: ${({ theme }) => theme.listColor};\n        }\n      }\n    }\n  }\n`;\n\nexport const Division = styled.div`\n  height: 1px;\n  background: #ddd;\n  margin: 0 12px;\n`;\n","import React from \"react\";\nimport { FiX } from \"react-icons/fi\";\nimport { TaskListContext } from \"../../../Contexts/TaskListContext\";\nimport useKeyMouseToSaveClose from \"../../../hooks/useKeyMouseToSaveClose\";\nimport Coord from \"../../../models/Coord\";\nimport { Container, Division } from \"./styled\";\n\ninterface Props {\n  menuPosition: Coord;\n  close: () => void;\n  openNewTask: () => void;\n  listIndex: number;\n}\n\nconst CardlistAction = ({\n  menuPosition,\n  close,\n  openNewTask,\n  listIndex,\n}: Props) => {\n  const { containerRef } = useKeyMouseToSaveClose(() => {}, close);\n  const {\n    taskListActions: { deleteList },\n  } = React.useContext(TaskListContext);\n  return (\n    <Container\n      ref={containerRef}\n      style={{\n        top: menuPosition.y,\n        left: menuPosition.x,\n      }}\n    >\n      <header>\n        <p>List Actions</p>\n        <button onClick={close}>\n          <FiX size={16} />\n        </button>\n      </header>\n      <Division />\n      <ul>\n        <li>\n          <button\n            onClick={() => {\n              openNewTask();\n              close();\n            }}\n          >\n            Add Card...\n          </button>\n        </li>\n      </ul>\n      <Division />\n      <ul>\n        <li>\n          <button\n            onClick={() => {\n              deleteList(listIndex);\n              close();\n            }}\n          >\n            Archive this List\n          </button>\n        </li>\n      </ul>\n    </Container>\n  );\n};\n\nexport default CardlistAction;\n","import React from \"react\";\nimport styled, { withTheme, DefaultTheme } from \"styled-components\";\nimport useKeyMouseToSaveClose from \"../../../hooks/useKeyMouseToSaveClose\";\nimport useFocusInput from \"../../../hooks/useFocusInput\";\nimport { TaskListContext } from \"../../../Contexts/TaskListContext\";\nimport { FiX } from \"react-icons/fi\";\n\ninterface Props {\n  title: string;\n  close: () => void;\n  listIndex: number;\n  theme: DefaultTheme;\n}\n\nconst CardlistEditTitle = ({ title, close, listIndex, theme }: Props) => {\n  const [input, setInput] = React.useState(\"\");\n\n  const {\n    taskListActions: { editListTitle },\n  } = React.useContext(TaskListContext);\n\n  const save = React.useCallback(() => {\n    if (!input) return;\n    editListTitle(input, listIndex);\n    close();\n  }, [input, close, editListTitle, listIndex]);\n\n  const { containerRef } = useKeyMouseToSaveClose(save, close);\n  const inputRef = useFocusInput<HTMLInputElement>();\n\n  React.useEffect(() => {\n    setInput(title);\n  }, [title]);\n\n  return (\n    <Container ref={containerRef}>\n      <Input\n        ref={inputRef}\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n      />\n      <Btn\n        onClick={(e) => {\n          close();\n          e.stopPropagation();\n        }}\n      >\n        <FiX size={20} color={theme.red} />\n      </Btn>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  top: 4px;\n  left: 0;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Btn = styled.div`\n  position: absolute;\n  top: 50%;\n  right: 40px;\n  transform: translateY(-50%);\n  display: grid;\n  place-content: center;\n  height: 20px;\n  width: 20px;\n\n  opacity: 0.5;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nconst Input = styled.input`\n  width: calc(100% - 32px);\n  height: calc(100% - 4px);\n  border: none;\n  background: none;\n  padding: 8px 12px;\n  padding-right: 28px;\n  font-size: 14px;\n  font-weight: 700;\n  background: ${({ theme }) => theme.taskColor};\n  border: 2px solid ${({ theme }) => theme.red};\n  border-radius: 4px;\n  color: ${({ theme }) => theme.fontColor};\n`;\n\nexport default withTheme(CardlistEditTitle);\n","import React from \"react\";\nimport { BsThreeDots } from \"react-icons/bs\";\nimport { FiPlus } from \"react-icons/fi\";\nimport useMouseScroll from \"../../hooks/useMouseScrollVertical\";\nimport TaskList from \"../../models/List\";\nimport Coord from \"../../models/Coord\";\nimport NewTask from \"../newTask\";\nimport TaskCard from \"../taskCard\";\nimport {\n  CardContent,\n  CardHeader,\n  Container,\n  NewTaskBtn,\n  Shadow,\n  TaskContainer,\n} from \"./styled\";\nimport CardlistAction from \"./cardlistAction\";\nimport CardListEdit from \"./cardlistEditTitle\";\nimport DndTaskContext, {\n  DndTaskContextValue,\n} from \"../../Contexts/DndTaskContext\";\n\ninterface Props {\n  list: TaskList;\n  listIndex: number;\n  selfTaskDragging: boolean;\n  draggingList: boolean;\n  draggingSelf: boolean;\n  beginDragList: (\n    listIndex: number,\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    rect: DOMRect\n  ) => void;\n  moveListHorizontally: (toIndex: number) => void;\n}\n\nconst CardList = ({\n  list,\n  listIndex,\n  selfTaskDragging,\n  beginDragList,\n  draggingSelf,\n  draggingList,\n  moveListHorizontally,\n}: Props) => {\n  const [editing, setEditing] = React.useState(false);\n  const contentRef = React.useRef<HTMLDivElement | null>(null);\n  const { scrollRef, scrolDown } = useMouseScroll(selfTaskDragging);\n  const [addingTask, setAddingTask] = React.useState(false);\n  const [menuOpen, setMenuOpen] = React.useState(false);\n  const menuBtnRef = React.useRef<HTMLButtonElement | null>(null);\n\n  const { taskDragging, moveTaskHorizontally } = React.useContext(\n    DndTaskContext\n  ) as DndTaskContextValue;\n\n  const menuPosition: Coord = React.useMemo(() => {\n    if (!menuOpen) return { x: 0, y: 0 };\n    const rect = (menuBtnRef.current as HTMLButtonElement).getBoundingClientRect();\n    return {\n      x: rect.x,\n      y: rect.y,\n    };\n  }, [menuOpen]);\n\n  const handleMouseDown = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    if (event.button !== 0) return;\n\n    beginDragList(\n      listIndex,\n      event,\n      (contentRef.current as HTMLDivElement).getBoundingClientRect()\n    );\n  };\n\n  const handleMouseEnter = () => {\n    if (draggingList && !draggingSelf) moveListHorizontally(listIndex);\n    else if (taskDragging) moveTaskHorizontally(listIndex);\n  };\n\n  return (\n    <Container onMouseEnter={handleMouseEnter}>\n      <CardContent dragging={draggingSelf} ref={contentRef}>\n        <CardHeader\n          selfTaskDragging={selfTaskDragging}\n          dragging={draggingSelf}\n          onMouseDown={handleMouseDown}\n        >\n          <div onClick={() => setEditing(true)}>\n            <p>{list.title}</p>\n            {editing && (\n              <CardListEdit\n                close={() => setEditing(false)}\n                listIndex={listIndex}\n                title={list.title}\n              />\n            )}\n          </div>\n          <button ref={menuBtnRef} onClick={() => setMenuOpen((val) => !val)}>\n            <BsThreeDots size={16} />\n          </button>\n        </CardHeader>\n        <TaskContainer dragging={draggingSelf} ref={scrollRef}>\n          {list.tasks.map((task, taskIndex) => (\n            <TaskCard\n              key={task.id}\n              task={task}\n              listIndex={listIndex}\n              index={taskIndex}\n            />\n          ))}\n        </TaskContainer>\n        {addingTask ? (\n          <NewTask\n            listIndex={listIndex}\n            closeNewTask={() => setAddingTask(false)}\n            scrolDown={scrolDown}\n          />\n        ) : (\n          <NewTaskBtn\n            selfTaskDragging={selfTaskDragging}\n            dragging={draggingSelf}\n            onClick={() => setAddingTask(true)}\n          >\n            <FiPlus size={16} />\n            {list.tasks.length > 0 ? (\n              <p>Add another card</p>\n            ) : (\n              <p>Add a card</p>\n            )}\n          </NewTaskBtn>\n        )}\n        <Shadow dragging={draggingSelf} />\n      </CardContent>\n      {menuOpen && (\n        <CardlistAction\n          listIndex={listIndex}\n          openNewTask={() => setAddingTask(true)}\n          close={() => setMenuOpen(false)}\n          menuPosition={menuPosition}\n        />\n      )}\n    </Container>\n  );\n};\nexport default CardList;\n","import React from \"react\";\nimport Coord from \"../models/Coord\";\nimport { clearInterval, setInterval } from \"timers\";\n\nexport default function useMouseScrollVertical(condition: boolean) {\n  const scrollRef = React.useRef<HTMLDivElement | null>(null);\n  const intervalRef = React.useRef<NodeJS.Timeout | null>(null);\n  const mouseCoordRef = React.useRef<Coord>({ x: 0, y: 0 });\n\n  const edgeSize = 100;\n  const maxStep = 20;\n\n  const saveMouseCoord = React.useCallback((event: MouseEvent) => {\n    mouseCoordRef.current = {\n      x: event.clientX,\n      y: event.clientY,\n    };\n  }, []);\n\n  const checkMoveScroll = React.useCallback(() => {\n    const element = scrollRef.current as HTMLDivElement;\n    const rect = element.getBoundingClientRect();\n    const topEdge = edgeSize + rect.y;\n    const bottomEdge = rect.y + rect.height - edgeSize;\n\n    const inBottomEdge = mouseCoordRef.current.y >= bottomEdge;\n    const inTopEdge = mouseCoordRef.current.y <= topEdge;\n\n    const canScrollUp = element.scrollTop > 0;\n    const canScrollDown =\n      element.scrollTop < element.scrollHeight - rect.height;\n\n    if ((!inBottomEdge || !canScrollDown) && (!inTopEdge || !canScrollUp)) {\n      return false;\n    }\n\n    let nextScroll = element.scrollTop;\n\n    if (canScrollDown && inBottomEdge) {\n      const intensity = (mouseCoordRef.current.y - bottomEdge) / edgeSize;\n      nextScroll = nextScroll + Math.min(maxStep * intensity, maxStep);\n    } else if (canScrollUp && inTopEdge) {\n      const intensity = (topEdge - mouseCoordRef.current.y) / edgeSize;\n      nextScroll = nextScroll - Math.min(maxStep * intensity, maxStep);\n    }\n\n    if (nextScroll !== element.scrollTop) {\n      element.scrollTo({\n        top: nextScroll,\n      });\n    }\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (condition) {\n      intervalRef.current = setInterval(checkMoveScroll, 30);\n      window.addEventListener(\"mousemove\", saveMouseCoord);\n    } else {\n      window.removeEventListener(\"mousemove\", saveMouseCoord);\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    }\n\n    return () => {\n      window.removeEventListener(\"mousemove\", saveMouseCoord);\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, [saveMouseCoord, checkMoveScroll, condition]);\n\n  const scrolDown = React.useCallback(() => {\n    const element = scrollRef.current as HTMLDivElement;\n    element.scrollTo({\n      top: element.scrollHeight,\n    });\n  }, []);\n\n  return { scrollRef, scrolDown };\n}\n","import React from \"react\";\nimport { BsThreeDots } from \"react-icons/bs\";\nimport { FiPlus } from \"react-icons/fi\";\nimport TaskList from \"../../models/List\";\nimport TaskCard from \"../taskCard\";\nimport { CardContent, CardHeader, NewTaskBtn, TaskContainer } from \"./styled\";\n\ninterface Props {\n  list: TaskList;\n  listIndex: number;\n  left: number;\n  top: number;\n  height: number;\n}\n\nconst CardList = ({ list, listIndex, top, left, height }: Props) => {\n  return (\n    <CardContent\n      style={{\n        position: \"fixed\",\n        left,\n        top,\n        height,\n        transform: \"rotate(2.5deg)\",\n        boxShadow: \"5px 5px 20px rgba(0, 0, 0, 0.3)\",\n        pointerEvents: \"none\",\n      }}\n    >\n      <CardHeader\n        style={{\n          cursor: \"grabbing\",\n        }}\n      >\n        <div>\n          <p>{list.title}</p>\n        </div>\n        <button>\n          <BsThreeDots size={16} />\n        </button>\n      </CardHeader>\n      <TaskContainer>\n        {list.tasks.map((task, taskIndex) => (\n          <TaskCard\n            key={task.id}\n            task={task}\n            listIndex={listIndex}\n            index={taskIndex}\n          />\n        ))}\n      </TaskContainer>\n      <NewTaskBtn>\n        <FiPlus />\n        <p>Adicionar outro cartão</p>\n      </NewTaskBtn>\n    </CardContent>\n  );\n};\nexport default CardList;\n","import styled from \"styled-components\";\nimport { transparentize, darken } from \"polished\";\n\ninterface ContainerProps {\n  creating: boolean;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  min-width: 272px;\n  height: max-content;\n  background: ${({ theme, creating }) =>\n    creating ? theme.listColor : theme.transparency};\n  display: flex;\n  flex-direction: column;\n  padding: 4px;\n  border-radius: 4px;\n  cursor: pointer;\n\n  p {\n    display: ${({ creating }) => (creating ? \"none\" : \"block\")};\n    padding: 4px;\n    color: white;\n  }\n\n  & > div {\n    display: ${({ creating }) => (creating ? \"block\" : \"none\")};\n\n    & > div {\n      margin-top: 8px;\n      display: flex;\n      justify-content: start;\n      align-content: center;\n    }\n  }\n\n  input {\n    width: 100%;\n    background: ${({ theme }) => theme.taskColor};\n    border-radius: 4px;\n    border: none;\n    padding: 8px;\n    resize: vertical;\n    font-size: 14px;\n    color: ${({ theme }) => theme.fontColor};\n\n    ::placeholder {\n      color: ${({ theme }) => transparentize(0.5, theme.fontColor)};\n    }\n  }\n\n  button {\n    border: none;\n\n    & + button {\n      margin-left: 4px;\n    }\n\n    :nth-of-type(1) {\n      background: ${({ theme }) => theme.green};\n      border-radius: 4px;\n      font-size: 14px;\n      color: white;\n      padding: 8px;\n\n      :hover {\n        background: ${({ theme }) => transparentize(0.2, theme.green)};\n      }\n\n      :active {\n        background: ${({ theme }) => darken(0.2, theme.green)};\n      }\n    }\n\n    :nth-of-type(2) {\n      background: none;\n\n      opacity: 0.5;\n\n      :hover {\n        opacity: 1;\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { FiX } from \"react-icons/fi\";\nimport { DefaultTheme, withTheme } from \"styled-components\";\nimport useKeyMouseToSaveClose from \"../../hooks/useKeyMouseToSaveClose\";\nimport { Container } from \"./styled\";\nimport { TaskListContext } from \"../../Contexts/TaskListContext\";\n\ninterface Props {\n  theme: DefaultTheme;\n  scrollToRight: () => void;\n}\n\nconst NewList = ({ theme, scrollToRight }: Props) => {\n  const {\n    taskListActions: { addList },\n  } = React.useContext(TaskListContext);\n\n  const [creatingNewList, setCreatingNewList] = React.useState(false);\n  const inputRef = React.useRef<HTMLInputElement | null>(null);\n  const [input, setInput] = React.useState(\"\");\n  const saveInput = React.useCallback(() => {\n    if (!creatingNewList || !input) return;\n    addList(input);\n    setInput(\"\");\n    scrollToRight();\n  }, [setInput, input, addList, creatingNewList, scrollToRight]);\n\n  const close = React.useCallback(() => setCreatingNewList(false), []);\n  const open = React.useCallback(() => {\n    setCreatingNewList(true);\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (creatingNewList) {\n      (inputRef.current as HTMLInputElement).focus();\n    }\n  }, [creatingNewList]);\n\n  const { containerRef } = useKeyMouseToSaveClose(saveInput, close);\n\n  return (\n    <Container creating={creatingNewList} ref={containerRef}>\n      <div>\n        <input\n          ref={inputRef}\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Enter a title for this list...\"\n        />\n        <div>\n          <button\n            onClick={() => {\n              saveInput();\n            }}\n          >\n            Add List\n          </button>\n          <button onClick={close}>\n            <FiX size={24} color={theme.fontColor} />\n          </button>\n        </div>\n      </div>\n      <p onClick={open}>Add new list</p>\n    </Container>\n  );\n};\n\nexport default withTheme(NewList);\n","import React from \"react\";\nimport Task from \"../../models/Task\";\nimport { Card, LabelWrapper, LabelMark } from \"./styled\";\nimport { FiEdit2 } from \"react-icons/fi\";\nimport DateBadge from \"./DateBadge\";\nimport { LabelContext } from \"../../Contexts/LabelContext\";\nimport Label from \"../../models/Label\";\n\ninterface Props {\n  task: Task;\n  left: number;\n  top: number;\n  width: number;\n}\n\nconst TaskCard = ({ task, left, top, width }: Props) => {\n  const { state } = React.useContext(LabelContext);\n\n  const taskLabels = React.useMemo(() => {\n    const arr: JSX.Element[] = [];\n\n    task.labels.forEach((labelId) => {\n      arr.push(\n        <LabelMark\n          key={labelId}\n          color={\n            (state.labels.find((label) => label.id === labelId) as Label).color\n          }\n        />\n      );\n    });\n\n    return arr;\n  }, [state.labels, task.labels]);\n\n  return (\n    <Card\n      style={{\n        width,\n        position: \"fixed\",\n        left,\n        top,\n        cursor: \"grabbing\",\n        transform: \"rotate(2.5deg)\",\n        boxShadow: \"5px 5px 20px rgba(0, 0, 0, 0.3)\",\n        background: \"white\",\n        pointerEvents: \"none\",\n      }}\n    >\n      <LabelWrapper>{taskLabels}</LabelWrapper>\n      <p>{task.title}</p>\n      {task.date && (\n        <DateBadge\n          listIndex={0}\n          taskIndex={0}\n          complete={task.complete}\n          date={task.date}\n        />\n      )}\n      <button>\n        <FiEdit2 size={14} />\n      </button>\n    </Card>\n  );\n};\n\nexport default TaskCard;\n","import React from \"react\";\nimport { TaskListContext } from \"../Contexts/TaskListContext\";\nimport Coord from \"../models/Coord\";\n\nexport const useDnDList = () => {\n  const { allLists, setAllLists } = React.useContext(TaskListContext);\n  const height = React.useRef(0);\n  const [coord, setCoord] = React.useState<Coord>({\n    x: 0,\n    y: 0,\n  });\n\n  const [dragging, setDragging] = React.useState(false);\n\n  const mouseCoord = React.useRef<Coord>({\n    x: 0,\n    y: 0,\n  });\n\n  const mouseOffset = React.useRef({\n    x: 0,\n    y: 0,\n  });\n\n  const listIndexRef = React.useRef(0);\n\n  const onMouseDown = (\n    listIndex: number,\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    rect: DOMRect\n  ) => {\n    mouseOffset.current = {\n      x: event.clientX - rect.x,\n      y: event.clientY - rect.y,\n    };\n    listIndexRef.current = listIndex;\n    height.current = rect.height;\n    setPosition(event.clientX, event.clientY);\n    window.addEventListener(\"mousemove\", mouseMove);\n    window.addEventListener(\"mouseup\", mouseUp);\n  };\n\n  const setPosition = React.useCallback((x: number, y: number) => {\n    mouseCoord.current = { x, y };\n    setCoord({ x: x - mouseOffset.current.x, y: y - mouseOffset.current.y });\n  }, []);\n\n  const mouseMove = React.useCallback(\n    (ev: MouseEvent) => {\n      setDragging(true);\n      document.body.style.cursor = \"grabbing\";\n      setPosition(ev.clientX, ev.clientY);\n    },\n    [setPosition]\n  );\n\n  const mouseUp = React.useCallback(() => {\n    document.body.style.cursor = \"auto\";\n    setDragging(false);\n    window.removeEventListener(\"mousemove\", mouseMove);\n    window.removeEventListener(\"mouseup\", mouseUp);\n  }, [mouseMove]);\n\n  const moveListHorizontally = React.useCallback(\n    (toIndex: number) => {\n      const newList = { ...allLists };\n\n      const temp = newList.list[listIndexRef.current];\n      newList.list[listIndexRef.current] = newList.list[toIndex];\n      newList.list[toIndex] = temp;\n\n      listIndexRef.current = toIndex;\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  return {\n    beginDragList: onMouseDown,\n    draggedListIndex: listIndexRef.current,\n    draggingList: dragging,\n    draggedListCoord: coord,\n    height: height.current,\n    moveListHorizontally,\n  };\n};\n\nexport default useDnDList;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  max-height: calc(100vh - 40px);\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 8px;\n  flex: 1;\n`;\n\nexport const ListContainter = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  flex: 1;\n  overflow-x: auto;\n  padding: 8px;\n\n  /* width */\n  ::-webkit-scrollbar {\n    height: 12px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    border-radius: 10px;\n    background: rgba(0, 0, 0, 0.15);\n    margin: 8px;\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: rgba(9, 30, 66, 0.3);\n    border-radius: 10px;\n  }\n`;\n\nexport const LabelFilter = styled.div`\n  padding: 4px 4px 0 8px;\n  display: grid;\n  grid-auto-flow: column;\n  column-gap: 8px;\n  justify-content: start;\n`;\n\ninterface LabelBtnProps {\n  color: string;\n  on: boolean;\n}\n\nexport const LabelBtn = styled.button<LabelBtnProps>`\n  background: ${({ color }) => color};\n  padding: 4px 12px;\n  border: none;\n  border-radius: 4px;\n  color: white;\n  font-weight: 700;\n  font-size: 14px;\n  opacity: ${({ on }) => (on ? 1 : 0.5)};\n`;\n","import axios from \"axios\";\nimport React from \"react\";\nimport { ThemeContext } from \"styled-components\";\nimport { LabelContext } from \"../../Contexts/LabelContext\";\nimport { TaskListContext } from \"../../Contexts/TaskListContext\";\nimport moment from \"moment\";\n\nexport default function useInit() {\n  const placeHolderRef = React.useRef(false);\n  const responseRef = React.useRef<string[]>([]);\n  const theme = React.useContext(ThemeContext);\n  const {\n    state,\n    actions: { createLabel },\n  } = React.useContext(LabelContext);\n  const {\n    taskListActions: {\n      addList,\n      addNewTask,\n      editLabel,\n      editTaskDate,\n      editCompleteState,\n    },\n  } = React.useContext(TaskListContext);\n\n  const init = React.useCallback(() => {\n    const colors = [\n      theme.red,\n      theme.green,\n      theme.lime,\n      theme.pink,\n      theme.purple,\n      theme.black,\n      theme.blue,\n      theme.sky,\n    ];\n\n    shuffleArray(colors);\n\n    const texts = responseRef.current\n      .map((text) => text.split(\". \"))\n      .flat()\n      .map((text) => text.split(\", \"))\n      .flat()\n      .map((text) => {\n        let newText = text;\n        if (newText[0] === \" \") newText = text.slice(1);\n        return Capitalize(newText);\n      });\n\n    const labelTextIndex = Math.floor(Math.random() * texts.length);\n    const labelText = texts[labelTextIndex].split(\" \");\n    texts.splice(labelTextIndex, 1);\n    const numberOfLabels = Math.min(labelText.length, 5);\n    for (let i = 0; i < numberOfLabels; i++)\n      createLabel(Capitalize(labelText[i]), colors[i]);\n\n    addList(\"Backlog\");\n    addList(\"Sprint\");\n    addList(\"Overdue\");\n\n    const tasksPerList = [];\n    let totalTasks = texts.length;\n    tasksPerList[0] = Math.floor(totalTasks / 2);\n    totalTasks -= Math.floor(totalTasks / 2);\n    tasksPerList[1] = Math.floor(totalTasks / 2);\n    totalTasks -= Math.floor(totalTasks / 2);\n    tasksPerList[2] = totalTasks;\n\n    const allLabels = [...state.labels];\n\n    for (let i = 0; i < 3; i++)\n      for (let j = 0; j < tasksPerList[i]; j++) {\n        const init = i === 0 ? 0 : tasksPerList[i - 1];\n        addNewTask(texts[init + j], i);\n        const nTaskLabels = Math.floor(Math.random() * numberOfLabels);\n        shuffleArray(allLabels);\n        for (let k = 0; k < nTaskLabels; k++) {\n          editLabel(allLabels[k].id, j, i);\n        }\n\n        const dueStatus = Math.floor(Math.random() * 4);\n\n        if (dueStatus > 0) {\n          const offset = Math.floor(Math.random() * 5) - 2;\n          const date = moment().add(offset, \"days\").format(\"DD/MM/YY\");\n          editTaskDate(date, j, i);\n          if (dueStatus === 1) editCompleteState(true, j, i);\n        }\n      }\n  }, [\n    theme,\n    addList,\n    createLabel,\n    addNewTask,\n    editLabel,\n    state.labels,\n    editTaskDate,\n    editCompleteState,\n  ]);\n\n  React.useEffect(() => {\n    async function FetchText() {\n      try {\n        responseRef.current = (\n          await axios.get<string[]>(\n            \"https://baconipsum.com/api/?type=meat-and-fille&paras=3&start-with-lorem=1\"\n          )\n        ).data;\n\n        init();\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    if (!placeHolderRef.current) {\n      FetchText();\n      placeHolderRef.current = true;\n    }\n  }, [init]);\n}\n\nfunction Capitalize(text: string) {\n  return text[0].toUpperCase() + text.slice(1);\n}\n\nfunction shuffleArray<T>(array: T[]) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n","import React from \"react\";\nimport CardList from \"../../components/cardlist\";\nimport VisualList from \"../../components/cardlist/visualList\";\nimport NewList from \"../../components/newList\";\nimport VisualTaskCard from \"../../components/taskCard/VisualTaskCard\";\nimport DndTaskContext, {\n  DndTaskContextValue,\n} from \"../../Contexts/DndTaskContext\";\nimport { LabelContext } from \"../../Contexts/LabelContext\";\nimport { TaskListContext } from \"../../Contexts/TaskListContext\";\nimport useDndList from \"../../hooks/useDnDList\";\nimport { useDndTask } from \"../../hooks/useDndTask\";\nimport useMouseScrollHorizontal from \"../../hooks/useMouseScrollHorizontal\";\nimport { Container, LabelBtn, LabelFilter, ListContainter } from \"./styles\";\nimport useInit from \"./useInit\";\n\nconst Panel = () => {\n  const { state, actions } = React.useContext(LabelContext);\n  const { allLists } = React.useContext(TaskListContext);\n\n  useInit();\n\n  const {\n    beginDragList,\n    draggedListIndex,\n    draggingList,\n    draggedListCoord,\n    height,\n    moveListHorizontally,\n  } = useDndList();\n\n  const {\n    beginTaskDrag,\n    coord,\n    taskDragging,\n    dragIndexes,\n    moveTaskVertically,\n    width,\n    moveTaskHorizontally,\n    height: taskHeight,\n  } = useDndTask();\n\n  const { scrollRef, scrollToRight } = useMouseScrollHorizontal(draggingList);\n\n  const dndContextValue: DndTaskContextValue = React.useMemo(\n    () => ({\n      beginTaskDrag,\n      taskDragging,\n      taskIndex: dragIndexes.taskIndex,\n      listIndex: dragIndexes.listIndex,\n      moveTaskVertically,\n      moveTaskHorizontally,\n      height: taskHeight,\n    }),\n    [\n      dragIndexes.taskIndex,\n      dragIndexes.listIndex,\n      taskDragging,\n      beginTaskDrag,\n      moveTaskVertically,\n      moveTaskHorizontally,\n      taskHeight,\n    ]\n  );\n\n  // if (!allLists[dragIndexes.listIndex].tasks[dragIndexes.taskIndex]) {\n  //   console.log(allLists);\n  //   console.log(dragIndexes);\n  // }\n\n  return (\n    <DndTaskContext.Provider value={dndContextValue}>\n      <Container>\n        <LabelFilter>\n          {state.labels.map((label) => (\n            <LabelBtn\n              key={label.id}\n              on={label.selected}\n              color={label.color}\n              onClick={() => actions.toggleSelection(label.id)}\n            >\n              {label.title}\n            </LabelBtn>\n          ))}\n          <LabelBtn\n            on={state.noTagSelected}\n            color=\"#ccc\"\n            onClick={() => actions.toggleNoTag()}\n          >\n            No label\n          </LabelBtn>\n        </LabelFilter>\n        <ListContainter id=\"scroll-test\" ref={scrollRef}>\n          {allLists.list.map((list, index) => (\n            <CardList\n              selfTaskDragging={taskDragging && dragIndexes.listIndex === index}\n              key={list.id}\n              listIndex={index}\n              list={list}\n              beginDragList={beginDragList}\n              draggingSelf={draggingList && draggedListIndex === index}\n              draggingList={draggingList}\n              moveListHorizontally={moveListHorizontally}\n            />\n          ))}\n          <NewList scrollToRight={scrollToRight} />\n          <div\n            style={{\n              minWidth: \"8px\",\n              height: \"100%\",\n              margin: 0,\n            }}\n          />\n        </ListContainter>\n\n        {taskDragging && (\n          <VisualTaskCard\n            task={\n              allLists.list[dragIndexes.listIndex].tasks[dragIndexes.taskIndex]\n            }\n            left={coord.x}\n            top={coord.y}\n            width={width}\n          />\n        )}\n\n        {draggingList && (\n          <VisualList\n            list={allLists.list[draggedListIndex]}\n            listIndex={draggedListIndex}\n            left={draggedListCoord.x}\n            top={draggedListCoord.y}\n            height={height}\n          />\n        )}\n      </Container>\n    </DndTaskContext.Provider>\n  );\n};\n\nexport default Panel;\n","import React from \"react\";\nimport { TaskListContext } from \"../Contexts/TaskListContext\";\nimport Coord from \"../models/Coord\";\n\nexport const useDndTask = () => {\n  const { allLists, setAllLists } = React.useContext(TaskListContext);\n  const width = React.useRef(0);\n  const height = React.useRef(0);\n  const [taskDragging, setTaskDragging] = React.useState(false);\n  const [coord, setCoord] = React.useState<Coord>({\n    x: 0,\n    y: 0,\n  });\n\n  const mouseOffset = React.useRef<Coord>({\n    x: 0,\n    y: 0,\n  });\n\n  const mouseCoord = React.useRef<Coord>({\n    x: 0,\n    y: 0,\n  });\n\n  const dragIndexes = React.useRef({\n    taskIndex: 0,\n    listIndex: 0,\n  });\n\n  const beginTaskDrag = (\n    taskIndex: number,\n    listIndex: number,\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    rect: DOMRect\n  ) => {\n    mouseOffset.current = {\n      x: event.clientX - rect.x,\n      y: event.clientY - rect.y,\n    };\n    dragIndexes.current = {\n      taskIndex,\n      listIndex,\n    };\n    width.current = rect.width;\n    height.current = rect.height;\n    setPosition(event.clientX, event.clientY);\n    window.addEventListener(\"mousemove\", mouseMove);\n    window.addEventListener(\"mouseup\", mouseUp);\n  };\n\n  const setPosition = React.useCallback((x: number, y: number) => {\n    mouseCoord.current = { x, y };\n    setCoord({ x: x - mouseOffset.current.x, y: y - mouseOffset.current.y });\n  }, []);\n\n  const mouseMove = React.useCallback(\n    (ev: MouseEvent) => {\n      setTaskDragging(true);\n      document.body.style.cursor = \"grabbing\";\n      setPosition(ev.clientX, ev.clientY);\n    },\n    [setPosition]\n  );\n\n  const mouseUp = React.useCallback(() => {\n    document.body.style.cursor = \"auto\";\n    setTaskDragging(false);\n    window.removeEventListener(\"mousemove\", mouseMove);\n    window.removeEventListener(\"mouseup\", mouseUp);\n  }, [mouseMove]);\n\n  const moveTaskHorizontally = React.useCallback(\n    (toIndex: number) => {\n      if (toIndex === dragIndexes.current.listIndex) return;\n\n      const newList = { ...allLists };\n\n      newList.list[toIndex].tasks.push(\n        newList.list[dragIndexes.current.listIndex].tasks[\n          dragIndexes.current.taskIndex\n        ]\n      );\n\n      newList.list[dragIndexes.current.listIndex].tasks.splice(\n        dragIndexes.current.taskIndex,\n        1\n      );\n\n      dragIndexes.current = {\n        listIndex: toIndex,\n        taskIndex: newList.list[toIndex].tasks.length - 1,\n      };\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const moveTaskVertically = React.useCallback(\n    (toTaskIndex: number) => {\n      if (\n        toTaskIndex < 0 ||\n        toTaskIndex >= allLists.list[dragIndexes.current.listIndex].tasks.length\n      )\n        return;\n\n      const newList = { ...allLists };\n\n      const tmp =\n        newList.list[dragIndexes.current.listIndex].tasks[\n          dragIndexes.current.taskIndex\n        ];\n\n      newList.list[dragIndexes.current.listIndex].tasks.splice(\n        dragIndexes.current.taskIndex,\n        1\n      );\n\n      newList.list[dragIndexes.current.listIndex].tasks.splice(\n        toTaskIndex,\n        0,\n        tmp\n      );\n\n      dragIndexes.current.taskIndex = toTaskIndex;\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  return {\n    taskDragging,\n    coord,\n    beginTaskDrag,\n    dragIndexes: dragIndexes.current,\n    moveTaskVertically,\n    moveTaskHorizontally,\n    width: width.current,\n    height: height.current,\n  };\n};\n","import React from \"react\";\nimport { clearInterval, setInterval } from \"timers\";\nimport Coord from \"../models/Coord\";\n\nexport default function useMouseScrollHorizontal(condition: boolean) {\n  const scrollRef = React.useRef<HTMLDivElement | null>(null);\n  const intervalRef = React.useRef<NodeJS.Timeout | null>(null);\n  const mouseCoordRef = React.useRef<Coord>({ x: 0, y: 0 });\n\n  const edgeSize = 150;\n  const maxStep = 20;\n\n  const saveMouseCoord = React.useCallback((event: MouseEvent) => {\n    mouseCoordRef.current = {\n      x: event.clientX,\n      y: event.clientY,\n    };\n  }, []);\n\n  const checkMoveScroll = React.useCallback(() => {\n    const element = scrollRef.current as HTMLDivElement;\n    const rect = element.getBoundingClientRect();\n    const leftEdge = edgeSize + rect.x;\n    const rightEdge = rect.x + rect.width - edgeSize;\n\n    const inLeftEdge = mouseCoordRef.current.x >= rightEdge;\n    const inRightEdge = mouseCoordRef.current.x <= leftEdge;\n\n    const canScrollLeft = element.scrollLeft > 0;\n    const canScrollRight =\n      element.scrollLeft < element.scrollWidth - rect.width;\n\n    if ((!inLeftEdge || !canScrollRight) && (!inRightEdge || !canScrollLeft)) {\n      return false;\n    }\n\n    let nextScroll = element.scrollLeft;\n\n    if (canScrollRight && inLeftEdge) {\n      const intensity = (mouseCoordRef.current.x - rightEdge) / edgeSize;\n      nextScroll = nextScroll + Math.min(maxStep * intensity, maxStep);\n    } else if (canScrollLeft && inRightEdge) {\n      const intensity = (leftEdge - mouseCoordRef.current.x) / edgeSize;\n      nextScroll = nextScroll - Math.min(maxStep * intensity, maxStep);\n    }\n\n    if (nextScroll !== element.scrollLeft) {\n      element.scrollTo({\n        left: nextScroll,\n      });\n    }\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (condition) {\n      intervalRef.current = setInterval(checkMoveScroll, 30);\n      window.addEventListener(\"mousemove\", saveMouseCoord);\n    } else {\n      window.removeEventListener(\"mousemove\", saveMouseCoord);\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    }\n\n    return () => {\n      window.removeEventListener(\"mousemove\", saveMouseCoord);\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, [saveMouseCoord, checkMoveScroll, condition]);\n\n  const scrollToRight = React.useCallback(() => {\n    const element = scrollRef.current as HTMLDivElement;\n    element.scrollTo({\n      left: element.scrollWidth,\n    });\n  }, []);\n\n\n  \n\n  return { scrollRef, scrollToRight };\n}\n","import { createGlobalStyle, DefaultTheme } from \"styled-components\";\n\ndeclare module \"styled-components\" {\n  export interface DefaultTheme {\n    fontColor: string;\n    transparency: string;\n    transparencyLight: string;\n    scrollBar: string;\n    scrollThumb: string;\n    listColor: string;\n    taskColor: string;\n    green: string;\n    red: string;\n    blue: string;\n    sky: string;\n    yellow: string;\n    orange: string;\n    purple: string;\n    pink: string;\n    lime: string;\n    black: string;\n  }\n}\n\nexport const defaultTheme: DefaultTheme = {\n  fontColor: \"#172b4d\",\n  transparency: \"rgba(0, 0, 0, 0.32)\",\n  transparencyLight: \"rgba(0, 0, 0, 0.16)\",\n  scrollBar: \"#d9dce2\",\n  scrollThumb: \"#bdc3ce\",\n  listColor: \"#ebecf0\",\n  taskColor: \"white\",\n  green: \"#5aac44\",\n  red: \"#eb5a46\",\n  blue: \"#298fca\",\n  sky: \"#00c2e0\",\n  yellow: \"#f2d600\",\n  orange: \"#ff9f1a\",\n  purple: \"#c377e0\",\n  pink: \"#ff78cb\",\n  lime: \"#51e898\",\n  black: \"#344563\",\n};\n\nexport const GlobalStyles = createGlobalStyle`\n  * {\n    padding: 0;\n    margin: 0;\n    outline: 0;\n    box-sizing: border-box;\n    font-family: 'Nunito', sans-serif;\n  }\n\n  body{\n    color: ${({ theme }) => theme.fontColor};\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n`;\n","import styled from \"styled-components\";\nimport { transparentize } from \"polished\";\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 40px;\n  padding: 4px;\n\n  display: flex;\n  background: ${({ theme }) => theme.transparency};\n`;\n\ninterface HeaderBtnWrapperProps {\n  right?: boolean;\n}\n\nexport const HeaderBtnWrapper = styled.div.attrs(\n  ({ right }: HeaderBtnWrapperProps) => ({\n    right: right || false,\n  })\n)`\n  width: 50%;\n  display: grid;\n  column-gap: 4px;\n  grid-auto-flow: column;\n  align-items: center;\n  justify-content: ${({ right }) => (right ? \"flex-end\" : \"flex-start\")};\n`;\n\ninterface HeaderBoxProps {\n  color?: string;\n}\n\nexport const HeaderBox = styled.div.attrs(\n  ({ color }): HeaderBoxProps => ({\n    color: color || \"rgba(255, 255, 255, .32)\",\n  })\n)`\n  border: none;\n  background: ${({ color }) => color};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  column-gap: 8px;\n  height: 32px;\n  min-width: 32px;\n  padding: 8px;\n  color: white;\n  font-weight: bolder;\n  font-size: 14px;\n  border-radius: 4px;\n  transition: background 0.2s;\n\n  &:hover {\n    background: ${({ color }) => transparentize(0.1, color as string)};\n  }\n`;\n\nexport const HeaderAvatar = styled.div`\n  border-radius: 50%;\n  width: 32px;\n  height: 32px;\n  background: #aaa;\n`;\n\nexport const HeaderInput = styled(HeaderBox)`\n  width: 100%;\n`;\n\nexport const HeaderTitle = styled.div`\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  position: absolute;\n  font-family: \"Pacifico\", cursive;\n  font-size: 20px;\n  display: flex;\n  align-items: center;\n  color: white;\n`;\n","import React from \"react\";\nimport { DiTrello } from \"react-icons/di\";\nimport { Container, HeaderTitle } from \"./styles\";\n\n\ninterface Props {}\n\nconst Header = (props: Props) => {\n  return (\n    <Container>\n      {/* <HeaderBtnWrapper>\n        <HeaderBox as=\"button\">\n          <BsFillGrid3X3GapFill size={16} color=\"white\" />\n        </HeaderBox>\n        <HeaderBox as=\"button\">\n          <AiOutlineHome size={18} color=\"white\" />\n        </HeaderBox>\n        <HeaderBox as=\"button\">\n          <FaTrello size={16} />\n          <p>Quadros</p>\n        </HeaderBox>\n        <HeaderBox as=\"input\" />\n      </HeaderBtnWrapper> */}\n      <HeaderTitle>\n        <DiTrello size={24} />\n        Fake Trello\n      </HeaderTitle>\n      {/* <HeaderBtnWrapper right>\n        <HeaderBox as=\"button\">\n          <FiPlus size={20} color=\"white\" />\n        </HeaderBox>\n        <HeaderBox as=\"button\">\n          <FiAlertCircle size={20} color=\"white\" />\n        </HeaderBox>\n        <HeaderBox as=\"button\" color=\"#eb5a46\">\n          <MdNotificationsNone size={20} color=\"white\" />\n        </HeaderBox>\n        <HeaderAvatar />\n      </HeaderBtnWrapper> */}\n    </Container>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Panel from \"./pages/panel\";\nimport { GlobalStyles, defaultTheme } from \"./styles\";\nimport { ThemeProvider } from \"styled-components\";\nimport Header from \"./components/header\";\nimport styled from \"styled-components\";\nimport { LabelProvider } from \"./Contexts/LabelContext\";\nimport { TaskListProvider } from \"./Contexts/TaskListContext\";\n\nfunction App() {\n  return (\n    <>\n      <ThemeProvider theme={defaultTheme}>\n        <GlobalStyles />\n        <LabelProvider>\n          <TaskListProvider>\n            <Container>\n              <Header />\n              <Panel />\n            </Container>\n          </TaskListProvider>\n        </LabelProvider>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  min-height: 100vh;\n\n  display: flex;\n  flex-direction: column;\n\n  background: #0079bf;\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}