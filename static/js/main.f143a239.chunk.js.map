{"version":3,"sources":["util/index.ts","components/newTask/styled.ts","hooks/useKeyMouseToSaveClose.tsx","hooks/useFocusInput.tsx","Contexts/TaskListContext.tsx","components/newTask/index.tsx","Contexts/DndTaskContext.tsx","components/taskCard/styled.ts","components/taskCard/DateBadge/index.tsx","components/taskCard/dateMenu/styled.ts","components/taskCard/dateMenu/index.tsx","components/taskCard/taskMenu/styled.ts","components/taskCard/taskMenu/index.tsx","components/taskCard/index.tsx","components/cardlist/styled.ts","components/cardlist/cardlistAction/styled.ts","components/cardlist/cardlistAction/index.tsx","components/cardlist/cardlistEditTitle/index.tsx","components/cardlist/index.tsx","hooks/useMouseScrollVertical.tsx","components/cardlist/visualList.tsx","components/newList/styled.ts","components/newList/index.tsx","components/taskCard/VisualTaskCard.tsx","hooks/useDnDList.tsx","hooks/useDndTask.tsx","pages/panel/styles.ts","pages/panel/index.tsx","hooks/useTaskList.tsx","hooks/useMouseScrollHorizontal.tsx","styles/index.ts","components/header/styles.ts","components/header/index.tsx","App.tsx","index.tsx"],"names":["listRects","Array","element","getScroll","document","getElementById","scrollLeft","Container","styled","div","theme","taskColor","fontColor","transparentize","green","darken","useKeyMouseToSaveClose","save","close","containerRef","React","useRef","pauseRef","useLayoutEffect","handleKeyDown","ev","key","mouseUpHandler","current","rect","getBoundingClientRect","clientX","x","width","clientY","y","height","window","addEventListener","removeEventListener","useFocusInput","inputRef","focus","TaskListContext","createContext","withTheme","closeNewTask","listIndex","scrolDown","useState","input","setInput","addNewTask","useContext","saveInput","useCallback","ref","value","onChange","e","target","placeholder","onClick","size","color","DndTaskContext","DueState","Card","dragging","transparencyLight","css","taskDragging","Shadow","transparency","date","due","useMemo","moment","dueState","today","isSame","dueSoon","isAfter","overDue","normal","format","DateBadge","yellow","red","top","left","Division","DataWrapper","listColor","CalendarNavWrapper","Calendar","CalendarElement","CalendarWeekDay","CalendarDate","selected","blue","BtnWrapper","Btn","button","lighten","taskIndex","setSelected","calendarView","serCalendarView","editTaskDate","val","start","weekday","daysInMonth","end","weekDays","years","arr","year","i","push","ThemeContext","emptyDate","n","onMouseDown","stopPropagation","clone","subtract","month","newMonth","Number","months","map","newYear","add","day","index","dates","EditZone","OptionsZone","TaskMenu","task","dateMenuOpen","setDateMenuOpen","deleteTask","editTaskTitle","useEffect","title","TaskCard","menuOpen","setMenuOpen","beginTaskDrag","draggedListIndex","draggedTaskIndex","moveTaskVertically","mouseMoveHandle","event","check","coord","checkRangeY","toIndex","handleLeftMouseDown","handleRightMouseDown","handleMouseDown","preventDefault","onContextMenu","onMouseMove","CardContent","CardHeader","selfTaskDragging","NewTaskBtn","TaskContainer","scrollBar","scrollThumb","CardlistAction","menuPosition","openNewTask","deleteList","style","Input","editListTitle","CardList","list","beginDragList","draggingSelf","draggingList","moveListHorizontally","editing","setEditing","contentRef","condition","scrollRef","intervalRef","mouseCoordRef","saveMouseCoord","checkMoveScroll","topEdge","bottomEdge","inBottomEdge","inTopEdge","canScrollUp","scrollTop","canScrollDown","scrollHeight","nextScroll","intensity","Math","min","scrollTo","setInterval","clearInterval","useMouseScroll","addingTask","setAddingTask","menuBtnRef","linstIndex","scroll","saveListRect","onMouseEnter","tasks","id","length","position","transform","boxShadow","pointerEvents","cursor","creating","scrollToRight","addList","creatingNewList","setCreatingNewList","open","background","useDnDList","allLists","setAllLists","setCoord","setDragging","mouseCoord","mouseOffset","listIndexRef","setPosition","mouseMove","body","mouseUp","newList","temp","draggedListCoord","useDndTask","setTaskDragging","dragIndexes","horizontalCheck","rectInRangeX","moveTaskHorizontally","splice","toTaskIndex","tmp","relativeX","getRectX","xDir","abs","toListIndex","ListContainter","mock","Panel","shortid","generate","taskListContextValue","newTask","useTaskList","useDndList","leftEdge","rightEdge","inLeftEdge","inRightEdge","canScrollLeft","canScrollRight","scrollWidth","useMouseScrollHorizontal","dndContextValue","Provider","minWidth","margin","VisualTaskCard","defaultTheme","sky","orange","purple","pink","lime","black","GlobalStyles","createGlobalStyle","HeaderBox","attrs","right","HeaderTitle","Header","props","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f143a239.chunk.js","sourcesContent":["import Coord from \"../models/Coord\";\n\nexport let listRects: DOMRect[] = new Array<DOMRect>();\n\nlet element: null | HTMLDivElement = null;\n\nconst getScroll = () => {\n  if (!element) {\n    element = document.getElementById(\"scroll-test\") as HTMLDivElement;\n  }\n\n  return element.scrollLeft;\n};\n\nexport const getRectX = (index: number): number => {\n  const rect = listRects[index];\n  const scroll = getScroll();\n  return rect.x - scroll;\n};\n\nexport const saveListRect = (linstIndex: number, rect: DOMRect) => {\n  const scroll = getScroll();\n\n  rect.x += scroll;\n  listRects[linstIndex] = rect;\n};\n\nexport const rectInRangeX = (rect: DOMRect, coord: Coord): boolean => {\n  const scroll = getScroll();\n  coord.x += scroll;\n\n  return coord.x >= rect.x && coord.x <= rect.x + rect.width;\n};\n\nexport const rectInRangeY = (\n  rect: DOMRect,\n  coord: Coord,\n  yDirection: number\n): boolean => {\n  return yDirection > 0\n    ? coord.y >= rect.y + rect.height * 0.6\n    : coord.y <= rect.y + rect.height * 0.4;\n};\n\nexport const checkRangeY = (rect: DOMRect, coord: Coord): number => {\n  if (coord.y >= rect.y + rect.height * 0.5) return 0;\n  else if (coord.y <= rect.y + rect.height * 0.5) return -1;\n  else return 1;\n};\n","import styled from \"styled-components\";\nimport { transparentize, darken } from \"polished\";\n\nexport const Container = styled.div`\n  /* border: 2px solid red; */\n  margin: 0 4px 8px 4px;\n  display: flex;\n  flex-direction: column;\n\n  div {\n    margin-top: 8px;\n    display: flex;\n    justify-content: start;\n    align-content: center;\n  }\n\n  input {\n    width: 100%;\n    background: ${({ theme }) => theme.taskColor};\n    border-radius: 4px;\n    border: none;\n    border-bottom: 1px solid #bbb;\n    box-shadow: 0 0 2px rgba(0, 0, 0, 0.1);\n    padding: 8px;\n    resize: vertical;\n    font-size: 14px;\n    color: ${({ theme }) => theme.fontColor};\n    padding-bottom: 39px;\n\n    ::placeholder {\n      color: ${({ theme }) => transparentize(0.5, theme.fontColor)};\n    }\n  }\n\n  button {\n    border: none;\n\n    & + button {\n      margin-left: 4px;\n    }\n\n    :nth-of-type(1) {\n      background: ${({ theme }) => theme.green};\n      border-radius: 4px;\n      font-size: 14px;\n      color: white;\n      padding: 8px;\n\n      :hover {\n        background: ${({ theme }) => transparentize(0.2, theme.green)};\n      }\n\n      :active {\n        background: ${({ theme }) => darken(0.2, theme.green)};\n      }\n    }\n\n    :nth-of-type(2) {\n      background: none;\n\n      opacity: 0.5;\n\n      :hover {\n        opacity: 1;\n      }\n    }\n  }\n`;\n","import React from \"react\";\n\nexport default function useKeyMouseToSaveClose(\n  save: () => void,\n  close: () => void\n) {\n  const containerRef = React.useRef<null | HTMLDivElement>(null);\n  const pauseRef = React.useRef<boolean>(false);\n\n  React.useLayoutEffect(() => {\n    function handleKeyDown(ev: KeyboardEvent) {\n      switch (ev.key) {\n        case \"Enter\":\n          save();\n          break;\n        case \"Escape\":\n          close();\n          break;\n        default:\n          break;\n      }\n    }\n\n    function mouseUpHandler(ev: MouseEvent) {\n      if (pauseRef.current) return;\n      const rect = (containerRef.current as HTMLDivElement).getBoundingClientRect();\n\n      if (\n        ev.clientX < rect.x ||\n        ev.clientX > rect.x + rect.width ||\n        ev.clientY < rect.y ||\n        ev.clientY > rect.y + rect.height\n      ) {\n        save();\n        close();\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    window.addEventListener(\"mousedown\", mouseUpHandler, true);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      window.removeEventListener(\"mousedown\", mouseUpHandler, true);\n    };\n  }, [save, close]);\n\n  return { containerRef, pauseRef };\n}\n","import React from \"react\";\n\nexport default function useFocusInput<\n  T extends HTMLInputElement | HTMLTextAreaElement\n>() {\n  const inputRef = React.useRef<null | T>(null);\n\n  React.useLayoutEffect(() => {\n    (inputRef.current as HTMLInputElement).focus();\n  }, []);\n\n  return inputRef;\n}\n","import React from \"react\";\n\nexport interface TaskListContextValue {\n  deleteTask: (taskIndex: number, listIndex: number) => void;\n  addNewTask: (title: string, listIndex: number) => void;\n  deleteList: (listIndex: number) => void;\n  addList: (title: string) => void;\n  editListTitle: (title: string, listIndex: number) => void;\n  editTaskTitle: (title: string, taskIndex: number, listIndex: number) => void;\n  editTaskDate: (data: string, taskIndex: number, listIndex: number) => void;\n}\n\nexport const TaskListContext = React.createContext<TaskListContextValue | null>(\n  null\n);\n","import React from \"react\";\nimport { Container } from \"./styled\";\nimport { FiX } from \"react-icons/fi\";\nimport { withTheme, DefaultTheme } from \"styled-components\";\nimport useKeyMouseToSaveClose from \"../../hooks/useKeyMouseToSaveClose\";\nimport useFocusInput from \"../../hooks/useFocusInput\";\nimport {\n  TaskListContext,\n  TaskListContextValue,\n} from \"../../Contexts/TaskListContext\";\n\ninterface Props {\n  theme: DefaultTheme;\n  listIndex: number;\n  closeNewTask: () => void;\n  scrolDown: () => void;\n}\n\nconst NewTask = ({ theme, closeNewTask, listIndex, scrolDown }: Props) => {\n  const [input, setInput] = React.useState(\"\");\n  const inputRef = useFocusInput<HTMLInputElement>();\n  const { addNewTask } = React.useContext(\n    TaskListContext\n  ) as TaskListContextValue;\n\n  const saveInput = React.useCallback(() => {\n    if (!input) return;\n    addNewTask(input, listIndex);\n    setInput(\"\");\n    scrolDown();\n  }, [setInput, addNewTask, input, listIndex, scrolDown]);\n\n  const { containerRef } = useKeyMouseToSaveClose(saveInput, closeNewTask);\n\n  return (\n    <Container ref={containerRef}>\n      <input\n        ref={inputRef}\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        placeholder=\"Enter a title for this card...\"\n      />\n      <div>\n        <button\n          onClick={() => {\n            saveInput();\n          }}\n        >\n          Add Card\n        </button>\n        <button onClick={closeNewTask}>\n          <FiX size={24} color={theme.fontColor} />\n        </button>\n      </div>\n    </Container>\n  );\n};\n\nexport default withTheme(NewTask);\n","import React from \"react\";\n\nexport interface DndTaskContextValue {\n  taskDragging: boolean;\n  listIndex: number;\n  taskIndex: number;\n  beginTaskDrag: (\n    taskIndex: number,\n    listIndex: number,\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    rect: DOMRect\n  ) => void;\n  moveTaskVertically: (toTaskIndex: number) => void;\n}\n\nconst DndTaskContext = React.createContext<DndTaskContextValue | null>(null);\n\nexport default DndTaskContext;\n","import styled, { css } from \"styled-components\";\nimport { darken } from \"polished\";\n\ninterface DragginProps {\n  dragging?: boolean;\n  taskDragging?: boolean;\n}\n\nexport const Card = styled.div<DragginProps>`\n  position: relative;\n  max-width: 256px;\n  flex: 1;\n  background: ${({ theme }) => theme.taskColor};\n  padding: 8px;\n  border-radius: 4px;\n  border-bottom: 1px solid ${({ dragging }) => (dragging ? \"#ddd\" : \"#bbb\")};\n  word-wrap: break-word;\n  font-size: 14px;\n  box-shadow: 0 0 2px rgba(0, 0, 0, 0.1);\n  user-select: none;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  cursor: inherit;\n\n  & > button {\n    position: absolute;\n    top: 4px;\n    right: 4px;\n    border: none;\n    background: none;\n    display: none;\n    opacity: 0.5;\n    border-radius: 4px;\n\n    place-content: center;\n    width: 20px;\n    height: 20px;\n\n    :hover {\n      opacity: 1;\n      background: ${({ theme }) => theme.transparencyLight};\n    }\n  }\n\n  ${({ dragging }) =>\n    !dragging &&\n    css`\n      :hover > button {\n        display: grid;\n      }\n    `}\n\n  p {\n    max-width: calc(100% - 16px);\n    margin-right: 16px;\n  }\n\n  & + div {\n    margin-top: 8px;\n  }\n\n  ${({ taskDragging }) =>\n    !taskDragging &&\n    css`\n      cursor: pointer;\n\n      &:hover {\n        background: ${({ theme }) => darken(0.1, theme.taskColor)};\n      }\n    `}\n\n  p {\n    opacity: ${({ dragging }) => (dragging ? 0 : 1)};\n  }\n`;\n\n\n\nexport const Shadow = styled.div<DragginProps>`\n  display: ${({ dragging }) => (dragging ? \"block\" : \"none\")};\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  border-radius: inherit;\n  background: ${({ theme }) => theme.transparency};\n`;\n","import moment from \"moment\";\nimport React from \"react\";\nimport { FiClock } from \"react-icons/fi\";\nimport styled, { css } from \"styled-components\";\n\nenum DueState {\n  dueSoon = 0,\n  overDue = 1,\n  normal = 2,\n}\n\ninterface Props {\n  date: string;\n}\n\nexport default ({ date }: Props) => {\n  const due = React.useMemo(() => moment(date, \"DD MM YY\"), [date]);\n\n  const dueState = React.useMemo<DueState>(() => {\n    const today = moment();\n    if (today.isSame(due, \"day\")) return DueState.dueSoon;\n    else if (today.isAfter(due, \"day\")) return DueState.overDue;\n    else return DueState.normal;\n  }, [due]);\n\n  return (\n    <DateBadge dueState={dueState}>\n      <FiClock />\n      <p>{due.format(\"MMMM Do YYYY\")}</p>\n    </DateBadge>\n  );\n};\n\ninterface DateBadgeProps {\n  dueState: DueState;\n}\n\nconst DateBadge = styled.div<DateBadgeProps>`\n  margin-top: 8px;\n  display: grid;\n  grid-template-columns: auto 1fr;\n  place-items: center;\n  place-content: center;\n  column-gap: 8px;\n  padding: 4px;\n  color: ${({ theme }) => theme.fontColor};\n  border-radius: 4px;\n\n  ${({ dueState }) => {\n    switch (dueState) {\n      case DueState.dueSoon:\n        return css`\n          background: ${({ theme }) => theme.yellow};\n          color: white;\n        `;\n      case DueState.overDue:\n        return css`\n          background: ${({ theme }) => theme.red};\n          color: white;\n        `;\n      default:\n        return css``;\n    }\n  }}\n`;\n","import styled, { css } from \"styled-components\";\nimport { darken, lighten } from \"polished\";\n\ninterface ContainerProps {\n  top: number;\n  left: number;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  position: fixed;\n  z-index: 20;\n  top: ${({ top }) => top + \"px\"};\n  left: ${({ left }) => left + \"px\"};\n\n  width: 300px;\n\n  min-height: 300px;\n\n  background: ${({ theme }) => theme.taskColor};\n\n  padding: 8px 0;\n  border-radius: 4px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n  cursor: auto;\n\n  header {\n    position: relative;\n    display: grid;\n    place-content: center;\n    padding: 8px 16px;\n\n    p {\n      font-size: 14px;\n      text-align: center;\n      opacity: 0.7;\n    }\n\n    button {\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      left: 12px;\n      display: grid;\n      place-content: center;\n      border: none;\n      background: none;\n      opacity: 0.5;\n\n      :hover {\n        opacity: 1;\n      }\n    }\n  }\n`;\n\nexport const Division = styled.div`\n  height: 1px;\n  background: #ddd;\n  margin: 0 12px;\n`;\n\nexport const DataWrapper = styled.div`\n  margin: 8px;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  column-gap: 8px;\n  row-gap: 4px;\n\n  & > p {\n    font-size: 14px;\n    font-weight: 700;\n  }\n\n  & > div {\n    padding: 8px;\n    border: 2px solid ${({ theme }) => theme.listColor};\n    border-radius: 4px;\n    font-size: 14px;\n  }\n`;\n\nexport const CalendarNavWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  column-gap: 8px;\n  margin: 8px;\n\n  button,\n  select {\n    font-size: 14px;\n    cursor: pointer;\n    border: none;\n    background: none;\n    border-bottom: 1px solid black;\n    opacity: 0.5;\n\n    :hover {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Calendar = styled.div`\n  display: grid;\n  margin: 8px;\n  grid-template-columns: repeat(7, 1fr);\n\n  border-bottom: 1px solid ${({ theme }) => theme.fontColor};\n  border-right: 1px solid ${({ theme }) => theme.fontColor};\n`;\n\ninterface CalendarElementProps {\n  today?: boolean;\n  selected?: boolean;\n}\n\nexport const CalendarElement = styled.div<CalendarElementProps>`\n  background: ${({ theme }) => theme.listColor};\n  border-top: 1px solid ${({ theme }) => theme.fontColor};\n  border-left: 1px solid ${({ theme }) => theme.fontColor};\n  height: 30px;\n  display: grid;\n  place-content: center;\n  font-size: 14px;\n`;\n\nexport const CalendarWeekDay = styled(CalendarElement)`\n  background: ${({ theme }) => darken(0.1, theme.listColor)};\n  font-weight: 700;\n`;\n\nexport const CalendarDate = styled(CalendarElement)`\n  cursor: pointer;\n\n  font-weight: ${({ today }) => (today ? \"bold\" : \"500\")};\n\n  ${({ selected, today }) =>\n    selected\n      ? css`\n          background: ${({ theme }) => theme.blue};\n          color: white;\n        `\n      : css`\n          background: ${({ theme }) => theme.taskColor};\n\n          :hover {\n            background: ${({ theme }) => darken(0.1, theme.listColor)};\n          }\n\n          color: ${({ theme }) => (today ? theme.blue : \"auto\")};\n        `};\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 8px;\n`;\n\ninterface BtnProps {\n  color: string;\n}\n\nexport const Btn = styled.button<BtnProps>`\n  padding: 8px 12px;\n  border-radius: 4px;\n  border: none;\n  background: ${({ color }) => color};\n  color: white;\n  font-size: 14px;\n\n  transition: background 0.1s;\n\n  :hover {\n    background: ${({ color }) => lighten(0.1, color)};\n  }\n\n  :active {\n    background: ${({ color }) => darken(0.1, color)};\n  }\n`;\n","import moment from \"moment\";\nimport React from \"react\";\nimport { FiX } from \"react-icons/fi\";\nimport {\n  Container,\n  Division,\n  Calendar,\n  CalendarElement,\n  CalendarWeekDay,\n  CalendarDate,\n  BtnWrapper,\n  Btn,\n  CalendarNavWrapper,\n  DataWrapper,\n} from \"./styled\";\nimport { ThemeContext } from \"styled-components\";\nimport useKeyMouseToSaveClose from \"../../../hooks/useKeyMouseToSaveClose\";\nimport {\n  TaskListContext,\n  TaskListContextValue,\n} from \"../../../Contexts/TaskListContext\";\n\ninterface Props {\n  top: number;\n  left: number;\n  listIndex: number;\n  taskIndex: number;\n  close: () => void;\n  date: string;\n}\n\nexport default ({ top, left, listIndex, taskIndex, close, date }: Props) => {\n  const [selected, setSelected] = React.useState<moment.Moment>(\n    date ? moment(date, \"DD MM YY\") : moment()\n  );\n  const [calendarView, serCalendarView] = React.useState(\n    (date ? moment(date, \"DD MM YY\") : moment()).date(1)\n  );\n  const { editTaskDate } = React.useContext(\n    TaskListContext\n  ) as TaskListContextValue;\n\n  const save = React.useCallback(\n    (val: string) => {\n      editTaskDate(val, taskIndex, listIndex);\n      close();\n    },\n    [close, editTaskDate, taskIndex, listIndex]\n  );\n\n  const { containerRef } = useKeyMouseToSaveClose(() => {}, close);\n  const start = calendarView.weekday();\n  const daysInMonth = calendarView.daysInMonth();\n  const end =\n    (start + daysInMonth) % 7 === 0 ? 0 : 7 - ((start + daysInMonth) % 7);\n\n  const weekDays = React.useMemo(\n    () => [\"dom\", \"2ª\", \"3ª\", \"4ª\", \"5ª\", \"6ª\", \"sáb\"],\n    []\n  );\n\n  const years = React.useMemo(() => {\n    const arr: number[] = [];\n    const year = moment().year();\n\n    for (let i = 0; i < 21; i++) arr.push(year - 10 + i);\n\n    return arr;\n  }, []);\n\n  const { green, red } = React.useContext(ThemeContext);\n\n  const dates = () => {\n    let arr: JSX.Element[] = [];\n    for (let i = 0; i < daysInMonth; i++)\n      arr.push(\n        <CalendarDate\n          key={i}\n          today={\n            calendarView.year() === moment().year() &&\n            calendarView.month() === moment().month() &&\n            moment().date() === i + 1\n          }\n          selected={\n            calendarView.year() === selected.year() &&\n            calendarView.month() === selected.month() &&\n            selected.date() === i + 1\n          }\n          onClick={() => setSelected(calendarView.clone().date(i + 1))}\n        >\n          {i + 1}\n        </CalendarDate>\n      );\n    return arr;\n  };\n\n  const emptyDate = (n: number) => {\n    let arr: JSX.Element[] = [];\n    for (let i = 0; i < n; i++) arr.push(<CalendarElement key={i} />);\n    return arr;\n  };\n\n  return (\n    <Container\n      ref={containerRef}\n      top={top}\n      left={left}\n      onMouseDown={(e) => e.stopPropagation()}\n    >\n      <header>\n        <p>Change Due Date</p>\n        <button onClick={close}>\n          <FiX size={16} />\n        </button>\n      </header>\n      <Division />\n      <DataWrapper>\n        <p>Date</p>\n        <p>Time</p>\n        <div>{selected.format(\"MMMM Do YYYY\")}</div>\n        <div>{selected.format(\"H:mm\")}</div>\n      </DataWrapper>\n      <CalendarNavWrapper>\n        <button\n          onClick={() => serCalendarView((val) => val.clone().subtract(1, \"M\"))}\n        >\n          Prev\n        </button>\n        <select\n          value={calendarView.month()}\n          onChange={(e) => {\n            const newMonth = Number(e.target.value);\n            serCalendarView((val) => val.clone().month(newMonth));\n          }}\n        >\n          {moment.months().map((month, i) => (\n            <option key={month} value={i}>\n              {month}\n            </option>\n          ))}\n        </select>\n        <select\n          value={calendarView.year()}\n          onChange={(e) => {\n            const newYear = Number(e.target.value);\n            serCalendarView((val) => val.clone().year(newYear));\n          }}\n        >\n          {years.map((year) => (\n            <option key={year} value={year}>\n              {year}\n            </option>\n          ))}\n        </select>\n        <button\n          onClick={() => serCalendarView((val) => val.clone().add(1, \"M\"))}\n        >\n          Next\n        </button>\n      </CalendarNavWrapper>\n      <Calendar>\n        {weekDays.map((day, index) => (\n          <CalendarWeekDay key={index}>{day}</CalendarWeekDay>\n        ))}\n        {emptyDate(start)}\n        {dates()}\n        {emptyDate(end)}\n      </Calendar>\n      <BtnWrapper>\n        <Btn color={green} onClick={() => save(selected.format(\"DD/MM/YY\"))}>\n          Save\n        </Btn>\n        <Btn color={red} onClick={() => save(\"\")}>\n          Remove\n        </Btn>\n      </BtnWrapper>\n    </Container>\n  );\n};\n","import styled from \"styled-components\";\nimport { darken, lighten } from \"polished\";\n\ninterface MenuProps {\n  top: number;\n  left: number;\n}\n\nexport const Container = styled.div<MenuProps>`\n  position: fixed;\n  z-index: 10;\n  top: 0px;\n  left: 0px;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, .5);\n  /* background:  ${({ theme }) => theme.transparency}; */\n  cursor: auto;\n\n  & > div {\n    position: absolute;\n    top: ${({ top }) => top + \"px\"};\n    left: ${({ left }) => left + \"px\"};\n    display: flex;\n    padding-right: 8px;\n    /* background: ${({ theme }) => theme.transparencyLight};\n    box-shadow: 0 0 10px 10px ${({ theme }) => theme.transparencyLight}; */\n  }\n`;\n\ninterface EditZoneProps {\n  width: number;\n  height: number;\n}\n\nexport const EditZone = styled.div<EditZoneProps>`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: flex-start;\n\n  & > div {\n    width: ${({ width }) => width + \"px\"};\n    min-height: ${({ height }) => height + \"px\"};\n    border-radius: 4px;\n    background: white;\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    flex-direction: column;\n    padding: 8px;\n\n    & > textarea {\n      width: 100%;\n      resize: none;\n      min-height: 100px;\n      font-size: 14px;\n      border: none;\n      border-radius: inherit;\n      padding-right: 16px;\n    }\n  }\n\n  & > button {\n    margin-top: 16px;\n    padding: 8px 16px;\n    background: ${({ theme }) => theme.green};\n    color: white;\n    font-size: 14px;\n    border: none;\n    border-radius: 4px;\n    transition: 0.1s;\n\n    :hover {\n      background: ${({ theme }) => lighten(0.1, theme.green)};\n    }\n\n    :active {\n      background: ${({ theme }) => darken(0.1, theme.green)};\n    }\n  }\n`;\n\nexport const OptionsZone = styled.div`\n  margin-left: 8px;\n  display: grid;\n  row-gap: 4px;\n  place-content: start;\n  place-items: start;\n  grid-template-columns: auto;\n\n  & > button {\n    background: ${({ theme }) => theme.transparency};\n    color: white;\n    border: none;\n    border-radius: 4px;\n    padding: 8px 12px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    & > p {\n      margin-left: 8px;\n      font-size: 14px;\n      font-weight: 700;\n    }\n\n    transition: 0.1s;\n\n    :hover {\n      transform: translateX(8px);\n      background: ${({ theme }) => darken(0.1, theme.transparency)};\n    }\n  }\n`;\n","import React from \"react\";\nimport { FiArchive, FiClock } from \"react-icons/fi\";\nimport {\n  TaskListContext,\n  TaskListContextValue,\n} from \"../../../Contexts/TaskListContext\";\nimport useFocusInput from \"../../../hooks/useFocusInput\";\nimport useKeyMouseToSaveClose from \"../../../hooks/useKeyMouseToSaveClose\";\nimport Task from \"../../../models/Task\";\nimport DateBadge from \"../DateBadge\";\nimport DateMenu from \"../dateMenu\";\nimport { Container, EditZone, OptionsZone } from \"./styled\";\n\ninterface Props {\n  close: () => void;\n  rect: DOMRect;\n  task: Task;\n  taskIndex: number;\n  listIndex: number;\n}\n\nconst TaskMenu = ({ close, rect, task, listIndex, taskIndex }: Props) => {\n  const inputRef = useFocusInput<HTMLTextAreaElement>();\n  const [input, setInput] = React.useState(\"\");\n  const [dateMenuOpen, setDateMenuOpen] = React.useState(false);\n  const { deleteTask, editTaskTitle } = React.useContext(\n    TaskListContext\n  ) as TaskListContextValue;\n\n  React.useEffect(() => {\n    setInput(task.title);\n  }, [task.title]);\n\n  const save = React.useCallback(() => {\n    if (input === \"\") return;\n    editTaskTitle(input, taskIndex, listIndex);\n    close();\n  }, [input, close, editTaskTitle, taskIndex, listIndex]);\n\n  const { containerRef, pauseRef } = useKeyMouseToSaveClose(save, close);\n\n  return (\n    <Container\n      onMouseDown={(e) => e.stopPropagation()}\n      top={rect.y}\n      left={rect.x}\n    >\n      <div ref={containerRef}>\n        <EditZone height={rect.height} width={rect.width}>\n          <div>\n            <textarea\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              ref={inputRef}\n            />\n            {task.date && <DateBadge date={task.date} />}\n          </div>\n          <button onClick={save}>Save</button>\n        </EditZone>\n        <OptionsZone>\n          <button\n            onClick={() => {\n              setDateMenuOpen(true);\n              pauseRef.current = true;\n            }}\n          >\n            <FiClock />\n            <p>Change Due Date</p>\n          </button>\n          <button\n            onClick={() => {\n              deleteTask(taskIndex, listIndex);\n            }}\n          >\n            <FiArchive />\n            <p>Archive</p>\n          </button>\n        </OptionsZone>\n        {dateMenuOpen && (\n          <DateMenu\n            date={task.date}\n            close={() => {\n              setDateMenuOpen(false);\n              pauseRef.current = false;\n            }}\n            top={rect.y}\n            left={rect.x + rect.width + 8}\n            taskIndex={taskIndex}\n            listIndex={listIndex}\n          />\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default TaskMenu;\n","import React from \"react\";\nimport { FiEdit2 } from \"react-icons/fi\";\nimport DndTaskContext, {\n  DndTaskContextValue,\n} from \"../../Contexts/DndTaskContext\";\nimport Task from \"../../models/Task\";\nimport { checkRangeY } from \"../../util\";\nimport { Card, Shadow } from \"./styled\";\nimport TaskMenu from \"./taskMenu\";\nimport DateBadge from \"./DateBadge\";\n\ninterface Props {\n  task: Task;\n  listIndex: number;\n  index: number;\n}\n\nconst TaskCard = ({ task, listIndex, index }: Props) => {\n  const containerRef = React.useRef<HTMLDivElement | null>(null);\n  const [menuOpen, setMenuOpen] = React.useState(false);\n\n  const {\n    beginTaskDrag,\n    taskDragging,\n    listIndex: draggedListIndex,\n    taskIndex: draggedTaskIndex,\n    moveTaskVertically,\n  } = React.useContext(DndTaskContext) as DndTaskContextValue;\n\n  const dragging =\n    taskDragging &&\n    draggedListIndex === listIndex &&\n    draggedTaskIndex === index;\n\n  const mouseMoveHandle = React.useCallback(\n    (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      if (!taskDragging) return;\n      if (dragging) return;\n      const rect = (containerRef.current as HTMLDivElement).getBoundingClientRect();\n      const coord = {\n        x: event.clientX,\n        y: event.clientY,\n      };\n      const check = checkRangeY(rect, coord);\n      if (check > 0) return;\n      const toIndex = index + check + 1;\n      if (toIndex !== draggedTaskIndex) moveTaskVertically(toIndex);\n    },\n    [dragging, index, moveTaskVertically, draggedTaskIndex, taskDragging]\n  );\n\n  const handleLeftMouseDown = React.useCallback(\n    (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      beginTaskDrag(\n        index,\n        listIndex,\n        event,\n        (containerRef.current as HTMLDivElement).getBoundingClientRect()\n      );\n    },\n    [beginTaskDrag, index, listIndex]\n  );\n\n  const handleRightMouseDown = React.useCallback(\n    (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      setMenuOpen(true);\n    },\n    []\n  );\n\n  const handleMouseDown = React.useCallback(\n    (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      event.preventDefault();\n      if (event.button === 0) {\n        handleLeftMouseDown(event);\n      } else {\n        handleRightMouseDown(event);\n      }\n    },\n    [handleLeftMouseDown, handleRightMouseDown]\n  );\n\n  return (\n    <Card\n      taskDragging={taskDragging}\n      dragging={dragging}\n      ref={containerRef}\n      onContextMenu={(e) => {\n        e.preventDefault();\n      }}\n      onMouseDown={handleMouseDown}\n      onMouseMove={mouseMoveHandle}\n    >\n      <p>{task.title}</p>\n      {task.date && !dragging && <DateBadge date={task.date} />}\n      <button onClick={() => setMenuOpen(true)}>\n        <FiEdit2 size={14} />\n      </button>\n      <Shadow dragging={dragging} />\n      {menuOpen && (\n        <TaskMenu\n          taskIndex={index}\n          listIndex={listIndex}\n          rect={(containerRef.current as HTMLDivElement).getBoundingClientRect()}\n          close={() => setMenuOpen(false)}\n          task={task}\n        />\n      )}\n    </Card>\n  );\n};\n\nexport default TaskCard;\n","import styled, { css } from \"styled-components\";\n\ninterface draggingProps {\n  dragging?: boolean;\n  selfTaskDragging?: boolean;\n}\n\nexport const Container = styled.div`\n  min-width: 272px;\n\n  height: 100%;\n\n  & + div {\n    margin-left: 8px;\n  }\n`;\n\nexport const CardContent = styled.div<draggingProps>`\n  position: relative;\n  max-width: 272px;\n  width: 100%;\n  padding: 0 4px;\n\n  max-height: 100%;\n\n  /* display: flex;\n  flex-direction: column; */\n\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  row-gap: 8px;\n  /* grid-auto-flow: row; */\n\n  background: ${({ dragging, theme }) => (dragging ? \"none\" : theme.listColor)};\n\n  font-size: 14px;\n  border-radius: 4px;\n`;\n\ninterface ShadowProps {\n  dragging: boolean;\n}\n\nexport const Shadow = styled.div<ShadowProps>`\n  display: ${({ dragging }) => (dragging ? \"block\" : \"none\")};\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  border-radius: inherit;\n  background: ${({ theme }) => theme.transparency};\n`;\n\nexport const CardHeader = styled.div<draggingProps>`\n  opacity: ${({ dragging }) => (dragging ? 0 : 1)};\n  font-weight: 700;\n  cursor: ${({ selfTaskDragging }) =>\n    selfTaskDragging ? \"inherit\" : \"pointer\"};\n  padding-top: 4px;\n  position: relative;\n  display: grid;\n  grid-template-columns: 1fr auto;\n\n  & > button {\n    height: 32px;\n    width: 32px;\n    /* border: 2px solid red; */\n    display: grid;\n    place-content: center;\n    border-radius: 4px;\n    opacity: 0.5;\n    border: none;\n\n    :hover {\n      opacity: 1;\n      background: ${({ theme }) => theme.transparencyLight};\n    }\n  }\n\n  & > div {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    padding-left: 12px;\n    width: 100%;\n    font-weight: 700;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n  }\n\n  p {\n  }\n`;\n\nexport const NewTaskBtn = styled.div<draggingProps>`\n  opacity: ${({ dragging }) => (dragging ? 0 : 1)};\n  display: grid;\n  grid-auto-flow: column;\n  align-content: center;\n  place-content: start;\n\n  column-gap: 8px;\n  padding: 8px 8px;\n  cursor: ${({ selfTaskDragging }) =>\n    selfTaskDragging ? \"inherit\" : \"pointer\"};\n  margin: 0 4px;\n  margin-bottom: 8px;\n\n  ${({ selfTaskDragging }) =>\n    !selfTaskDragging &&\n    css`\n      :hover {\n        background: rgba(9, 30, 66, 0.08);\n      }\n    `}\n`;\n\nexport const TaskContainer = styled.div<draggingProps>`\n  opacity: ${({ dragging }) => (dragging ? 0 : 1)};\n  display: flex;\n  flex-direction: column;\n  padding: 0 4px 0 4px;\n  flex: 1 1 auto;\n  overflow-y: auto;\n\n  /* width */\n  ::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    border-radius: 10px;\n    background: ${({ theme }) => theme.scrollBar};\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: ${({ theme }) => theme.scrollThumb};\n    border-radius: 10px;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  width: 300px;\n  background: ${({ theme }) => theme.taskColor};\n  padding: 8px 0;\n  border-radius: 4px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n\n  header {\n    position: relative;\n    display: grid;\n    place-content: center;\n    padding: 8px 16px;\n\n    p {\n      font-size: 14px;\n      text-align: center;\n      opacity: 0.5;\n    }\n\n    button {\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      left: 12px;\n      display: grid;\n      place-content: center;\n      border: none;\n      background: none;\n      opacity: 0.5;\n\n      :hover {\n        opacity: 1;\n      }\n    }\n  }\n\n  ul {\n    list-style: none;\n    padding: 8px 0;\n\n    li {\n      button {\n        width: 100%;\n        border: none;\n        background: none;\n        font-size: 14px;\n        padding: 8px 12px;\n        text-align: start;\n\n        :hover {\n          background: ${({ theme }) => theme.listColor};\n        }\n      }\n    }\n  }\n`;\n\nexport const Division = styled.div`\n  height: 1px;\n  background: #ddd;\n  margin: 0 12px;\n`;\n","import React from \"react\";\nimport { FiX } from \"react-icons/fi\";\nimport {\n  TaskListContext,\n  TaskListContextValue,\n} from \"../../../Contexts/TaskListContext\";\nimport useKeyMouseToSaveClose from \"../../../hooks/useKeyMouseToSaveClose\";\nimport Coord from \"../../../models/Coord\";\nimport { Container, Division } from \"./styled\";\n\ninterface Props {\n  menuPosition: Coord;\n  close: () => void;\n  openNewTask: () => void;\n  listIndex: number;\n}\n\nconst CardlistAction = ({\n  menuPosition,\n  close,\n  openNewTask,\n  listIndex,\n}: Props) => {\n  const { containerRef } = useKeyMouseToSaveClose(() => {}, close);\n  const { deleteList } = React.useContext(\n    TaskListContext\n  ) as TaskListContextValue;\n  return (\n    <Container\n      ref={containerRef}\n      style={{\n        top: menuPosition.y,\n        left: menuPosition.x,\n      }}\n    >\n      <header>\n        <p>List Actions</p>\n        <button onClick={close}>\n          <FiX size={16} />\n        </button>\n      </header>\n      <Division />\n      <ul>\n        <li>\n          <button\n            onClick={() => {\n              openNewTask();\n              close();\n            }}\n          >\n            Add Card...\n          </button>\n        </li>\n      </ul>\n      <Division />\n      <ul>\n        <li>\n          <button\n            onClick={() => {\n              deleteList(listIndex);\n              close();\n            }}\n          >\n            Archive this List\n          </button>\n        </li>\n      </ul>\n    </Container>\n  );\n};\n\nexport default CardlistAction;\n","import React from \"react\";\nimport styled, { withTheme, DefaultTheme } from \"styled-components\";\nimport useKeyMouseToSaveClose from \"../../../hooks/useKeyMouseToSaveClose\";\nimport useFocusInput from \"../../../hooks/useFocusInput\";\nimport {\n  TaskListContext,\n  TaskListContextValue,\n} from \"../../../Contexts/TaskListContext\";\nimport { FiX } from \"react-icons/fi\";\n\ninterface Props {\n  title: string;\n  close: () => void;\n  listIndex: number;\n  theme: DefaultTheme;\n}\n\nconst CardlistEditTitle = ({ title, close, listIndex, theme }: Props) => {\n  const [input, setInput] = React.useState(\"\");\n\n  const { editListTitle } = React.useContext(\n    TaskListContext\n  ) as TaskListContextValue;\n\n  const save = React.useCallback(() => {\n    if (!input) return;\n    editListTitle(input, listIndex);\n    close();\n  }, [input, close, editListTitle, listIndex]);\n\n  const { containerRef } = useKeyMouseToSaveClose(save, close);\n  const inputRef = useFocusInput<HTMLInputElement>();\n\n  React.useEffect(() => {\n    setInput(title);\n  }, [title]);\n\n  return (\n    <Container ref={containerRef}>\n      <Input\n        ref={inputRef}\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n      />\n      <Btn\n        onClick={(e) => {\n          close();\n          e.stopPropagation();\n        }}\n      >\n        <FiX size={20} color={theme.red} />\n      </Btn>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  top: 4px;\n  left: 0;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Btn = styled.div`\n  position: absolute;\n  top: 50%;\n  right: 40px;\n  transform: translateY(-50%);\n  display: grid;\n  place-content: center;\n  height: 20px;\n  width: 20px;\n\n  opacity: 0.5;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nconst Input = styled.input`\n  width: calc(100% - 32px);\n  height: calc(100% - 4px);\n  border: none;\n  background: none;\n  padding: 8px 12px;\n  padding-right: 28px;\n  font-size: 14px;\n  font-weight: 700;\n  background: ${({ theme }) => theme.taskColor};\n  border: 2px solid ${({ theme }) => theme.red};\n  border-radius: 4px;\n  color: ${({ theme }) => theme.fontColor};\n`;\n\nexport default withTheme(CardlistEditTitle);\n","import React from \"react\";\nimport { BsThreeDots } from \"react-icons/bs\";\nimport { FiPlus } from \"react-icons/fi\";\nimport useMouseScroll from \"../../hooks/useMouseScrollVertical\";\nimport TaskList from \"../../models/List\";\nimport Coord from \"../../models/Coord\";\nimport { saveListRect } from \"../../util\";\nimport NewTask from \"../newTask\";\nimport TaskCard from \"../taskCard\";\nimport {\n  CardContent,\n  CardHeader,\n  Container,\n  NewTaskBtn,\n  Shadow,\n  TaskContainer,\n} from \"./styled\";\nimport CardlistAction from \"./cardlistAction\";\nimport CardListEdit from \"./cardlistEditTitle\";\n\ninterface Props {\n  list: TaskList;\n  listIndex: number;\n  selfTaskDragging: boolean;\n  draggingList: boolean;\n  draggingSelf: boolean;\n  beginDragList: (\n    listIndex: number,\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    rect: DOMRect\n  ) => void;\n  moveListHorizontally: (toIndex: number) => void;\n}\n\nconst CardList = ({\n  list,\n  listIndex,\n  selfTaskDragging,\n  beginDragList,\n  draggingSelf,\n  draggingList,\n  moveListHorizontally,\n}: Props) => {\n  const [editing, setEditing] = React.useState(false);\n  const contentRef = React.useRef<HTMLDivElement | null>(null);\n  const { scrollRef, scrolDown } = useMouseScroll(selfTaskDragging);\n  const [addingTask, setAddingTask] = React.useState(false);\n  const [menuOpen, setMenuOpen] = React.useState(false);\n  const menuBtnRef = React.useRef<HTMLButtonElement | null>(null);\n\n  const menuPosition: Coord = React.useMemo(() => {\n    if (!menuOpen) return { x: 0, y: 0 };\n    const rect = (menuBtnRef.current as HTMLButtonElement).getBoundingClientRect();\n    return {\n      x: rect.x,\n      y: rect.y,\n    };\n  }, [menuOpen]);\n\n  React.useLayoutEffect(() => {\n    saveListRect(\n      listIndex,\n      (contentRef.current as HTMLDivElement).getBoundingClientRect()\n    );\n  }, [listIndex]);\n\n  const handleMouseDown = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    if (event.button !== 0) return;\n\n    beginDragList(\n      listIndex,\n      event,\n      (contentRef.current as HTMLDivElement).getBoundingClientRect()\n    );\n  };\n\n  const handleMouseEnter = () => {\n    if (!draggingList || draggingSelf) return;\n    moveListHorizontally(listIndex);\n  };\n\n  return (\n    <Container onMouseEnter={handleMouseEnter}>\n      <CardContent dragging={draggingSelf} ref={contentRef}>\n        <CardHeader\n          selfTaskDragging={selfTaskDragging}\n          dragging={draggingSelf}\n          onMouseDown={handleMouseDown}\n        >\n          <div onClick={() => setEditing(true)}>\n            <p>{list.title}</p>\n            {editing && (\n              <CardListEdit\n                close={() => setEditing(false)}\n                listIndex={listIndex}\n                title={list.title}\n              />\n            )}\n          </div>\n          <button ref={menuBtnRef} onClick={() => setMenuOpen((val) => !val)}>\n            <BsThreeDots size={16} />\n          </button>\n        </CardHeader>\n        <TaskContainer dragging={draggingSelf} ref={scrollRef}>\n          {list.tasks.map((task, taskIndex) => (\n            <TaskCard\n              key={task.id}\n              task={task}\n              listIndex={listIndex}\n              index={taskIndex}\n            />\n          ))}\n        </TaskContainer>\n        {addingTask ? (\n          <NewTask\n            listIndex={listIndex}\n            closeNewTask={() => setAddingTask(false)}\n            scrolDown={scrolDown}\n          />\n        ) : (\n          <NewTaskBtn\n            selfTaskDragging={selfTaskDragging}\n            dragging={draggingSelf}\n            onClick={() => setAddingTask(true)}\n          >\n            <FiPlus size={16} />\n            {list.tasks.length > 0 ? (\n              <p>Add another card</p>\n            ) : (\n              <p>Add a card</p>\n            )}\n          </NewTaskBtn>\n        )}\n        <Shadow dragging={draggingSelf} />\n      </CardContent>\n      {menuOpen && (\n        <CardlistAction\n          listIndex={listIndex}\n          openNewTask={() => setAddingTask(true)}\n          close={() => setMenuOpen(false)}\n          menuPosition={menuPosition}\n        />\n      )}\n    </Container>\n  );\n};\nexport default CardList;\n","import React from \"react\";\nimport Coord from \"../models/Coord\";\nimport { clearInterval, setInterval } from \"timers\";\n\nexport default function useMouseScrollVertical(condition: boolean) {\n  const scrollRef = React.useRef<HTMLDivElement | null>(null);\n  const intervalRef = React.useRef<NodeJS.Timeout | null>(null);\n  const mouseCoordRef = React.useRef<Coord>({ x: 0, y: 0 });\n\n  const edgeSize = 100;\n  const maxStep = 20;\n\n  const saveMouseCoord = React.useCallback((event: MouseEvent) => {\n    mouseCoordRef.current = {\n      x: event.clientX,\n      y: event.clientY,\n    };\n  }, []);\n\n  const checkMoveScroll = React.useCallback(() => {\n    const element = scrollRef.current as HTMLDivElement;\n    const rect = element.getBoundingClientRect();\n    const topEdge = edgeSize + rect.y;\n    const bottomEdge = rect.y + rect.height - edgeSize;\n\n    const inBottomEdge = mouseCoordRef.current.y >= bottomEdge;\n    const inTopEdge = mouseCoordRef.current.y <= topEdge;\n\n    const canScrollUp = element.scrollTop > 0;\n    const canScrollDown =\n      element.scrollTop < element.scrollHeight - rect.height;\n\n    if ((!inBottomEdge || !canScrollDown) && (!inTopEdge || !canScrollUp)) {\n      return false;\n    }\n\n    let nextScroll = element.scrollTop;\n\n    if (canScrollDown && inBottomEdge) {\n      const intensity = (mouseCoordRef.current.y - bottomEdge) / edgeSize;\n      nextScroll = nextScroll + Math.min(maxStep * intensity, maxStep);\n    } else if (canScrollUp && inTopEdge) {\n      const intensity = (topEdge - mouseCoordRef.current.y) / edgeSize;\n      nextScroll = nextScroll - Math.min(maxStep * intensity, maxStep);\n    }\n\n    if (nextScroll !== element.scrollTop) {\n      element.scrollTo({\n        top: nextScroll,\n      });\n    }\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (condition) {\n      intervalRef.current = setInterval(checkMoveScroll, 30);\n      window.addEventListener(\"mousemove\", saveMouseCoord);\n    } else {\n      window.removeEventListener(\"mousemove\", saveMouseCoord);\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    }\n\n    return () => {\n      window.removeEventListener(\"mousemove\", saveMouseCoord);\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, [saveMouseCoord, checkMoveScroll, condition]);\n\n  const scrolDown = React.useCallback(() => {\n    const element = scrollRef.current as HTMLDivElement;\n    element.scrollTo({\n      top: element.scrollHeight,\n    });\n  }, []);\n\n  return { scrollRef, scrolDown };\n}\n","import React from \"react\";\nimport { BsThreeDots } from \"react-icons/bs\";\nimport { FiPlus } from \"react-icons/fi\";\nimport TaskList from \"../../models/List\";\nimport TaskCard from \"../taskCard\";\nimport { CardContent, CardHeader, NewTaskBtn, TaskContainer } from \"./styled\";\n\ninterface Props {\n  list: TaskList;\n  listIndex: number;\n  left: number;\n  top: number;\n  height: number;\n}\n\nconst CardList = ({ list, listIndex, top, left, height }: Props) => {\n  return (\n    <CardContent\n      style={{\n        position: \"fixed\",\n        left,\n        top,\n        height,\n        transform: \"rotate(2.5deg)\",\n        boxShadow: \"5px 5px 20px rgba(0, 0, 0, 0.3)\",\n        pointerEvents: \"none\",\n      }}\n    >\n      <CardHeader\n        style={{\n          cursor: \"grabbing\",\n        }}\n      >\n        <div>\n          <p>{list.title}</p>\n        </div>\n        <button>\n          <BsThreeDots size={16} />\n        </button>\n      </CardHeader>\n      <TaskContainer>\n        {list.tasks.map((task, taskIndex) => (\n          <TaskCard\n            key={task.id}\n            task={task}\n            listIndex={listIndex}\n            index={taskIndex}\n          />\n        ))}\n      </TaskContainer>\n      <NewTaskBtn>\n        <FiPlus />\n        <p>Adicionar outro cartão</p>\n      </NewTaskBtn>\n    </CardContent>\n  );\n};\nexport default CardList;\n","import styled from \"styled-components\";\nimport { transparentize, darken } from \"polished\";\n\ninterface ContainerProps {\n  creating: boolean;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  min-width: 272px;\n  background: ${({ theme, creating }) =>\n    creating ? theme.listColor : theme.transparency};\n  display: flex;\n  flex-direction: column;\n  padding: 4px;\n  border-radius: 4px;\n  cursor: pointer;\n\n  p {\n    display: ${({ creating }) => (creating ? \"none\" : \"block\")};\n    padding: 4px;\n    color: white;\n  }\n\n  & > div {\n    display: ${({ creating }) => (creating ? \"block\" : \"none\")};\n\n    & > div {\n      margin-top: 8px;\n      display: flex;\n      justify-content: start;\n      align-content: center;\n    }\n  }\n\n  input {\n    width: 100%;\n    background: ${({ theme }) => theme.taskColor};\n    border-radius: 4px;\n    border: none;\n    padding: 8px;\n    resize: vertical;\n    font-size: 14px;\n    color: ${({ theme }) => theme.fontColor};\n\n    ::placeholder {\n      color: ${({ theme }) => transparentize(0.5, theme.fontColor)};\n    }\n  }\n\n  button {\n    border: none;\n\n    & + button {\n      margin-left: 4px;\n    }\n\n    :nth-of-type(1) {\n      background: ${({ theme }) => theme.green};\n      border-radius: 4px;\n      font-size: 14px;\n      color: white;\n      padding: 8px;\n\n      :hover {\n        background: ${({ theme }) => transparentize(0.2, theme.green)};\n      }\n\n      :active {\n        background: ${({ theme }) => darken(0.2, theme.green)};\n      }\n    }\n\n    :nth-of-type(2) {\n      background: none;\n\n      opacity: 0.5;\n\n      :hover {\n        opacity: 1;\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { FiX } from \"react-icons/fi\";\nimport { DefaultTheme, withTheme } from \"styled-components\";\nimport useKeyMouseToSaveClose from \"../../hooks/useKeyMouseToSaveClose\";\nimport { Container } from \"./styled\";\nimport {\n  TaskListContextValue,\n  TaskListContext,\n} from \"../../Contexts/TaskListContext\";\n\ninterface Props {\n  theme: DefaultTheme;\n  scrollToRight: () => void;\n}\n\nconst NewList = ({ theme, scrollToRight }: Props) => {\n  const { addList } = React.useContext(TaskListContext) as TaskListContextValue;\n\n  const [creatingNewList, setCreatingNewList] = React.useState(false);\n  const inputRef = React.useRef<HTMLInputElement | null>(null);\n  const [input, setInput] = React.useState(\"\");\n  const saveInput = React.useCallback(() => {\n    if (!creatingNewList || !input) return;\n    addList(input);\n    setInput(\"\");\n    scrollToRight();\n  }, [setInput, input, addList, creatingNewList, scrollToRight]);\n\n  const close = React.useCallback(() => setCreatingNewList(false), []);\n  const open = React.useCallback(() => {\n    setCreatingNewList(true);\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (creatingNewList) {\n      (inputRef.current as HTMLInputElement).focus();\n    }\n  }, [creatingNewList]);\n\n  const { containerRef } = useKeyMouseToSaveClose(saveInput, close);\n\n  return (\n    <Container creating={creatingNewList} ref={containerRef}>\n      <div>\n        <input\n          ref={inputRef}\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Enter a title for this list...\"\n        />\n        <div>\n          <button\n            onClick={() => {\n              saveInput();\n            }}\n          >\n            Add List\n          </button>\n          <button onClick={close}>\n            <FiX size={24} color={theme.fontColor} />\n          </button>\n        </div>\n      </div>\n      <p onClick={open}>Add new list</p>\n    </Container>\n  );\n};\n\nexport default withTheme(NewList);\n","import React from \"react\";\nimport Task from \"../../models/Task\";\nimport { Card } from \"./styled\";\nimport { FiEdit2 } from \"react-icons/fi\";\nimport DateBadge from \"./DateBadge\";\n\ninterface Props {\n  task: Task;\n  left: number;\n  top: number;\n  width: number;\n}\n\nconst TaskCard = ({ task, left, top, width }: Props) => {\n  return (\n    <Card\n      style={{\n        width,\n        position: \"fixed\",\n        left,\n        top,\n        cursor: \"grabbing\",\n        transform: \"rotate(2.5deg)\",\n        boxShadow: \"5px 5px 20px rgba(0, 0, 0, 0.3)\",\n        background: \"white\",\n        pointerEvents: \"none\",\n      }}\n    >\n      <p>{task.title}</p>\n      {task.date && <DateBadge date={task.date} />}\n      <button>\n        <FiEdit2 size={14} />\n      </button>\n    </Card>\n  );\n};\n\nexport default TaskCard;\n","import React from \"react\";\nimport Coord from \"../models/Coord\";\nimport TaskList from \"../models/List\";\n\nexport const useDnDList = (\n  allLists: TaskList[],\n  setAllLists: React.Dispatch<React.SetStateAction<TaskList[]>>\n) => {\n  const height = React.useRef(0);\n  const [coord, setCoord] = React.useState<Coord>({\n    x: 0,\n    y: 0,\n  });\n\n  const [dragging, setDragging] = React.useState(false);\n\n  const mouseCoord = React.useRef<Coord>({\n    x: 0,\n    y: 0,\n  });\n\n  const mouseOffset = React.useRef({\n    x: 0,\n    y: 0,\n  });\n\n  const listIndexRef = React.useRef(0);\n\n  const onMouseDown = (\n    listIndex: number,\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    rect: DOMRect\n  ) => {\n    mouseOffset.current = {\n      x: event.clientX - rect.x,\n      y: event.clientY - rect.y,\n    };\n    listIndexRef.current = listIndex;\n    height.current = rect.height;\n    setPosition(event.clientX, event.clientY);\n    window.addEventListener(\"mousemove\", mouseMove);\n    window.addEventListener(\"mouseup\", mouseUp);\n  };\n\n  const setPosition = React.useCallback((x: number, y: number) => {\n    mouseCoord.current = { x, y };\n    setCoord({ x: x - mouseOffset.current.x, y: y - mouseOffset.current.y });\n  }, []);\n\n  const mouseMove = React.useCallback(\n    (ev: MouseEvent) => {\n      setDragging(true);\n      document.body.style.cursor = \"grabbing\";\n      setPosition(ev.clientX, ev.clientY);\n    },\n    [setPosition]\n  );\n\n  const mouseUp = React.useCallback(() => {\n    document.body.style.cursor = \"auto\";\n    setDragging(false);\n    window.removeEventListener(\"mousemove\", mouseMove);\n    window.removeEventListener(\"mouseup\", mouseUp);\n  }, [mouseMove]);\n\n  const moveListHorizontally = React.useCallback(\n    (toIndex: number) => {\n      const newList = [...allLists];\n\n      const temp = newList[listIndexRef.current];\n      newList[listIndexRef.current] = newList[toIndex];\n      newList[toIndex] = temp;\n\n      listIndexRef.current = toIndex;\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  return {\n    beginDragList: onMouseDown,\n    draggedListIndex: listIndexRef.current,\n    draggingList: dragging,\n    draggedListCoord: coord,\n    height: height.current,\n    moveListHorizontally,\n  };\n};\n\nexport default useDnDList;\n","import React from \"react\";\nimport Coord from \"../models/Coord\";\nimport TaskList from \"../models/List\";\nimport { listRects, rectInRangeX, getRectX } from \"../util\";\n\nexport const useDndTask = (\n  allLists: TaskList[],\n  setAllLists: React.Dispatch<React.SetStateAction<TaskList[]>>\n) => {\n  const width = React.useRef(0);\n  const [taskDragging, setTaskDragging] = React.useState(false);\n  const [coord, setCoord] = React.useState<Coord>({\n    x: 0,\n    y: 0,\n  });\n\n  const mouseOffset = React.useRef<Coord>({\n    x: 0,\n    y: 0,\n  });\n\n  const mouseCoord = React.useRef<Coord>({\n    x: 0,\n    y: 0,\n  });\n\n  const dragIndexes = React.useRef({\n    taskIndex: 0,\n    listIndex: 0,\n  });\n\n  const beginTaskDrag = (\n    taskIndex: number,\n    listIndex: number,\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    rect: DOMRect\n  ) => {\n    mouseOffset.current = {\n      x: event.clientX - rect.x,\n      y: event.clientY - rect.y,\n    };\n    dragIndexes.current = {\n      taskIndex,\n      listIndex,\n    };\n    width.current = rect.width;\n    setPosition(event.clientX, event.clientY);\n    window.addEventListener(\"mousemove\", mouseMove);\n    window.addEventListener(\"mouseup\", mouseUp);\n  };\n\n  const setPosition = React.useCallback((x: number, y: number) => {\n    mouseCoord.current = { x, y };\n    setCoord({ x: x - mouseOffset.current.x, y: y - mouseOffset.current.y });\n  }, []);\n\n  const mouseMove = React.useCallback(\n    (ev: MouseEvent) => {\n      setTaskDragging(true);\n      document.body.style.cursor = \"grabbing\";\n      setPosition(ev.clientX, ev.clientY);\n    },\n    [setPosition]\n  );\n\n  const mouseUp = React.useCallback(() => {\n    document.body.style.cursor = \"auto\";\n    setTaskDragging(false);\n    window.removeEventListener(\"mousemove\", mouseMove);\n    window.removeEventListener(\"mouseup\", mouseUp);\n  }, [mouseMove]);\n\n  const horizontalCheck = React.useCallback((toIndex: number): boolean => {\n    if (\n      toIndex < 0 ||\n      toIndex > listRects.length - 1 ||\n      !rectInRangeX(listRects[toIndex], mouseCoord.current)\n    )\n      return false;\n\n    return true;\n  }, []);\n\n  const moveTaskHorizontally = React.useCallback(\n    (toIndex: number) => {\n      const newList = [...allLists];\n\n      newList[toIndex].tasks.push(\n        newList[dragIndexes.current.listIndex].tasks[\n          dragIndexes.current.taskIndex\n        ]\n      );\n\n      newList[dragIndexes.current.listIndex].tasks.splice(\n        dragIndexes.current.taskIndex,\n        1\n      );\n\n      dragIndexes.current = {\n        listIndex: toIndex,\n        taskIndex: newList[toIndex].tasks.length - 1,\n      };\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const moveTaskVertically = React.useCallback(\n    (toTaskIndex: number) => {\n      if (\n        toTaskIndex < 0 ||\n        toTaskIndex >= allLists[dragIndexes.current.listIndex].tasks.length\n      )\n        return;\n\n      const newList = [...allLists];\n\n      const tmp =\n        newList[dragIndexes.current.listIndex].tasks[\n          dragIndexes.current.taskIndex\n        ];\n\n      newList[dragIndexes.current.listIndex].tasks.splice(\n        dragIndexes.current.taskIndex,\n        1\n      );\n\n      newList[dragIndexes.current.listIndex].tasks.splice(toTaskIndex, 0, tmp);\n\n      dragIndexes.current.taskIndex = toTaskIndex;\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  React.useLayoutEffect(() => {\n    if (taskDragging) {\n      const relativeX =\n        mouseCoord.current.x -\n        mouseOffset.current.x -\n        getRectX(dragIndexes.current.listIndex);\n\n      const xDir = relativeX / Math.abs(relativeX) || 0;\n\n      const toListIndex = dragIndexes.current.listIndex + xDir;\n\n      if (xDir && horizontalCheck(toListIndex)) {\n        moveTaskHorizontally(toListIndex);\n      }\n    }\n  }, [taskDragging, coord, horizontalCheck, moveTaskHorizontally]);\n\n  return {\n    taskDragging,\n    coord,\n    beginTaskDrag,\n    dragIndexes: dragIndexes.current,\n    moveTaskVertically,\n    width: width.current,\n  };\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  max-height: calc(100vh - 40px);\n  display: flex;\n  padding-bottom: 8px;\n  flex: 1;\n`;\n\nexport const ListContainter = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n  flex: 1;\n  overflow-x: auto;\n  padding: 8px;\n\n  /* width */\n  ::-webkit-scrollbar {\n    height: 12px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    border-radius: 10px;\n    background: rgba(0, 0, 0, 0.15);\n    margin: 8px;\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: rgba(9, 30, 66, 0.3);\n    border-radius: 10px;\n  }\n`;\n","import React from \"react\";\nimport shortid from \"shortid\";\nimport CardList from \"../../components/cardlist\";\nimport VisualList from \"../../components/cardlist/visualList\";\nimport NewList from \"../../components/newList\";\nimport VisualTaskCard from \"../../components/taskCard/VisualTaskCard\";\nimport DndTaskContext, {\n  DndTaskContextValue,\n} from \"../../Contexts/DndTaskContext\";\nimport useDndList from \"../../hooks/useDnDList\";\nimport { useDndTask } from \"../../hooks/useDndTask\";\nimport useTaskList from \"../../hooks/useTaskList\";\nimport useMouseScrollHorizontal from \"../../hooks/useMouseScrollHorizontal\";\nimport TaskList from \"../../models/List\";\nimport { Container, ListContainter } from \"./styles\";\nimport { TaskListContext } from \"../../Contexts/TaskListContext\";\n\nconst mock = [\n  {\n    title: \"Backlog\",\n    tasks: [\n      \"backlog task\",\n      \"anothter backlog task\",\n      \"very long task with a lot of blank space to test the text wrapper\",\n      \"A very looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong task\",\n    ],\n  },\n  {\n    title: \"To dos\",\n    tasks: [\"a todo task\"],\n  },\n  {\n    title: \"Done\",\n    tasks: [\"a done task\"],\n  },\n];\n\nconst Panel = () => {\n  const [allLists, setAllLists] = React.useState<TaskList[]>(() => {\n    return mock.map((list) => ({\n      ...list,\n      id: shortid.generate(),\n      tasks: list.tasks.map((task) => ({\n        id: shortid.generate(),\n        title: task,\n        date: \"\",\n      })),\n    }));\n  });\n\n  const taskListContextValue = useTaskList(allLists, setAllLists);\n\n  const {\n    beginDragList,\n    draggedListIndex,\n    draggingList,\n    draggedListCoord,\n    height,\n    moveListHorizontally,\n  } = useDndList(allLists, setAllLists);\n\n  const {\n    beginTaskDrag,\n    coord,\n    taskDragging,\n    dragIndexes,\n    moveTaskVertically,\n    width,\n  } = useDndTask(allLists, setAllLists);\n\n  const { scrollRef, scrollToRight } = useMouseScrollHorizontal(draggingList);\n\n  const dndContextValue: DndTaskContextValue = React.useMemo(\n    () => ({\n      beginTaskDrag,\n      taskDragging,\n      taskIndex: dragIndexes.taskIndex,\n      listIndex: dragIndexes.listIndex,\n      moveTaskVertically,\n    }),\n    [\n      dragIndexes.taskIndex,\n      dragIndexes.listIndex,\n      taskDragging,\n      beginTaskDrag,\n      moveTaskVertically,\n    ]\n  );\n\n  // if (!allLists[dragIndexes.listIndex].tasks[dragIndexes.taskIndex]) {\n  //   console.log(allLists);\n  //   console.log(dragIndexes);\n  // }\n\n  return (\n    <TaskListContext.Provider value={taskListContextValue}>\n      <DndTaskContext.Provider value={dndContextValue}>\n        <Container>\n          <ListContainter id=\"scroll-test\" ref={scrollRef}>\n            {allLists.map((list, index) => (\n              <CardList\n                selfTaskDragging={\n                  taskDragging && dragIndexes.listIndex === index\n                }\n                key={list.id}\n                listIndex={index}\n                list={list}\n                beginDragList={beginDragList}\n                draggingSelf={draggingList && draggedListIndex === index}\n                draggingList={draggingList}\n                moveListHorizontally={moveListHorizontally}\n              />\n            ))}\n            <NewList scrollToRight={scrollToRight} />\n            <div\n              style={{\n                minWidth: \"8px\",\n                height: \"100%\",\n                margin: 0,\n              }}\n            />\n          </ListContainter>\n\n          {taskDragging && (\n            <VisualTaskCard\n              task={\n                allLists[dragIndexes.listIndex].tasks[dragIndexes.taskIndex]\n              }\n              left={coord.x}\n              top={coord.y}\n              width={width}\n            />\n          )}\n\n          {draggingList && (\n            <VisualList\n              list={allLists[draggedListIndex]}\n              listIndex={draggedListIndex}\n              left={draggedListCoord.x}\n              top={draggedListCoord.y}\n              height={height}\n            />\n          )}\n        </Container>\n      </DndTaskContext.Provider>\n    </TaskListContext.Provider>\n  );\n};\n\nexport default Panel;\n","import React from \"react\";\nimport shortid from \"shortid\";\nimport TaskList from \"../models/List\";\nimport Task from \"../models/Task\";\nimport { TaskListContextValue } from \"../Contexts/TaskListContext\";\n\nexport default function useTaskList(\n  allLists: TaskList[],\n  setAllLists: React.Dispatch<React.SetStateAction<TaskList[]>>\n) {\n  const deleteTask = React.useCallback(\n    (taskIndex: number, listIndex: number) => {\n      const newList = [...allLists];\n\n      newList[listIndex].tasks.splice(taskIndex, 1);\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const addNewTask = React.useCallback(\n    (title: string, listIndex: number) => {\n      const newList = [...allLists];\n      const newTask: Task = {\n        title,\n        id: shortid.generate(),\n        date: \"\",\n      };\n      newList[listIndex].tasks.push(newTask);\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const deleteList = React.useCallback(\n    (listIndex: number) => {\n      const newList = [...allLists];\n\n      newList.splice(listIndex, 1);\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const addList = React.useCallback(\n    (title: string) => {\n      const newList = [...allLists];\n\n      newList.push({\n        id: shortid.generate(),\n        tasks: [],\n        title,\n      });\n\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const editListTitle = React.useCallback(\n    (title: string, listIndex: number) => {\n      const newList = [...allLists];\n      newList[listIndex].title = title;\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const editTaskTitle = React.useCallback(\n    (title: string, taskIndex: number, listIndex: number) => {\n      const newList = [...allLists];\n      newList[listIndex].tasks[taskIndex].title = title;\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const editTaskDate = React.useCallback(\n    (date: string, taskIndex: number, listIndex: number) => {\n      const newList = [...allLists];\n      newList[listIndex].tasks[taskIndex].date = date;\n      setAllLists(newList);\n    },\n    [allLists, setAllLists]\n  );\n\n  const taskListContextValue: TaskListContextValue = React.useMemo(\n    () => ({\n      addList,\n      addNewTask,\n      deleteTask,\n      deleteList,\n      editListTitle,\n      editTaskTitle,\n      editTaskDate,\n    }),\n    [\n      addList,\n      addNewTask,\n      deleteList,\n      deleteTask,\n      editListTitle,\n      editTaskTitle,\n      editTaskDate,\n    ]\n  );\n\n  return taskListContextValue;\n}\n","import React from \"react\";\nimport { clearInterval, setInterval } from \"timers\";\nimport Coord from \"../models/Coord\";\n\nexport default function useMouseScrollHorizontal(condition: boolean) {\n  const scrollRef = React.useRef<HTMLDivElement | null>(null);\n  const intervalRef = React.useRef<NodeJS.Timeout | null>(null);\n  const mouseCoordRef = React.useRef<Coord>({ x: 0, y: 0 });\n\n  const edgeSize = 150;\n  const maxStep = 20;\n\n  const saveMouseCoord = React.useCallback((event: MouseEvent) => {\n    mouseCoordRef.current = {\n      x: event.clientX,\n      y: event.clientY,\n    };\n  }, []);\n\n  const checkMoveScroll = React.useCallback(() => {\n    const element = scrollRef.current as HTMLDivElement;\n    const rect = element.getBoundingClientRect();\n    const leftEdge = edgeSize + rect.x;\n    const rightEdge = rect.x + rect.width - edgeSize;\n\n    const inLeftEdge = mouseCoordRef.current.x >= rightEdge;\n    const inRightEdge = mouseCoordRef.current.x <= leftEdge;\n\n    const canScrollLeft = element.scrollLeft > 0;\n    const canScrollRight =\n      element.scrollLeft < element.scrollWidth - rect.width;\n\n    if ((!inLeftEdge || !canScrollRight) && (!inRightEdge || !canScrollLeft)) {\n      return false;\n    }\n\n    let nextScroll = element.scrollLeft;\n\n    if (canScrollRight && inLeftEdge) {\n      const intensity = (mouseCoordRef.current.x - rightEdge) / edgeSize;\n      nextScroll = nextScroll + Math.min(maxStep * intensity, maxStep);\n    } else if (canScrollLeft && inRightEdge) {\n      const intensity = (leftEdge - mouseCoordRef.current.x) / edgeSize;\n      nextScroll = nextScroll - Math.min(maxStep * intensity, maxStep);\n    }\n\n    if (nextScroll !== element.scrollLeft) {\n      element.scrollTo({\n        left: nextScroll,\n      });\n    }\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (condition) {\n      intervalRef.current = setInterval(checkMoveScroll, 30);\n      window.addEventListener(\"mousemove\", saveMouseCoord);\n    } else {\n      window.removeEventListener(\"mousemove\", saveMouseCoord);\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    }\n\n    return () => {\n      window.removeEventListener(\"mousemove\", saveMouseCoord);\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, [saveMouseCoord, checkMoveScroll, condition]);\n\n  const scrollToRight = React.useCallback(() => {\n    const element = scrollRef.current as HTMLDivElement;\n    element.scrollTo({\n      left: element.scrollWidth,\n    });\n  }, []);\n\n\n  \n\n  return { scrollRef, scrollToRight };\n}\n","import { createGlobalStyle, DefaultTheme } from \"styled-components\";\n\ndeclare module \"styled-components\" {\n  export interface DefaultTheme {\n    fontColor: string;\n    transparency: string;\n    transparencyLight: string;\n    scrollBar: string;\n    scrollThumb: string;\n    listColor: string;\n    taskColor: string;\n    green: string;\n    red: string;\n    blue: string;\n    sky: string;\n    yellow: string;\n    orange: string;\n    purple: string;\n    pink: string;\n    lime: string;\n    black: string;\n  }\n}\n\nexport const defaultTheme: DefaultTheme = {\n  fontColor: \"#172b4d\",\n  transparency: \"rgba(0, 0, 0, 0.32)\",\n  transparencyLight: \"rgba(0, 0, 0, 0.16)\",\n  scrollBar: \"#d9dce2\",\n  scrollThumb: \"#bdc3ce\",\n  listColor: \"#ebecf0\",\n  taskColor: \"white\",\n  green: \"#5aac44\",\n  red: \"#eb5a46\",\n  blue: \"#298fca\",\n  sky: \"#00c2e0\",\n  yellow: \"#f2d600\",\n  orange: \"#ff9f1a\",\n  purple: \"#c377e0\",\n  pink: \"#ff78cb\",\n  lime: \"#51e898\",\n  black: \"#344563\",\n};\n\nexport const GlobalStyles = createGlobalStyle`\n  * {\n    padding: 0;\n    margin: 0;\n    outline: 0;\n    box-sizing: border-box;\n    font-family: sans-serif;\n  }\n\n  body{\n    color: ${({ theme }) => theme.fontColor};\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n`;\n","import styled from \"styled-components\";\nimport { transparentize } from \"polished\";\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 40px;\n  padding: 4px;\n\n  display: flex;\n  background: ${({ theme }) => theme.transparency};\n`;\n\ninterface HeaderBtnWrapperProps {\n  right?: boolean;\n}\n\nexport const HeaderBtnWrapper = styled.div.attrs(\n  ({ right }: HeaderBtnWrapperProps) => ({\n    right: right || false,\n  })\n)`\n  width: 50%;\n  display: grid;\n  column-gap: 4px;\n  grid-auto-flow: column;\n  align-items: center;\n  justify-content: ${({ right }) => (right ? \"flex-end\" : \"flex-start\")};\n`;\n\ninterface HeaderBoxProps {\n  color?: string;\n}\n\nexport const HeaderBox = styled.div.attrs(\n  ({ color }): HeaderBoxProps => ({\n    color: color || \"rgba(255, 255, 255, .32)\",\n  })\n)`\n  border: none;\n  background: ${({ color }) => color};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  column-gap: 8px;\n  height: 32px;\n  min-width: 32px;\n  padding: 8px;\n  color: white;\n  font-weight: bolder;\n  font-size: 14px;\n  border-radius: 4px;\n  transition: background 0.2s;\n\n  &:hover {\n    background: ${({ color }) => transparentize(0.1, color as string)};\n  }\n`;\n\nexport const HeaderAvatar = styled.div`\n  border-radius: 50%;\n  width: 32px;\n  height: 32px;\n  background: #aaa;\n`;\n\nexport const HeaderInput = styled(HeaderBox)`\n  width: 100%;\n`;\n\nexport const HeaderTitle = styled.div`\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  position: absolute;\n  font-family: \"Pacifico\", cursive;\n  font-size: 20px;\n  display: flex;\n  align-items: center;\n  color: white;\n`;\n","import React from \"react\";\nimport { DiTrello } from \"react-icons/di\";\nimport { Container, HeaderTitle } from \"./styles\";\n\n\ninterface Props {}\n\nconst Header = (props: Props) => {\n  return (\n    <Container>\n      {/* <HeaderBtnWrapper>\n        <HeaderBox as=\"button\">\n          <BsFillGrid3X3GapFill size={16} color=\"white\" />\n        </HeaderBox>\n        <HeaderBox as=\"button\">\n          <AiOutlineHome size={18} color=\"white\" />\n        </HeaderBox>\n        <HeaderBox as=\"button\">\n          <FaTrello size={16} />\n          <p>Quadros</p>\n        </HeaderBox>\n        <HeaderBox as=\"input\" />\n      </HeaderBtnWrapper> */}\n      <HeaderTitle>\n        <DiTrello size={24} />\n        Fake Trello\n      </HeaderTitle>\n      {/* <HeaderBtnWrapper right>\n        <HeaderBox as=\"button\">\n          <FiPlus size={20} color=\"white\" />\n        </HeaderBox>\n        <HeaderBox as=\"button\">\n          <FiAlertCircle size={20} color=\"white\" />\n        </HeaderBox>\n        <HeaderBox as=\"button\" color=\"#eb5a46\">\n          <MdNotificationsNone size={20} color=\"white\" />\n        </HeaderBox>\n        <HeaderAvatar />\n      </HeaderBtnWrapper> */}\n    </Container>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Panel from \"./pages/panel\";\nimport { GlobalStyles, defaultTheme } from \"./styles\";\nimport { ThemeProvider } from \"styled-components\";\nimport Header from \"./components/header\";\nimport styled from \"styled-components\";\n\nfunction App() {\n  return (\n    <>\n      <ThemeProvider theme={defaultTheme}>\n        <GlobalStyles />\n        <Container>\n          <Header />\n          <Panel />\n        </Container>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  min-height: 100vh;\n\n  display: flex;\n  flex-direction: column;\n\n  background: #0079bf;\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}